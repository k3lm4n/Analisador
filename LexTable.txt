1 # TOKCARDINAL
1 include PALRESERVADA
1 < TOKMENORQUE
1 stdio TOKIDENTIFICADOR
1 . TOKPONTO
1 h TOKIDENTIFICADOR
2 > TOKMAIOR
2 # TOKCARDINAL
2 include PALRESERVADA
2 < TOKMENORQUE
2 stdlib TOKIDENTIFICADOR
2 . TOKPONTO
2 h TOKIDENTIFICADOR
3 > TOKMAIOR
3 # TOKCARDINAL
3 include PALRESERVADA
3 < TOKMENORQUE
3 string TOKIDENTIFICADOR
3 . TOKPONTO
3 h TOKIDENTIFICADOR
4 > TOKMAIOR
4 # TOKCARDINAL
4 include PALRESERVADA
5 # TOKCARDINAL
5 include PALRESERVADA
7 int PALRESERVADA
7 linha TOKIDENTIFICADOR
7 = TOKMUL
7 1 TOK_NINT
7 ; TOKPVIRGULA
9 tab TOKIDENTIFICADOR
10 { TOKCH_ABERTO
11 Elem TOKIDENTIFICADOR
11 * TOKMUL
11 lex TOKIDENTIFICADOR
11 ; TOKPVIRGULA
12 tab TOKIDENTIFICADOR
12 * TOKMUL
12 prox TOKIDENTIFICADOR
12 ; TOKPVIRGULA
13 } TOKCH_FECHADO
13 ; TOKPVIRGULA
14 elem TOKIDENTIFICADOR
15 { TOKCH_ABERTO
16 char PALRESERVADA
16 * TOKMUL
16 lexema TOKIDENTIFICADOR
16 ; TOKPVIRGULA
17 char PALRESERVADA
17 * TOKMUL
17 token TOKIDENTIFICADOR
17 ; TOKPVIRGULA
18 int PALRESERVADA
18 linha TOKIDENTIFICADOR
18 ; TOKPVIRGULA
19 } TOKCH_FECHADO
19 ; TOKPVIRGULA
20 void PALRESERVADA
20  TOKIDENTIFICADOR
20 criar TOKIDENTIFICADOR
20 ( TOKPS_ABERTO
20 tabela TOKIDENTIFICADOR
20 * TOKMUL
20 Table TOKIDENTIFICADOR
20 ) TOKPR_FECHADO
21 { TOKCH_ABERTO
22 Table TOKIDENTIFICADOR
22 = TOKMUL
22 ( TOKPS_ABERTO
22 tabela TOKIDENTIFICADOR
22 * TOKMUL
22 ) TOKPR_FECHADO
22 malloc TOKIDENTIFICADOR
22 ( TOKPS_ABERTO
22 sizeof PALRESERVADA
22 ( TOKPS_ABERTO
22 tabela TOKIDENTIFICADOR
22 ) TOKPR_FECHADO
22 ) TOKPR_FECHADO
22 ; TOKPVIRGULA
23 } TOKCH_FECHADO
25 void PALRESERVADA
25  TOKIDENTIFICADOR
25 add TOKIDENTIFICADOR
25 ( TOKPS_ABERTO
25 tabela TOKIDENTIFICADOR
25 * TOKMUL
25 Table TOKIDENTIFICADOR
25 , TOKVIRGULA
25 Elem TOKIDENTIFICADOR
25 lex TOKIDENTIFICADOR
25 ) TOKPR_FECHADO
26 { TOKCH_ABERTO
27 } TOKCH_FECHADO
28 char PALRESERVADA
28 lerChar TOKIDENTIFICADOR
28 ( TOKPS_ABERTO
28 FILE TOKIDENTIFICADOR
28 * TOKMUL
28 farq TOKIDENTIFICADOR
28 ) TOKPR_FECHADO
29 { TOKCH_ABERTO
31 if PALRESERVADA
31 ( TOKPS_ABERTO
31 farq TOKIDENTIFICADOR
31 == TOKATR_COMPOSTA
31 NULL TOKIDENTIFICADOR
31 ) TOKPR_FECHADO
31 { TOKCH_ABERTO
32 printf TOKIDENTIFICADOR
32 ( TOKPS_ABERTO
32 ) TOKPR_FECHADO
32 ; TOKPVIRGULA
33 exit TOKIDENTIFICADOR
33 ( TOKPS_ABERTO
33 1 TOK_NINT
33 ) TOKPR_FECHADO
33 ; TOKPVIRGULA
34 } TOKCH_FECHADO
36 return PALRESERVADA
36 fgetc TOKIDENTIFICADOR
36 ( TOKPS_ABERTO
36 farq TOKIDENTIFICADOR
36 ) TOKPR_FECHADO
36 ; TOKPVIRGULA
37 } TOKCH_FECHADO
38 void PALRESERVADA
38  TOKIDENTIFICADOR
38 volta_char TOKIDENTIFICADOR
38 ( TOKPS_ABERTO
38 FILE TOKIDENTIFICADOR
38 * TOKMUL
38 farq TOKIDENTIFICADOR
38 ) TOKPR_FECHADO
39 { TOKCH_ABERTO
40 fseek TOKIDENTIFICADOR
40 ( TOKPS_ABERTO
40 farq TOKIDENTIFICADOR
40 , TOKVIRGULA
40 -1 TOK_NINT
40 , TOKVIRGULA
40 SEEK_CUR TOKIDENTIFICADOR
40 ) TOKPR_FECHADO
40 ; TOKPVIRGULA
41 } TOKCH_FECHADO
42 void PALRESERVADA
42  TOKIDENTIFICADOR
42 analex TOKIDENTIFICADOR
42 ( TOKPS_ABERTO
42 int PALRESERVADA
42 estado TOKIDENTIFICADOR
42 , TOKVIRGULA
42 tabela TOKIDENTIFICADOR
42 * TOKMUL
42 LexTable TOKIDENTIFICADOR
42 ) TOKPR_FECHADO
43 { TOKCH_ABERTO
44 int PALRESERVADA
44 verifica TOKIDENTIFICADOR
44 = TOKMUL
44 1 TOK_NINT
44 ; TOKPVIRGULA
45 FILE TOKIDENTIFICADOR
45 * TOKMUL
45 farq TOKIDENTIFICADOR
45 ; TOKPVIRGULA
46 int PALRESERVADA
46 car TOKIDENTIFICADOR
46 = TOKMUL
46 0 TOK_NINT
46 , TOKVIRGULA
46 dot TOKIDENTIFICADOR
46 = TOKMUL
46 0 TOK_NINT
46 ; TOKPVIRGULA
47 farq TOKIDENTIFICADOR
47 = TOKMUL
47 fopen TOKIDENTIFICADOR
47 ( TOKPS_ABERTO
47 , TOKVIRGULA
47 ) TOKPR_FECHADO
47 ; TOKPVIRGULA
48 Elem TOKIDENTIFICADOR
48 lex TOKIDENTIFICADOR
48 ; TOKPVIRGULA
49 char PALRESERVADA
49 lexema TOKIDENTIFICADOR
49 [ TOKPR_ABERTO
49 999 TOK_NINT
49 ] TOKPR_FECHADO
49 = TOKMUL
49 ; TOKPVIRGULA
50 char PALRESERVADA
50 token TOKIDENTIFICADOR
50 [ TOKPR_ABERTO
50 999 TOK_NINT
50 ] TOKPR_FECHADO
50 = TOKMUL
50 ; TOKPVIRGULA
52 while PALRESERVADA
52 ( TOKPS_ABERTO
52 estado TOKIDENTIFICADOR
52 != TOKDIFE
52 -1 TOK_NINT
52 ) TOKPR_FECHADO
53 { TOKCH_ABERTO
55 if PALRESERVADA
55 ( TOKPS_ABERTO
55 verifica TOKIDENTIFICADOR
55 == TOKATR_COMPOSTA
55 1 TOK_NINT
55 ) TOKPR_FECHADO
56 { TOKCH_ABERTO
57 car TOKIDENTIFICADOR
57 = TOKMUL
57 ( TOKPS_ABERTO
57 int PALRESERVADA
57 ) TOKPR_FECHADO
57 lerChar TOKIDENTIFICADOR
57 ( TOKPS_ABERTO
57 farq TOKIDENTIFICADOR
57 ) TOKPR_FECHADO
57 ; TOKPVIRGULA
59 while PALRESERVADA
59 ( TOKPS_ABERTO
59 car TOKIDENTIFICADOR
59 == TOKATR_COMPOSTA
59 32 TOK_NINT
59 || TOKOR
59 car TOKIDENTIFICADOR
59 == TOKATR_COMPOSTA
59 10 TOK_NINT
59 ) TOKPR_FECHADO
60 { TOKCH_ABERTO
62 if PALRESERVADA
62 ( TOKPS_ABERTO
62 car TOKIDENTIFICADOR
62 == TOKATR_COMPOSTA
62 10 TOK_NINT
62 ) TOKPR_FECHADO
63 { TOKCH_ABERTO
64 linha TOKIDENTIFICADOR
64 ++ TOKINC
64 ; TOKPVIRGULA
65 } TOKCH_FECHADO
66 if PALRESERVADA
66 ( TOKPS_ABERTO
66 estado TOKIDENTIFICADOR
66 == TOKATR_COMPOSTA
66 1 TOK_NINT
66 ) TOKPR_FECHADO
67 { TOKCH_ABERTO
69 strcpy TOKIDENTIFICADOR
69 ( TOKPS_ABERTO
69 token TOKIDENTIFICADOR
69 , TOKVIRGULA
69 ) TOKPR_FECHADO
69 ; TOKPVIRGULA
70 printf TOKIDENTIFICADOR
70 ( TOKPS_ABERTO
70 , TOKVIRGULA
70 linha TOKIDENTIFICADOR
70 , TOKVIRGULA
70 lexema TOKIDENTIFICADOR
70 , TOKVIRGULA
70 token TOKIDENTIFICADOR
70 ) TOKPR_FECHADO
70 ; TOKPVIRGULA
71 fprintf TOKIDENTIFICADOR
71 ( TOKPS_ABERTO
71 pont_arq TOKIDENTIFICADOR
71 , TOKVIRGULA
71 , TOKVIRGULA
71 linha TOKIDENTIFICADOR
71 , TOKVIRGULA
71 lexema TOKIDENTIFICADOR
71 , TOKVIRGULA
71 token TOKIDENTIFICADOR
71 ) TOKPR_FECHADO
71 ; TOKPVIRGULA
72 lexema TOKIDENTIFICADOR
72 [ TOKPR_ABERTO
72 0 TOK_NINT
72 ] TOKPR_FECHADO
72 = TOKMUL
72 '\0' TOKCARATER
72 ; TOKPVIRGULA
73 } TOKCH_FECHADO
74 car TOKIDENTIFICADOR
74 = TOKMUL
74 ( TOKPS_ABERTO
74 int PALRESERVADA
74 ) TOKPR_FECHADO
74 lerChar TOKIDENTIFICADOR
74 ( TOKPS_ABERTO
74 farq TOKIDENTIFICADOR
74 ) TOKPR_FECHADO
74 ; TOKPVIRGULA
75 } TOKCH_FECHADO
76 } TOKCH_FECHADO
77 else PALRESERVADA
77 if PALRESERVADA
77 ( TOKPS_ABERTO
77 verifica TOKIDENTIFICADOR
77 == TOKATR_COMPOSTA
77 0 TOK_NINT
77 ) TOKPR_FECHADO
78 { TOKCH_ABERTO
79 car TOKIDENTIFICADOR
79 = TOKMUL
79 ( TOKPS_ABERTO
79 int PALRESERVADA
79 ) TOKPR_FECHADO
79 lerChar TOKIDENTIFICADOR
79 ( TOKPS_ABERTO
79 farq TOKIDENTIFICADOR
79 ) TOKPR_FECHADO
79 ; TOKPVIRGULA
80 verifica TOKIDENTIFICADOR
80 = TOKMUL
80 1 TOK_NINT
80 ; TOKPVIRGULA
81 } TOKCH_FECHADO
82 if PALRESERVADA
82 ( TOKPS_ABERTO
82 ( TOKPS_ABERTO
82 char PALRESERVADA
82 ) TOKPR_FECHADO
82 car TOKIDENTIFICADOR
82 == TOKATR_COMPOSTA
82 EOF TOKIDENTIFICADOR
82 ) TOKPR_FECHADO
83 { TOKCH_ABERTO
84 break PALRESERVADA
84 ; TOKPVIRGULA
85 } TOKCH_FECHADO
87 switch PALRESERVADA
87 ( TOKPS_ABERTO
87 estado TOKIDENTIFICADOR
87 ) TOKPR_FECHADO
88 { TOKCH_ABERTO
89 case PALRESERVADA
89 0 TOK_NINT
89 : TOKATR_BIT
91 if PALRESERVADA
91 ( TOKPS_ABERTO
91 ( TOKPS_ABERTO
91 car TOKIDENTIFICADOR
91 >= TOKMAIOR
91 65 TOK_NINT
91 && TOKAND
91 car TOKIDENTIFICADOR
91 <= TOKMENORQUE
91 90 TOK_NINT
91 ) TOKPR_FECHADO
91 || TOKOR
91 ( TOKPS_ABERTO
91 car TOKIDENTIFICADOR
91 >= TOKMAIOR
91 97 TOK_NINT
91 && TOKAND
91 car TOKIDENTIFICADOR
91 <= TOKMENORQUE
91 122 TOK_NINT
91 ) TOKPR_FECHADO
91 || TOKOR
91 car TOKIDENTIFICADOR
91 == TOKATR_COMPOSTA
91 95 TOK_NINT
91 ) TOKPR_FECHADO
92 { TOKCH_ABERTO
94 char PALRESERVADA
94 carac TOKIDENTIFICADOR
94 = TOKMUL
94 ( TOKPS_ABERTO
94 char PALRESERVADA
94 ) TOKPR_FECHADO
94 car TOKIDENTIFICADOR
94 ; TOKPVIRGULA
96 strncat TOKIDENTIFICADOR
96 ( TOKPS_ABERTO
96 lexema TOKIDENTIFICADOR
96 , TOKVIRGULA
96 & TOKANDBIT
96 carac TOKIDENTIFICADOR
96 , TOKVIRGULA
96 1 TOK_NINT
96 ) TOKPR_FECHADO
96 ; TOKPVIRGULA
98 estado TOKIDENTIFICADOR
98 = TOKMUL
98 1 TOK_NINT
98 ; TOKPVIRGULA
99 } TOKCH_FECHADO
100 else PALRESERVADA
100 if PALRESERVADA
100 ( TOKPS_ABERTO
100 car TOKIDENTIFICADOR
100 == TOKATR_COMPOSTA
100 45 TOK_NINT
100 ) TOKPR_FECHADO
101 { TOKCH_ABERTO
102 char PALRESERVADA
102 carac TOKIDENTIFICADOR
102 = TOKMUL
102 ( TOKPS_ABERTO
102 char PALRESERVADA
102 ) TOKPR_FECHADO
102 car TOKIDENTIFICADOR
102 ; TOKPVIRGULA
103 strncat TOKIDENTIFICADOR
103 ( TOKPS_ABERTO
103 lexema TOKIDENTIFICADOR
103 , TOKVIRGULA
103 & TOKANDBIT
103 carac TOKIDENTIFICADOR
103 , TOKVIRGULA
103 1 TOK_NINT
103 ) TOKPR_FECHADO
103 ; TOKPVIRGULA
104 estado TOKIDENTIFICADOR
104 = TOKMUL
104 33 TOK_NINT
104 ; TOKPVIRGULA
105 } TOKCH_FECHADO
106 else PALRESERVADA
106 if PALRESERVADA
106 ( TOKPS_ABERTO
106 car TOKIDENTIFICADOR
106 == TOKATR_COMPOSTA
106 43 TOK_NINT
106 ) TOKPR_FECHADO
107 { TOKCH_ABERTO
108 char PALRESERVADA
108 carac TOKIDENTIFICADOR
108 = TOKMUL
108 ( TOKPS_ABERTO
108 char PALRESERVADA
108 ) TOKPR_FECHADO
108 car TOKIDENTIFICADOR
108 ; TOKPVIRGULA
109 strncat TOKIDENTIFICADOR
109 ( TOKPS_ABERTO
109 lexema TOKIDENTIFICADOR
109 , TOKVIRGULA
109 & TOKANDBIT
109 carac TOKIDENTIFICADOR
109 , TOKVIRGULA
109 1 TOK_NINT
109 ) TOKPR_FECHADO
109 ; TOKPVIRGULA
110 estado TOKIDENTIFICADOR
110 = TOKMUL
110 14 TOK_NINT
110 ; TOKPVIRGULA
111 } TOKCH_FECHADO
112 else PALRESERVADA
112 if PALRESERVADA
112 ( TOKPS_ABERTO
112 car TOKIDENTIFICADOR
112 >= TOKMAIOR
112 48 TOK_NINT
112 && TOKAND
112 car TOKIDENTIFICADOR
112 <= TOKMENORQUE
112 57 TOK_NINT
112 ) TOKPR_FECHADO
113 { TOKCH_ABERTO
114 char PALRESERVADA
114 carac TOKIDENTIFICADOR
114 = TOKMUL
114 ( TOKPS_ABERTO
114 char PALRESERVADA
114 ) TOKPR_FECHADO
114 car TOKIDENTIFICADOR
114 ; TOKPVIRGULA
115 strncat TOKIDENTIFICADOR
115 ( TOKPS_ABERTO
115 lexema TOKIDENTIFICADOR
115 , TOKVIRGULA
115 & TOKANDBIT
115 carac TOKIDENTIFICADOR
115 , TOKVIRGULA
115 1 TOK_NINT
115 ) TOKPR_FECHADO
115 ; TOKPVIRGULA
116 estado TOKIDENTIFICADOR
116 = TOKMUL
116 37 TOK_NINT
116 ; TOKPVIRGULA
117 } TOKCH_FECHADO
118 else PALRESERVADA
118 if PALRESERVADA
118 ( TOKPS_ABERTO
118 car TOKIDENTIFICADOR
118 == TOKATR_COMPOSTA
118 34 TOK_NINT
118 ) TOKPR_FECHADO
119 { TOKCH_ABERTO
121 char PALRESERVADA
121 carac TOKIDENTIFICADOR
121 = TOKMUL
121 ( TOKPS_ABERTO
121 char PALRESERVADA
121 ) TOKPR_FECHADO
121 car TOKIDENTIFICADOR
121 ; TOKPVIRGULA
122 strncat TOKIDENTIFICADOR
122 ( TOKPS_ABERTO
122 lexema TOKIDENTIFICADOR
122 , TOKVIRGULA
122 & TOKANDBIT
122 carac TOKIDENTIFICADOR
122 , TOKVIRGULA
122 1 TOK_NINT
122 ) TOKPR_FECHADO
122 ; TOKPVIRGULA
123 estado TOKIDENTIFICADOR
123 = TOKMUL
123 49 TOK_NINT
123 ; TOKPVIRGULA
124 } TOKCH_FECHADO
125 else PALRESERVADA
125 if PALRESERVADA
125 ( TOKPS_ABERTO
125 car TOKIDENTIFICADOR
125 == TOKATR_COMPOSTA
125 47 TOK_NINT
125 ) TOKPR_FECHADO
126 { TOKCH_ABERTO
127 char PALRESERVADA
127 carac TOKIDENTIFICADOR
127 = TOKMUL
127 ( TOKPS_ABERTO
127 char PALRESERVADA
127 ) TOKPR_FECHADO
127 car TOKIDENTIFICADOR
127 ; TOKPVIRGULA
128 strncat TOKIDENTIFICADOR
128 ( TOKPS_ABERTO
128 lexema TOKIDENTIFICADOR
128 , TOKVIRGULA
128 & TOKANDBIT
128 carac TOKIDENTIFICADOR
128 , TOKVIRGULA
128 1 TOK_NINT
128 ) TOKPR_FECHADO
128 ; TOKPVIRGULA
129 estado TOKIDENTIFICADOR
129 = TOKMUL
129 41 TOK_NINT
129 ; TOKPVIRGULA
130 verifica TOKIDENTIFICADOR
130 = TOKMUL
130 0 TOK_NINT
130 ; TOKPVIRGULA
131 } TOKCH_FECHADO
132 else PALRESERVADA
132 if PALRESERVADA
132 ( TOKPS_ABERTO
132 car TOKIDENTIFICADOR
132 == TOKATR_COMPOSTA
132 42 TOK_NINT
132 ) TOKPR_FECHADO
133 { TOKCH_ABERTO
134 char PALRESERVADA
134 carac TOKIDENTIFICADOR
134 = TOKMUL
134 ( TOKPS_ABERTO
134 char PALRESERVADA
134 ) TOKPR_FECHADO
134 car TOKIDENTIFICADOR
134 ; TOKPVIRGULA
135 strncat TOKIDENTIFICADOR
135 ( TOKPS_ABERTO
135 lexema TOKIDENTIFICADOR
135 , TOKVIRGULA
135 & TOKANDBIT
135 carac TOKIDENTIFICADOR
135 , TOKVIRGULA
135 1 TOK_NINT
135 ) TOKPR_FECHADO
135 ; TOKPVIRGULA
136 estado TOKIDENTIFICADOR
136 = TOKMUL
136 21 TOK_NINT
136 ; TOKPVIRGULA
137 } TOKCH_FECHADO
138 else PALRESERVADA
138 if PALRESERVADA
138 ( TOKPS_ABERTO
138 car TOKIDENTIFICADOR
138 == TOKATR_COMPOSTA
138 47 TOK_NINT
138 ) TOKPR_FECHADO
139 { TOKCH_ABERTO
140 char PALRESERVADA
140 carac TOKIDENTIFICADOR
140 = TOKMUL
140 ( TOKPS_ABERTO
140 char PALRESERVADA
140 ) TOKPR_FECHADO
140 car TOKIDENTIFICADOR
140 ; TOKPVIRGULA
141 strncat TOKIDENTIFICADOR
141 ( TOKPS_ABERTO
141 lexema TOKIDENTIFICADOR
141 , TOKVIRGULA
141 & TOKANDBIT
141 carac TOKIDENTIFICADOR
141 , TOKVIRGULA
141 1 TOK_NINT
141 ) TOKPR_FECHADO
141 ; TOKPVIRGULA
142 estado TOKIDENTIFICADOR
142 = TOKMUL
142 41 TOK_NINT
142 ; TOKPVIRGULA
143 } TOKCH_FECHADO
144 else PALRESERVADA
144 if PALRESERVADA
144 ( TOKPS_ABERTO
144 car TOKIDENTIFICADOR
144 == TOKATR_COMPOSTA
144 60 TOK_NINT
144 ) TOKPR_FECHADO
145 { TOKCH_ABERTO
146 char PALRESERVADA
146 carac TOKIDENTIFICADOR
146 = TOKMUL
146 ( TOKPS_ABERTO
146 char PALRESERVADA
146 ) TOKPR_FECHADO
146 car TOKIDENTIFICADOR
146 ; TOKPVIRGULA
147 strncat TOKIDENTIFICADOR
147 ( TOKPS_ABERTO
147 lexema TOKIDENTIFICADOR
147 , TOKVIRGULA
147 & TOKANDBIT
147 carac TOKIDENTIFICADOR
147 , TOKVIRGULA
147 1 TOK_NINT
147 ) TOKPR_FECHADO
147 ; TOKPVIRGULA
148 estado TOKIDENTIFICADOR
148 = TOKMUL
148 7 TOK_NINT
148 ; TOKPVIRGULA
149 } TOKCH_FECHADO
150 else PALRESERVADA
150 if PALRESERVADA
150 ( TOKPS_ABERTO
150 car TOKIDENTIFICADOR
150 == TOKATR_COMPOSTA
150 62 TOK_NINT
150 ) TOKPR_FECHADO
151 { TOKCH_ABERTO
152 char PALRESERVADA
152 carac TOKIDENTIFICADOR
152 = TOKMUL
152 ( TOKPS_ABERTO
152 char PALRESERVADA
152 ) TOKPR_FECHADO
152 car TOKIDENTIFICADOR
152 ; TOKPVIRGULA
153 strncat TOKIDENTIFICADOR
153 ( TOKPS_ABERTO
153 lexema TOKIDENTIFICADOR
153 , TOKVIRGULA
153 & TOKANDBIT
153 carac TOKIDENTIFICADOR
153 , TOKVIRGULA
153 1 TOK_NINT
153 ) TOKPR_FECHADO
153 ; TOKPVIRGULA
154 estado TOKIDENTIFICADOR
154 = TOKMUL
154 3 TOK_NINT
154 ; TOKPVIRGULA
155 } TOKCH_FECHADO
156 else PALRESERVADA
156 if PALRESERVADA
156 ( TOKPS_ABERTO
156 car TOKIDENTIFICADOR
156 == TOKATR_COMPOSTA
156 33 TOK_NINT
156 ) TOKPR_FECHADO
157 { TOKCH_ABERTO
158 char PALRESERVADA
158 carac TOKIDENTIFICADOR
158 = TOKMUL
158 ( TOKPS_ABERTO
158 char PALRESERVADA
158 ) TOKPR_FECHADO
158 car TOKIDENTIFICADOR
158 ; TOKPVIRGULA
159 strncat TOKIDENTIFICADOR
159 ( TOKPS_ABERTO
159 lexema TOKIDENTIFICADOR
159 , TOKVIRGULA
159 & TOKANDBIT
159 carac TOKIDENTIFICADOR
159 , TOKVIRGULA
159 1 TOK_NINT
159 ) TOKPR_FECHADO
159 ; TOKPVIRGULA
160 estado TOKIDENTIFICADOR
160 = TOKMUL
160 18 TOK_NINT
160 ; TOKPVIRGULA
161 } TOKCH_FECHADO
162 else PALRESERVADA
162 if PALRESERVADA
162 ( TOKPS_ABERTO
162 car TOKIDENTIFICADOR
162 == TOKATR_COMPOSTA
162 61 TOK_NINT
162 ) TOKPR_FECHADO
163 { TOKCH_ABERTO
164 char PALRESERVADA
164 carac TOKIDENTIFICADOR
164 = TOKMUL
164 ( TOKPS_ABERTO
164 char PALRESERVADA
164 ) TOKPR_FECHADO
164 car TOKIDENTIFICADOR
164 ; TOKPVIRGULA
165 strncat TOKIDENTIFICADOR
165 ( TOKPS_ABERTO
165 lexema TOKIDENTIFICADOR
165 , TOKVIRGULA
165 & TOKANDBIT
165 carac TOKIDENTIFICADOR
165 , TOKVIRGULA
165 1 TOK_NINT
165 ) TOKPR_FECHADO
165 ; TOKPVIRGULA
166 estado TOKIDENTIFICADOR
166 = TOKMUL
166 21 TOK_NINT
166 ; TOKPVIRGULA
167 } TOKCH_FECHADO
168 else PALRESERVADA
168 if PALRESERVADA
168 ( TOKPS_ABERTO
168 car TOKIDENTIFICADOR
168 == TOKATR_COMPOSTA
168 39 TOK_NINT
168 ) TOKPR_FECHADO
169 { TOKCH_ABERTO
170 char PALRESERVADA
170 carac TOKIDENTIFICADOR
170 = TOKMUL
170 ( TOKPS_ABERTO
170 char PALRESERVADA
170 ) TOKPR_FECHADO
170 car TOKIDENTIFICADOR
170 ; TOKPVIRGULA
171 strncat TOKIDENTIFICADOR
171 ( TOKPS_ABERTO
171 lexema TOKIDENTIFICADOR
171 , TOKVIRGULA
171 & TOKANDBIT
171 carac TOKIDENTIFICADOR
171 , TOKVIRGULA
171 1 TOK_NINT
171 ) TOKPR_FECHADO
171 ; TOKPVIRGULA
172 estado TOKIDENTIFICADOR
172 = TOKMUL
172 57 TOK_NINT
172 ; TOKPVIRGULA
173 verifica TOKIDENTIFICADOR
173 = TOKMUL
173 0 TOK_NINT
173 ; TOKPVIRGULA
174 } TOKCH_FECHADO
175 else PALRESERVADA
175 if PALRESERVADA
175 ( TOKPS_ABERTO
175 car TOKIDENTIFICADOR
175 == TOKATR_COMPOSTA
175 124 TOK_NINT
175 ) TOKPR_FECHADO
176 { TOKCH_ABERTO
177 char PALRESERVADA
177 carac TOKIDENTIFICADOR
177 = TOKMUL
177 ( TOKPS_ABERTO
177 char PALRESERVADA
177 ) TOKPR_FECHADO
177 car TOKIDENTIFICADOR
177 ; TOKPVIRGULA
178 strncat TOKIDENTIFICADOR
178 ( TOKPS_ABERTO
178 lexema TOKIDENTIFICADOR
178 , TOKVIRGULA
178 & TOKANDBIT
178 carac TOKIDENTIFICADOR
178 , TOKVIRGULA
178 1 TOK_NINT
178 ) TOKPR_FECHADO
178 ; TOKPVIRGULA
179 estado TOKIDENTIFICADOR
179 = TOKMUL
179 54 TOK_NINT
179 ; TOKPVIRGULA
180 verifica TOKIDENTIFICADOR
180 = TOKMUL
180 0 TOK_NINT
180 ; TOKPVIRGULA
181 } TOKCH_FECHADO
182 else PALRESERVADA
182 if PALRESERVADA
182 ( TOKPS_ABERTO
182 car TOKIDENTIFICADOR
182 == TOKATR_COMPOSTA
182 126 TOK_NINT
182 ) TOKPR_FECHADO
183 { TOKCH_ABERTO
184 char PALRESERVADA
184 carac TOKIDENTIFICADOR
184 = TOKMUL
184 ( TOKPS_ABERTO
184 char PALRESERVADA
184 ) TOKPR_FECHADO
184 car TOKIDENTIFICADOR
184 ; TOKPVIRGULA
185 strncat TOKIDENTIFICADOR
185 ( TOKPS_ABERTO
185 lexema TOKIDENTIFICADOR
185 , TOKVIRGULA
185 & TOKANDBIT
185 carac TOKIDENTIFICADOR
185 , TOKVIRGULA
185 1 TOK_NINT
185 ) TOKPR_FECHADO
185 ; TOKPVIRGULA
186 estado TOKIDENTIFICADOR
186 = TOKMUL
186 60 TOK_NINT
186 ; TOKPVIRGULA
187 verifica TOKIDENTIFICADOR
187 = TOKMUL
187 0 TOK_NINT
187 ; TOKPVIRGULA
188 } TOKCH_FECHADO
189 else PALRESERVADA
189 if PALRESERVADA
189 ( TOKPS_ABERTO
189 car TOKIDENTIFICADOR
189 == TOKATR_COMPOSTA
189 44 TOK_NINT
189 ) TOKPR_FECHADO
190 { TOKCH_ABERTO
191 char PALRESERVADA
191 carac TOKIDENTIFICADOR
191 = TOKMUL
191 ( TOKPS_ABERTO
191 char PALRESERVADA
191 ) TOKPR_FECHADO
191 car TOKIDENTIFICADOR
191 ; TOKPVIRGULA
192 strncat TOKIDENTIFICADOR
192 ( TOKPS_ABERTO
192 lexema TOKIDENTIFICADOR
192 , TOKVIRGULA
192 & TOKANDBIT
192 carac TOKIDENTIFICADOR
192 , TOKVIRGULA
192 1 TOK_NINT
192 ) TOKPR_FECHADO
192 ; TOKPVIRGULA
193 estado TOKIDENTIFICADOR
193 = TOKMUL
193 61 TOK_NINT
193 ; TOKPVIRGULA
194 verifica TOKIDENTIFICADOR
194 = TOKMUL
194 0 TOK_NINT
194 ; TOKPVIRGULA
195 } TOKCH_FECHADO
196 else PALRESERVADA
196 if PALRESERVADA
196 ( TOKPS_ABERTO
196 car TOKIDENTIFICADOR
196 == TOKATR_COMPOSTA
196 41 TOK_NINT
196 ) TOKPR_FECHADO
197 { TOKCH_ABERTO
198 char PALRESERVADA
198 carac TOKIDENTIFICADOR
198 = TOKMUL
198 ( TOKPS_ABERTO
198 char PALRESERVADA
198 ) TOKPR_FECHADO
198 car TOKIDENTIFICADOR
198 ; TOKPVIRGULA
199 strncat TOKIDENTIFICADOR
199 ( TOKPS_ABERTO
199 lexema TOKIDENTIFICADOR
199 , TOKVIRGULA
199 & TOKANDBIT
199 carac TOKIDENTIFICADOR
199 , TOKVIRGULA
199 1 TOK_NINT
199 ) TOKPR_FECHADO
199 ; TOKPVIRGULA
200 estado TOKIDENTIFICADOR
200 = TOKMUL
200 32 TOK_NINT
200 ; TOKPVIRGULA
201 verifica TOKIDENTIFICADOR
201 = TOKMUL
201 0 TOK_NINT
201 ; TOKPVIRGULA
202 } TOKCH_FECHADO
203 else PALRESERVADA
203 if PALRESERVADA
203 ( TOKPS_ABERTO
203 car TOKIDENTIFICADOR
203 == TOKATR_COMPOSTA
203 40 TOK_NINT
203 ) TOKPR_FECHADO
204 { TOKCH_ABERTO
205 char PALRESERVADA
205 carac TOKIDENTIFICADOR
205 = TOKMUL
205 ( TOKPS_ABERTO
205 char PALRESERVADA
205 ) TOKPR_FECHADO
205 car TOKIDENTIFICADOR
205 ; TOKPVIRGULA
206 strncat TOKIDENTIFICADOR
206 ( TOKPS_ABERTO
206 lexema TOKIDENTIFICADOR
206 , TOKVIRGULA
206 & TOKANDBIT
206 carac TOKIDENTIFICADOR
206 , TOKVIRGULA
206 1 TOK_NINT
206 ) TOKPR_FECHADO
206 ; TOKPVIRGULA
207 estado TOKIDENTIFICADOR
207 = TOKMUL
207 31 TOK_NINT
207 ; TOKPVIRGULA
208 verifica TOKIDENTIFICADOR
208 = TOKMUL
208 0 TOK_NINT
208 ; TOKPVIRGULA
209 } TOKCH_FECHADO
210 else PALRESERVADA
210 if PALRESERVADA
210 ( TOKPS_ABERTO
210 car TOKIDENTIFICADOR
210 == TOKATR_COMPOSTA
210 91 TOK_NINT
210 ) TOKPR_FECHADO
211 { TOKCH_ABERTO
212 char PALRESERVADA
212 carac TOKIDENTIFICADOR
212 = TOKMUL
212 ( TOKPS_ABERTO
212 char PALRESERVADA
212 ) TOKPR_FECHADO
212 car TOKIDENTIFICADOR
212 ; TOKPVIRGULA
213 strncat TOKIDENTIFICADOR
213 ( TOKPS_ABERTO
213 lexema TOKIDENTIFICADOR
213 , TOKVIRGULA
213 & TOKANDBIT
213 carac TOKIDENTIFICADOR
213 , TOKVIRGULA
213 1 TOK_NINT
213 ) TOKPR_FECHADO
213 ; TOKPVIRGULA
214 estado TOKIDENTIFICADOR
214 = TOKMUL
214 62 TOK_NINT
214 ; TOKPVIRGULA
215 verifica TOKIDENTIFICADOR
215 = TOKMUL
215 0 TOK_NINT
215 ; TOKPVIRGULA
216 } TOKCH_FECHADO
217 else PALRESERVADA
217 if PALRESERVADA
217 ( TOKPS_ABERTO
217 car TOKIDENTIFICADOR
217 == TOKATR_COMPOSTA
217 93 TOK_NINT
217 ) TOKPR_FECHADO
218 { TOKCH_ABERTO
219 char PALRESERVADA
219 carac TOKIDENTIFICADOR
219 = TOKMUL
219 ( TOKPS_ABERTO
219 char PALRESERVADA
219 ) TOKPR_FECHADO
219 car TOKIDENTIFICADOR
219 ; TOKPVIRGULA
220 strncat TOKIDENTIFICADOR
220 ( TOKPS_ABERTO
220 lexema TOKIDENTIFICADOR
220 , TOKVIRGULA
220 & TOKANDBIT
220 carac TOKIDENTIFICADOR
220 , TOKVIRGULA
220 1 TOK_NINT
220 ) TOKPR_FECHADO
220 ; TOKPVIRGULA
221 estado TOKIDENTIFICADOR
221 = TOKMUL
221 63 TOK_NINT
221 ; TOKPVIRGULA
222 verifica TOKIDENTIFICADOR
222 = TOKMUL
222 0 TOK_NINT
222 ; TOKPVIRGULA
223 } TOKCH_FECHADO
224 else PALRESERVADA
224 if PALRESERVADA
224 ( TOKPS_ABERTO
224 car TOKIDENTIFICADOR
224 == TOKATR_COMPOSTA
224 123 TOK_NINT
224 ) TOKPR_FECHADO
225 { TOKCH_ABERTO
226 char PALRESERVADA
226 carac TOKIDENTIFICADOR
226 = TOKMUL
226 ( TOKPS_ABERTO
226 char PALRESERVADA
226 ) TOKPR_FECHADO
226 car TOKIDENTIFICADOR
226 ; TOKPVIRGULA
227 strncat TOKIDENTIFICADOR
227 ( TOKPS_ABERTO
227 lexema TOKIDENTIFICADOR
227 , TOKVIRGULA
227 & TOKANDBIT
227 carac TOKIDENTIFICADOR
227 , TOKVIRGULA
227 1 TOK_NINT
227 ) TOKPR_FECHADO
227 ; TOKPVIRGULA
228 estado TOKIDENTIFICADOR
228 = TOKMUL
228 28 TOK_NINT
228 ; TOKPVIRGULA
229 verifica TOKIDENTIFICADOR
229 = TOKMUL
229 0 TOK_NINT
229 ; TOKPVIRGULA
230 } TOKCH_FECHADO
231 else PALRESERVADA
231 if PALRESERVADA
231 ( TOKPS_ABERTO
231 car TOKIDENTIFICADOR
231 == TOKATR_COMPOSTA
231 125 TOK_NINT
231 ) TOKPR_FECHADO
232 { TOKCH_ABERTO
233 char PALRESERVADA
233 carac TOKIDENTIFICADOR
233 = TOKMUL
233 ( TOKPS_ABERTO
233 char PALRESERVADA
233 ) TOKPR_FECHADO
233 car TOKIDENTIFICADOR
233 ; TOKPVIRGULA
234 strncat TOKIDENTIFICADOR
234 ( TOKPS_ABERTO
234 lexema TOKIDENTIFICADOR
234 , TOKVIRGULA
234 & TOKANDBIT
234 carac TOKIDENTIFICADOR
234 , TOKVIRGULA
234 1 TOK_NINT
234 ) TOKPR_FECHADO
234 ; TOKPVIRGULA
235 estado TOKIDENTIFICADOR
235 = TOKMUL
235 29 TOK_NINT
235 ; TOKPVIRGULA
236 verifica TOKIDENTIFICADOR
236 = TOKMUL
236 0 TOK_NINT
236 ; TOKPVIRGULA
237 } TOKCH_FECHADO
238 else PALRESERVADA
238 if PALRESERVADA
238 ( TOKPS_ABERTO
238 car TOKIDENTIFICADOR
238 == TOKATR_COMPOSTA
238 58 TOK_NINT
238 ) TOKPR_FECHADO
239 { TOKCH_ABERTO
240 char PALRESERVADA
240 carac TOKIDENTIFICADOR
240 = TOKMUL
240 ( TOKPS_ABERTO
240 char PALRESERVADA
240 ) TOKPR_FECHADO
240 car TOKIDENTIFICADOR
240 ; TOKPVIRGULA
241 strncat TOKIDENTIFICADOR
241 ( TOKPS_ABERTO
241 lexema TOKIDENTIFICADOR
241 , TOKVIRGULA
241 & TOKANDBIT
241 carac TOKIDENTIFICADOR
241 , TOKVIRGULA
241 1 TOK_NINT
241 ) TOKPR_FECHADO
241 ; TOKPVIRGULA
242 estado TOKIDENTIFICADOR
242 = TOKMUL
242 64 TOK_NINT
242 ; TOKPVIRGULA
243 verifica TOKIDENTIFICADOR
243 = TOKMUL
243 0 TOK_NINT
243 ; TOKPVIRGULA
244 } TOKCH_FECHADO
245 else PALRESERVADA
245 if PALRESERVADA
245 ( TOKPS_ABERTO
245 car TOKIDENTIFICADOR
245 == TOKATR_COMPOSTA
245 59 TOK_NINT
245 ) TOKPR_FECHADO
246 { TOKCH_ABERTO
247 char PALRESERVADA
247 carac TOKIDENTIFICADOR
247 = TOKMUL
247 ( TOKPS_ABERTO
247 char PALRESERVADA
247 ) TOKPR_FECHADO
247 car TOKIDENTIFICADOR
247 ; TOKPVIRGULA
248 strncat TOKIDENTIFICADOR
248 ( TOKPS_ABERTO
248 lexema TOKIDENTIFICADOR
248 , TOKVIRGULA
248 & TOKANDBIT
248 carac TOKIDENTIFICADOR
248 , TOKVIRGULA
248 1 TOK_NINT
248 ) TOKPR_FECHADO
248 ; TOKPVIRGULA
249 estado TOKIDENTIFICADOR
249 = TOKMUL
249 30 TOK_NINT
249 ; TOKPVIRGULA
250 verifica TOKIDENTIFICADOR
250 = TOKMUL
250 0 TOK_NINT
250 ; TOKPVIRGULA
251 } TOKCH_FECHADO
252 else PALRESERVADA
252 if PALRESERVADA
252 ( TOKPS_ABERTO
252 car TOKIDENTIFICADOR
252 == TOKATR_COMPOSTA
252 37 TOK_NINT
252 ) TOKPR_FECHADO
253 { TOKCH_ABERTO
254 char PALRESERVADA
254 carac TOKIDENTIFICADOR
254 = TOKMUL
254 ( TOKPS_ABERTO
254 char PALRESERVADA
254 ) TOKPR_FECHADO
254 car TOKIDENTIFICADOR
254 ; TOKPVIRGULA
255 strncat TOKIDENTIFICADOR
255 ( TOKPS_ABERTO
255 lexema TOKIDENTIFICADOR
255 , TOKVIRGULA
255 & TOKANDBIT
255 carac TOKIDENTIFICADOR
255 , TOKVIRGULA
255 1 TOK_NINT
255 ) TOKPR_FECHADO
255 ; TOKPVIRGULA
256 estado TOKIDENTIFICADOR
256 = TOKMUL
256 65 TOK_NINT
256 ; TOKPVIRGULA
257 } TOKCH_FECHADO
258 else PALRESERVADA
258 if PALRESERVADA
258 ( TOKPS_ABERTO
258 car TOKIDENTIFICADOR
258 == TOKATR_COMPOSTA
258 38 TOK_NINT
258 ) TOKPR_FECHADO
259 { TOKCH_ABERTO
260 char PALRESERVADA
260 carac TOKIDENTIFICADOR
260 = TOKMUL
260 ( TOKPS_ABERTO
260 char PALRESERVADA
260 ) TOKPR_FECHADO
260 car TOKIDENTIFICADOR
260 ; TOKPVIRGULA
261 strncat TOKIDENTIFICADOR
261 ( TOKPS_ABERTO
261 lexema TOKIDENTIFICADOR
261 , TOKVIRGULA
261 & TOKANDBIT
261 carac TOKIDENTIFICADOR
261 , TOKVIRGULA
261 1 TOK_NINT
261 ) TOKPR_FECHADO
261 ; TOKPVIRGULA
262 estado TOKIDENTIFICADOR
262 = TOKMUL
262 51 TOK_NINT
262 ; TOKPVIRGULA
263 verifica TOKIDENTIFICADOR
263 = TOKMUL
263 0 TOK_NINT
263 ; TOKPVIRGULA
264 } TOKCH_FECHADO
265 else PALRESERVADA
265 if PALRESERVADA
265 ( TOKPS_ABERTO
265 car TOKIDENTIFICADOR
265 == TOKATR_COMPOSTA
265 94 TOK_NINT
265 ) TOKPR_FECHADO
266 { TOKCH_ABERTO
267 char PALRESERVADA
267 carac TOKIDENTIFICADOR
267 = TOKMUL
267 ( TOKPS_ABERTO
267 char PALRESERVADA
267 ) TOKPR_FECHADO
267 car TOKIDENTIFICADOR
267 ; TOKPVIRGULA
268 strncat TOKIDENTIFICADOR
268 ( TOKPS_ABERTO
268 lexema TOKIDENTIFICADOR
268 , TOKVIRGULA
268 & TOKANDBIT
268 carac TOKIDENTIFICADOR
268 , TOKVIRGULA
268 1 TOK_NINT
268 ) TOKPR_FECHADO
268 ; TOKPVIRGULA
269 estado TOKIDENTIFICADOR
269 = TOKMUL
269 66 TOK_NINT
269 ; TOKPVIRGULA
270 } TOKCH_FECHADO
271 else PALRESERVADA
271 if PALRESERVADA
271 ( TOKPS_ABERTO
271 car TOKIDENTIFICADOR
271 == TOKATR_COMPOSTA
271 35 TOK_NINT
271 ) TOKPR_FECHADO
272 { TOKCH_ABERTO
273 char PALRESERVADA
273 carac TOKIDENTIFICADOR
273 = TOKMUL
273 ( TOKPS_ABERTO
273 char PALRESERVADA
273 ) TOKPR_FECHADO
273 car TOKIDENTIFICADOR
273 ; TOKPVIRGULA
274 strncat TOKIDENTIFICADOR
274 ( TOKPS_ABERTO
274 lexema TOKIDENTIFICADOR
274 , TOKVIRGULA
274 & TOKANDBIT
274 carac TOKIDENTIFICADOR
274 , TOKVIRGULA
274 1 TOK_NINT
274 ) TOKPR_FECHADO
274 ; TOKPVIRGULA
275 estado TOKIDENTIFICADOR
275 = TOKMUL
275 67 TOK_NINT
275 ; TOKPVIRGULA
276 } TOKCH_FECHADO
277 else PALRESERVADA
277 if PALRESERVADA
277 ( TOKPS_ABERTO
277 car TOKIDENTIFICADOR
277 == TOKATR_COMPOSTA
277 46 TOK_NINT
277 ) TOKPR_FECHADO
278 { TOKCH_ABERTO
279 char PALRESERVADA
279 carac TOKIDENTIFICADOR
279 = TOKMUL
279 ( TOKPS_ABERTO
279 char PALRESERVADA
279 ) TOKPR_FECHADO
279 car TOKIDENTIFICADOR
279 ; TOKPVIRGULA
280 strncat TOKIDENTIFICADOR
280 ( TOKPS_ABERTO
280 lexema TOKIDENTIFICADOR
280 , TOKVIRGULA
280 & TOKANDBIT
280 carac TOKIDENTIFICADOR
280 , TOKVIRGULA
280 1 TOK_NINT
280 ) TOKPR_FECHADO
280 ; TOKPVIRGULA
281 estado TOKIDENTIFICADOR
281 = TOKMUL
281 68 TOK_NINT
281 ; TOKPVIRGULA
282 } TOKCH_FECHADO
283 else PALRESERVADA
284 { TOKCH_ABERTO
285 estado TOKIDENTIFICADOR
285 = TOKMUL
285 -1 TOK_NINT
285 ; TOKPVIRGULA
286 } TOKCH_FECHADO
288 break PALRESERVADA
288 ; TOKPVIRGULA
289 case PALRESERVADA
289 1 TOK_NINT
289 : TOKATR_BIT
291 while PALRESERVADA
291 ( TOKPS_ABERTO
291 ( TOKPS_ABERTO
291 car TOKIDENTIFICADOR
291 >= TOKMAIOR
291 65 TOK_NINT
291 && TOKAND
291 car TOKIDENTIFICADOR
291 <= TOKMENORQUE
291 90 TOK_NINT
291 ) TOKPR_FECHADO
291 || TOKOR
291 ( TOKPS_ABERTO
291 car TOKIDENTIFICADOR
291 >= TOKMAIOR
291 97 TOK_NINT
291 && TOKAND
291 car TOKIDENTIFICADOR
291 <= TOKMENORQUE
291 122 TOK_NINT
291 ) TOKPR_FECHADO
291 || TOKOR
291 car TOKIDENTIFICADOR
291 == TOKATR_COMPOSTA
291 95 TOK_NINT
291 || TOKOR
291 ( TOKPS_ABERTO
291 car TOKIDENTIFICADOR
291 >= TOKMAIOR
291 48 TOK_NINT
291 && TOKAND
291 car TOKIDENTIFICADOR
291 <= TOKMENORQUE
291 57 TOK_NINT
291 ) TOKPR_FECHADO
291 ) TOKPR_FECHADO
292 { TOKCH_ABERTO
294 char PALRESERVADA
294 carac TOKIDENTIFICADOR
294 = TOKMUL
294 ( TOKPS_ABERTO
294 char PALRESERVADA
294 ) TOKPR_FECHADO
294 car TOKIDENTIFICADOR
294 ; TOKPVIRGULA
296 strncat TOKIDENTIFICADOR
296 ( TOKPS_ABERTO
296 lexema TOKIDENTIFICADOR
296 , TOKVIRGULA
296 & TOKANDBIT
296 carac TOKIDENTIFICADOR
296 , TOKVIRGULA
296 1 TOK_NINT
296 ) TOKPR_FECHADO
296 ; TOKPVIRGULA
297 car TOKIDENTIFICADOR
297 = TOKMUL
297 ( TOKPS_ABERTO
297 int PALRESERVADA
297 ) TOKPR_FECHADO
297 lerChar TOKIDENTIFICADOR
297 ( TOKPS_ABERTO
297 farq TOKIDENTIFICADOR
297 ) TOKPR_FECHADO
297 ; TOKPVIRGULA
298 } TOKCH_FECHADO
299 volta_char TOKIDENTIFICADOR
299 ( TOKPS_ABERTO
299 farq TOKIDENTIFICADOR
299 ) TOKPR_FECHADO
299 ; TOKPVIRGULA
300 if PALRESERVADA
300 ( TOKPS_ABERTO
300 strcmp TOKIDENTIFICADOR
300 ( TOKPS_ABERTO
300 lexema TOKIDENTIFICADOR
300 , TOKVIRGULA
300 TOKAUTO TOKIDENTIFICADOR
300 [ TOKPR_ABERTO
300 0 TOK_NINT
300 ] TOKPR_FECHADO
300 ) TOKPR_FECHADO
300 == TOKATR_COMPOSTA
300 0 TOK_NINT
300 ) TOKPR_FECHADO
301 { TOKCH_ABERTO
302 strcpy TOKIDENTIFICADOR
302 ( TOKPS_ABERTO
302 token TOKIDENTIFICADOR
302 , TOKVIRGULA
302 TOKAUTO TOKIDENTIFICADOR
302 [ TOKPR_ABERTO
302 1 TOK_NINT
302 ] TOKPR_FECHADO
302 ) TOKPR_FECHADO
302 ; TOKPVIRGULA
303 printf TOKIDENTIFICADOR
303 ( TOKPS_ABERTO
303 , TOKVIRGULA
303 linha TOKIDENTIFICADOR
303 , TOKVIRGULA
303 lexema TOKIDENTIFICADOR
303 , TOKVIRGULA
303 token TOKIDENTIFICADOR
303 ) TOKPR_FECHADO
303 ; TOKPVIRGULA
304 fprintf TOKIDENTIFICADOR
304 ( TOKPS_ABERTO
304 pont_arq TOKIDENTIFICADOR
304 , TOKVIRGULA
304 , TOKVIRGULA
304 linha TOKIDENTIFICADOR
304 , TOKVIRGULA
304 lexema TOKIDENTIFICADOR
304 , TOKVIRGULA
304 token TOKIDENTIFICADOR
304 ) TOKPR_FECHADO
304 ; TOKPVIRGULA
305 lexema TOKIDENTIFICADOR
305 [ TOKPR_ABERTO
305 0 TOK_NINT
305 ] TOKPR_FECHADO
305 = TOKMUL
305 '\0' TOKCARATER
305 ; TOKPVIRGULA
306 estado TOKIDENTIFICADOR
306 = TOKMUL
306 0 TOK_NINT
306 ; TOKPVIRGULA
307 } TOKCH_FECHADO
308 else PALRESERVADA
308 if PALRESERVADA
308 ( TOKPS_ABERTO
308 strcmp TOKIDENTIFICADOR
308 ( TOKPS_ABERTO
308 lexema TOKIDENTIFICADOR
308 , TOKVIRGULA
308 TOKBREAK TOKIDENTIFICADOR
308 [ TOKPR_ABERTO
308 0 TOK_NINT
308 ] TOKPR_FECHADO
308 ) TOKPR_FECHADO
308 == TOKATR_COMPOSTA
308 0 TOK_NINT
308 ) TOKPR_FECHADO
309 { TOKCH_ABERTO
310 strcpy TOKIDENTIFICADOR
310 ( TOKPS_ABERTO
310 token TOKIDENTIFICADOR
310 , TOKVIRGULA
310 TOKBREAK TOKIDENTIFICADOR
310 [ TOKPR_ABERTO
310 1 TOK_NINT
310 ] TOKPR_FECHADO
310 ) TOKPR_FECHADO
310 ; TOKPVIRGULA
311 printf TOKIDENTIFICADOR
311 ( TOKPS_ABERTO
311 , TOKVIRGULA
311 linha TOKIDENTIFICADOR
311 , TOKVIRGULA
311 lexema TOKIDENTIFICADOR
311 , TOKVIRGULA
311 token TOKIDENTIFICADOR
311 ) TOKPR_FECHADO
311 ; TOKPVIRGULA
312 fprintf TOKIDENTIFICADOR
312 ( TOKPS_ABERTO
312 pont_arq TOKIDENTIFICADOR
312 , TOKVIRGULA
312 , TOKVIRGULA
312 linha TOKIDENTIFICADOR
312 , TOKVIRGULA
312 lexema TOKIDENTIFICADOR
312 , TOKVIRGULA
312 token TOKIDENTIFICADOR
312 ) TOKPR_FECHADO
312 ; TOKPVIRGULA
313 lexema TOKIDENTIFICADOR
313 [ TOKPR_ABERTO
313 0 TOK_NINT
313 ] TOKPR_FECHADO
313 = TOKMUL
313 '\0' TOKCARATER
313 ; TOKPVIRGULA
314 estado TOKIDENTIFICADOR
314 = TOKMUL
314 0 TOK_NINT
314 ; TOKPVIRGULA
315 } TOKCH_FECHADO
316 else PALRESERVADA
316 if PALRESERVADA
316 ( TOKPS_ABERTO
316 strcmp TOKIDENTIFICADOR
316 ( TOKPS_ABERTO
316 lexema TOKIDENTIFICADOR
316 , TOKVIRGULA
316 TOKCASE TOKIDENTIFICADOR
316 [ TOKPR_ABERTO
316 0 TOK_NINT
316 ] TOKPR_FECHADO
316 ) TOKPR_FECHADO
316 == TOKATR_COMPOSTA
316 0 TOK_NINT
316 ) TOKPR_FECHADO
317 { TOKCH_ABERTO
319 strcpy TOKIDENTIFICADOR
319 ( TOKPS_ABERTO
319 token TOKIDENTIFICADOR
319 , TOKVIRGULA
319 TOKCASE TOKIDENTIFICADOR
319 [ TOKPR_ABERTO
319 1 TOK_NINT
319 ] TOKPR_FECHADO
319 ) TOKPR_FECHADO
319 ; TOKPVIRGULA
320 printf TOKIDENTIFICADOR
320 ( TOKPS_ABERTO
320 , TOKVIRGULA
320 linha TOKIDENTIFICADOR
320 , TOKVIRGULA
320 lexema TOKIDENTIFICADOR
320 , TOKVIRGULA
320 token TOKIDENTIFICADOR
320 ) TOKPR_FECHADO
320 ; TOKPVIRGULA
321 fprintf TOKIDENTIFICADOR
321 ( TOKPS_ABERTO
321 pont_arq TOKIDENTIFICADOR
321 , TOKVIRGULA
321 , TOKVIRGULA
321 linha TOKIDENTIFICADOR
321 , TOKVIRGULA
321 lexema TOKIDENTIFICADOR
321 , TOKVIRGULA
321 token TOKIDENTIFICADOR
321 ) TOKPR_FECHADO
321 ; TOKPVIRGULA
322 lexema TOKIDENTIFICADOR
322 [ TOKPR_ABERTO
322 0 TOK_NINT
322 ] TOKPR_FECHADO
322 = TOKMUL
322 '\0' TOKCARATER
322 ; TOKPVIRGULA
323 estado TOKIDENTIFICADOR
323 = TOKMUL
323 0 TOK_NINT
323 ; TOKPVIRGULA
324 } TOKCH_FECHADO
325 else PALRESERVADA
325 if PALRESERVADA
325 ( TOKPS_ABERTO
325 strcmp TOKIDENTIFICADOR
325 ( TOKPS_ABERTO
325 lexema TOKIDENTIFICADOR
325 , TOKVIRGULA
325 TOKCHAR TOKIDENTIFICADOR
325 [ TOKPR_ABERTO
325 0 TOK_NINT
325 ] TOKPR_FECHADO
325 ) TOKPR_FECHADO
325 == TOKATR_COMPOSTA
325 0 TOK_NINT
325 ) TOKPR_FECHADO
326 { TOKCH_ABERTO
328 strcpy TOKIDENTIFICADOR
328 ( TOKPS_ABERTO
328 token TOKIDENTIFICADOR
328 , TOKVIRGULA
328 TOKCHAR TOKIDENTIFICADOR
328 [ TOKPR_ABERTO
328 1 TOK_NINT
328 ] TOKPR_FECHADO
328 ) TOKPR_FECHADO
328 ; TOKPVIRGULA
330 printf TOKIDENTIFICADOR
330 ( TOKPS_ABERTO
330 , TOKVIRGULA
330 linha TOKIDENTIFICADOR
330 , TOKVIRGULA
330 lexema TOKIDENTIFICADOR
330 , TOKVIRGULA
330 token TOKIDENTIFICADOR
330 ) TOKPR_FECHADO
330 ; TOKPVIRGULA
331 fprintf TOKIDENTIFICADOR
331 ( TOKPS_ABERTO
331 pont_arq TOKIDENTIFICADOR
331 , TOKVIRGULA
331 , TOKVIRGULA
331 linha TOKIDENTIFICADOR
331 , TOKVIRGULA
331 lexema TOKIDENTIFICADOR
331 , TOKVIRGULA
331 token TOKIDENTIFICADOR
331 ) TOKPR_FECHADO
331 ; TOKPVIRGULA
332 lexema TOKIDENTIFICADOR
332 [ TOKPR_ABERTO
332 0 TOK_NINT
332 ] TOKPR_FECHADO
332 = TOKMUL
332 '\0' TOKCARATER
332 ; TOKPVIRGULA
333 estado TOKIDENTIFICADOR
333 = TOKMUL
333 0 TOK_NINT
333 ; TOKPVIRGULA
334 } TOKCH_FECHADO
335 else PALRESERVADA
335 if PALRESERVADA
335 ( TOKPS_ABERTO
335 strcmp TOKIDENTIFICADOR
335 ( TOKPS_ABERTO
335 lexema TOKIDENTIFICADOR
335 , TOKVIRGULA
335 TOKCONST TOKIDENTIFICADOR
335 [ TOKPR_ABERTO
335 0 TOK_NINT
335 ] TOKPR_FECHADO
335 ) TOKPR_FECHADO
335 == TOKATR_COMPOSTA
335 0 TOK_NINT
335 ) TOKPR_FECHADO
336 { TOKCH_ABERTO
337 strcpy TOKIDENTIFICADOR
337 ( TOKPS_ABERTO
337 token TOKIDENTIFICADOR
337 , TOKVIRGULA
337 TOKCONST TOKIDENTIFICADOR
337 [ TOKPR_ABERTO
337 1 TOK_NINT
337 ] TOKPR_FECHADO
337 ) TOKPR_FECHADO
337 ; TOKPVIRGULA
338 printf TOKIDENTIFICADOR
338 ( TOKPS_ABERTO
338 , TOKVIRGULA
338 linha TOKIDENTIFICADOR
338 , TOKVIRGULA
338 lexema TOKIDENTIFICADOR
338 , TOKVIRGULA
338 token TOKIDENTIFICADOR
338 ) TOKPR_FECHADO
338 ; TOKPVIRGULA
339 fprintf TOKIDENTIFICADOR
339 ( TOKPS_ABERTO
339 pont_arq TOKIDENTIFICADOR
339 , TOKVIRGULA
339 , TOKVIRGULA
339 linha TOKIDENTIFICADOR
339 , TOKVIRGULA
339 lexema TOKIDENTIFICADOR
339 , TOKVIRGULA
339 token TOKIDENTIFICADOR
339 ) TOKPR_FECHADO
339 ; TOKPVIRGULA
340 lexema TOKIDENTIFICADOR
340 [ TOKPR_ABERTO
340 0 TOK_NINT
340 ] TOKPR_FECHADO
340 = TOKMUL
340 '\0' TOKCARATER
340 ; TOKPVIRGULA
341 estado TOKIDENTIFICADOR
341 = TOKMUL
341 0 TOK_NINT
341 ; TOKPVIRGULA
342 } TOKCH_FECHADO
343 else PALRESERVADA
343 if PALRESERVADA
343 ( TOKPS_ABERTO
343 strcmp TOKIDENTIFICADOR
343 ( TOKPS_ABERTO
343 lexema TOKIDENTIFICADOR
343 , TOKVIRGULA
343 TOKCONTINUE TOKIDENTIFICADOR
343 [ TOKPR_ABERTO
343 0 TOK_NINT
343 ] TOKPR_FECHADO
343 ) TOKPR_FECHADO
343 == TOKATR_COMPOSTA
343 0 TOK_NINT
343 ) TOKPR_FECHADO
344 { TOKCH_ABERTO
346 strcpy TOKIDENTIFICADOR
346 ( TOKPS_ABERTO
346 token TOKIDENTIFICADOR
346 , TOKVIRGULA
346 TOKCONTINUE TOKIDENTIFICADOR
346 [ TOKPR_ABERTO
346 1 TOK_NINT
346 ] TOKPR_FECHADO
346 ) TOKPR_FECHADO
346 ; TOKPVIRGULA
348 printf TOKIDENTIFICADOR
348 ( TOKPS_ABERTO
348 , TOKVIRGULA
348 linha TOKIDENTIFICADOR
348 , TOKVIRGULA
348 lexema TOKIDENTIFICADOR
348 , TOKVIRGULA
348 token TOKIDENTIFICADOR
348 ) TOKPR_FECHADO
348 ; TOKPVIRGULA
349 fprintf TOKIDENTIFICADOR
349 ( TOKPS_ABERTO
349 pont_arq TOKIDENTIFICADOR
349 , TOKVIRGULA
349 , TOKVIRGULA
349 linha TOKIDENTIFICADOR
349 , TOKVIRGULA
349 lexema TOKIDENTIFICADOR
349 , TOKVIRGULA
349 token TOKIDENTIFICADOR
349 ) TOKPR_FECHADO
349 ; TOKPVIRGULA
350 lexema TOKIDENTIFICADOR
350 [ TOKPR_ABERTO
350 0 TOK_NINT
350 ] TOKPR_FECHADO
350 = TOKMUL
350 '\0' TOKCARATER
350 ; TOKPVIRGULA
351 estado TOKIDENTIFICADOR
351 = TOKMUL
351 0 TOK_NINT
351 ; TOKPVIRGULA
352 } TOKCH_FECHADO
353 else PALRESERVADA
353 if PALRESERVADA
353 ( TOKPS_ABERTO
353 strcmp TOKIDENTIFICADOR
353 ( TOKPS_ABERTO
353 lexema TOKIDENTIFICADOR
353 , TOKVIRGULA
353 TOKDEFAULT TOKIDENTIFICADOR
353 [ TOKPR_ABERTO
353 0 TOK_NINT
353 ] TOKPR_FECHADO
353 ) TOKPR_FECHADO
353 == TOKATR_COMPOSTA
353 0 TOK_NINT
353 ) TOKPR_FECHADO
354 { TOKCH_ABERTO
356 strcpy TOKIDENTIFICADOR
356 ( TOKPS_ABERTO
356 token TOKIDENTIFICADOR
356 , TOKVIRGULA
356 TOKDEFAULT TOKIDENTIFICADOR
356 [ TOKPR_ABERTO
356 1 TOK_NINT
356 ] TOKPR_FECHADO
356 ) TOKPR_FECHADO
356 ; TOKPVIRGULA
358 printf TOKIDENTIFICADOR
358 ( TOKPS_ABERTO
358 , TOKVIRGULA
358 linha TOKIDENTIFICADOR
358 , TOKVIRGULA
358 lexema TOKIDENTIFICADOR
358 , TOKVIRGULA
358 token TOKIDENTIFICADOR
358 ) TOKPR_FECHADO
358 ; TOKPVIRGULA
359 fprintf TOKIDENTIFICADOR
359 ( TOKPS_ABERTO
359 pont_arq TOKIDENTIFICADOR
359 , TOKVIRGULA
359 , TOKVIRGULA
359 linha TOKIDENTIFICADOR
359 , TOKVIRGULA
359 lexema TOKIDENTIFICADOR
359 , TOKVIRGULA
359 token TOKIDENTIFICADOR
359 ) TOKPR_FECHADO
359 ; TOKPVIRGULA
360 lexema TOKIDENTIFICADOR
360 [ TOKPR_ABERTO
360 0 TOK_NINT
360 ] TOKPR_FECHADO
360 = TOKMUL
360 '\0' TOKCARATER
360 ; TOKPVIRGULA
361 estado TOKIDENTIFICADOR
361 = TOKMUL
361 0 TOK_NINT
361 ; TOKPVIRGULA
362 } TOKCH_FECHADO
363 else PALRESERVADA
363 if PALRESERVADA
363 ( TOKPS_ABERTO
363 strcmp TOKIDENTIFICADOR
363 ( TOKPS_ABERTO
363 lexema TOKIDENTIFICADOR
363 , TOKVIRGULA
363 TOKDO TOKIDENTIFICADOR
363 [ TOKPR_ABERTO
363 0 TOK_NINT
363 ] TOKPR_FECHADO
363 ) TOKPR_FECHADO
363 == TOKATR_COMPOSTA
363 0 TOK_NINT
363 ) TOKPR_FECHADO
364 { TOKCH_ABERTO
366 strcpy TOKIDENTIFICADOR
366 ( TOKPS_ABERTO
366 token TOKIDENTIFICADOR
366 , TOKVIRGULA
366 TOKDO TOKIDENTIFICADOR
366 [ TOKPR_ABERTO
366 1 TOK_NINT
366 ] TOKPR_FECHADO
366 ) TOKPR_FECHADO
366 ; TOKPVIRGULA
368 printf TOKIDENTIFICADOR
368 ( TOKPS_ABERTO
368 , TOKVIRGULA
368 linha TOKIDENTIFICADOR
368 , TOKVIRGULA
368 lexema TOKIDENTIFICADOR
368 , TOKVIRGULA
368 token TOKIDENTIFICADOR
368 ) TOKPR_FECHADO
368 ; TOKPVIRGULA
369 fprintf TOKIDENTIFICADOR
369 ( TOKPS_ABERTO
369 pont_arq TOKIDENTIFICADOR
369 , TOKVIRGULA
369 , TOKVIRGULA
369 linha TOKIDENTIFICADOR
369 , TOKVIRGULA
369 lexema TOKIDENTIFICADOR
369 , TOKVIRGULA
369 token TOKIDENTIFICADOR
369 ) TOKPR_FECHADO
369 ; TOKPVIRGULA
370 lexema TOKIDENTIFICADOR
370 [ TOKPR_ABERTO
370 0 TOK_NINT
370 ] TOKPR_FECHADO
370 = TOKMUL
370 '\0' TOKCARATER
370 ; TOKPVIRGULA
371 estado TOKIDENTIFICADOR
371 = TOKMUL
371 0 TOK_NINT
371 ; TOKPVIRGULA
372 } TOKCH_FECHADO
373 else PALRESERVADA
373 if PALRESERVADA
373 ( TOKPS_ABERTO
373 strcmp TOKIDENTIFICADOR
373 ( TOKPS_ABERTO
373 lexema TOKIDENTIFICADOR
373 , TOKVIRGULA
373 TOKDOUBLE TOKIDENTIFICADOR
373 [ TOKPR_ABERTO
373 0 TOK_NINT
373 ] TOKPR_FECHADO
373 ) TOKPR_FECHADO
373 == TOKATR_COMPOSTA
373 0 TOK_NINT
373 ) TOKPR_FECHADO
374 { TOKCH_ABERTO
376 strcpy TOKIDENTIFICADOR
376 ( TOKPS_ABERTO
376 token TOKIDENTIFICADOR
376 , TOKVIRGULA
376 TOKDOUBLE TOKIDENTIFICADOR
376 [ TOKPR_ABERTO
376 1 TOK_NINT
376 ] TOKPR_FECHADO
376 ) TOKPR_FECHADO
376 ; TOKPVIRGULA
378 printf TOKIDENTIFICADOR
378 ( TOKPS_ABERTO
378 , TOKVIRGULA
378 linha TOKIDENTIFICADOR
378 , TOKVIRGULA
378 lexema TOKIDENTIFICADOR
378 , TOKVIRGULA
378 token TOKIDENTIFICADOR
378 ) TOKPR_FECHADO
378 ; TOKPVIRGULA
379 fprintf TOKIDENTIFICADOR
379 ( TOKPS_ABERTO
379 pont_arq TOKIDENTIFICADOR
379 , TOKVIRGULA
379 , TOKVIRGULA
379 linha TOKIDENTIFICADOR
379 , TOKVIRGULA
379 lexema TOKIDENTIFICADOR
379 , TOKVIRGULA
379 token TOKIDENTIFICADOR
379 ) TOKPR_FECHADO
379 ; TOKPVIRGULA
380 lexema TOKIDENTIFICADOR
380 [ TOKPR_ABERTO
380 0 TOK_NINT
380 ] TOKPR_FECHADO
380 = TOKMUL
380 '\0' TOKCARATER
380 ; TOKPVIRGULA
381 estado TOKIDENTIFICADOR
381 = TOKMUL
381 0 TOK_NINT
381 ; TOKPVIRGULA
382 } TOKCH_FECHADO
383 else PALRESERVADA
383 if PALRESERVADA
383 ( TOKPS_ABERTO
383 strcmp TOKIDENTIFICADOR
383 ( TOKPS_ABERTO
383 lexema TOKIDENTIFICADOR
383 , TOKVIRGULA
383 TOKELSE TOKIDENTIFICADOR
383 [ TOKPR_ABERTO
383 0 TOK_NINT
383 ] TOKPR_FECHADO
383 ) TOKPR_FECHADO
383 == TOKATR_COMPOSTA
383 0 TOK_NINT
383 ) TOKPR_FECHADO
384 { TOKCH_ABERTO
386 strcpy TOKIDENTIFICADOR
386 ( TOKPS_ABERTO
386 token TOKIDENTIFICADOR
386 , TOKVIRGULA
386 TOKELSE TOKIDENTIFICADOR
386 [ TOKPR_ABERTO
386 1 TOK_NINT
386 ] TOKPR_FECHADO
386 ) TOKPR_FECHADO
386 ; TOKPVIRGULA
388 printf TOKIDENTIFICADOR
388 ( TOKPS_ABERTO
388 , TOKVIRGULA
388 linha TOKIDENTIFICADOR
388 , TOKVIRGULA
388 lexema TOKIDENTIFICADOR
388 , TOKVIRGULA
388 token TOKIDENTIFICADOR
388 ) TOKPR_FECHADO
388 ; TOKPVIRGULA
389 fprintf TOKIDENTIFICADOR
389 ( TOKPS_ABERTO
389 pont_arq TOKIDENTIFICADOR
389 , TOKVIRGULA
389 , TOKVIRGULA
389 linha TOKIDENTIFICADOR
389 , TOKVIRGULA
389 lexema TOKIDENTIFICADOR
389 , TOKVIRGULA
389 token TOKIDENTIFICADOR
389 ) TOKPR_FECHADO
389 ; TOKPVIRGULA
390 lexema TOKIDENTIFICADOR
390 [ TOKPR_ABERTO
390 0 TOK_NINT
390 ] TOKPR_FECHADO
390 = TOKMUL
390 '\0' TOKCARATER
390 ; TOKPVIRGULA
391 estado TOKIDENTIFICADOR
391 = TOKMUL
391 0 TOK_NINT
391 ; TOKPVIRGULA
392 } TOKCH_FECHADO
393 else PALRESERVADA
393 if PALRESERVADA
393 ( TOKPS_ABERTO
393 strcmp TOKIDENTIFICADOR
393 ( TOKPS_ABERTO
393 lexema TOKIDENTIFICADOR
393 , TOKVIRGULA
393 TOKENUM TOKIDENTIFICADOR
393 [ TOKPR_ABERTO
393 0 TOK_NINT
393 ] TOKPR_FECHADO
393 ) TOKPR_FECHADO
393 == TOKATR_COMPOSTA
393 0 TOK_NINT
393 ) TOKPR_FECHADO
394 { TOKCH_ABERTO
396 strcpy TOKIDENTIFICADOR
396 ( TOKPS_ABERTO
396 token TOKIDENTIFICADOR
396 , TOKVIRGULA
396 TOKENUM TOKIDENTIFICADOR
396 [ TOKPR_ABERTO
396 1 TOK_NINT
396 ] TOKPR_FECHADO
396 ) TOKPR_FECHADO
396 ; TOKPVIRGULA
397 printf TOKIDENTIFICADOR
397 ( TOKPS_ABERTO
397 , TOKVIRGULA
397 linha TOKIDENTIFICADOR
397 , TOKVIRGULA
397 lexema TOKIDENTIFICADOR
397 , TOKVIRGULA
397 token TOKIDENTIFICADOR
397 ) TOKPR_FECHADO
397 ; TOKPVIRGULA
398 fprintf TOKIDENTIFICADOR
398 ( TOKPS_ABERTO
398 pont_arq TOKIDENTIFICADOR
398 , TOKVIRGULA
398 , TOKVIRGULA
398 linha TOKIDENTIFICADOR
398 , TOKVIRGULA
398 lexema TOKIDENTIFICADOR
398 , TOKVIRGULA
398 token TOKIDENTIFICADOR
398 ) TOKPR_FECHADO
398 ; TOKPVIRGULA
399 lexema TOKIDENTIFICADOR
399 [ TOKPR_ABERTO
399 0 TOK_NINT
399 ] TOKPR_FECHADO
399 = TOKMUL
399 '\0' TOKCARATER
399 ; TOKPVIRGULA
400 estado TOKIDENTIFICADOR
400 = TOKMUL
400 0 TOK_NINT
400 ; TOKPVIRGULA
401 } TOKCH_FECHADO
402 else PALRESERVADA
402 if PALRESERVADA
402 ( TOKPS_ABERTO
402 strcmp TOKIDENTIFICADOR
402 ( TOKPS_ABERTO
402 lexema TOKIDENTIFICADOR
402 , TOKVIRGULA
402 TOKEXTERN TOKIDENTIFICADOR
402 [ TOKPR_ABERTO
402 0 TOK_NINT
402 ] TOKPR_FECHADO
402 ) TOKPR_FECHADO
402 == TOKATR_COMPOSTA
402 0 TOK_NINT
402 ) TOKPR_FECHADO
403 { TOKCH_ABERTO
404 strcpy TOKIDENTIFICADOR
404 ( TOKPS_ABERTO
404 token TOKIDENTIFICADOR
404 , TOKVIRGULA
404 TOKEXTERN TOKIDENTIFICADOR
404 [ TOKPR_ABERTO
404 1 TOK_NINT
404 ] TOKPR_FECHADO
404 ) TOKPR_FECHADO
404 ; TOKPVIRGULA
405 printf TOKIDENTIFICADOR
405 ( TOKPS_ABERTO
405 , TOKVIRGULA
405 linha TOKIDENTIFICADOR
405 , TOKVIRGULA
405 lexema TOKIDENTIFICADOR
405 , TOKVIRGULA
405 token TOKIDENTIFICADOR
405 ) TOKPR_FECHADO
405 ; TOKPVIRGULA
406 fprintf TOKIDENTIFICADOR
406 ( TOKPS_ABERTO
406 pont_arq TOKIDENTIFICADOR
406 , TOKVIRGULA
406 , TOKVIRGULA
406 linha TOKIDENTIFICADOR
406 , TOKVIRGULA
406 lexema TOKIDENTIFICADOR
406 , TOKVIRGULA
406 token TOKIDENTIFICADOR
406 ) TOKPR_FECHADO
406 ; TOKPVIRGULA
407 lexema TOKIDENTIFICADOR
407 [ TOKPR_ABERTO
407 0 TOK_NINT
407 ] TOKPR_FECHADO
407 = TOKMUL
407 '\0' TOKCARATER
407 ; TOKPVIRGULA
408 estado TOKIDENTIFICADOR
408 = TOKMUL
408 0 TOK_NINT
408 ; TOKPVIRGULA
409 } TOKCH_FECHADO
410 else PALRESERVADA
410 if PALRESERVADA
410 ( TOKPS_ABERTO
410 strcmp TOKIDENTIFICADOR
410 ( TOKPS_ABERTO
410 lexema TOKIDENTIFICADOR
410 , TOKVIRGULA
410 TOKFOR TOKIDENTIFICADOR
410 [ TOKPR_ABERTO
410 0 TOK_NINT
410 ] TOKPR_FECHADO
410 ) TOKPR_FECHADO
410 == TOKATR_COMPOSTA
410 0 TOK_NINT
410 ) TOKPR_FECHADO
411 { TOKCH_ABERTO
413 strcpy TOKIDENTIFICADOR
413 ( TOKPS_ABERTO
413 token TOKIDENTIFICADOR
413 , TOKVIRGULA
413 TOKFOR TOKIDENTIFICADOR
413 [ TOKPR_ABERTO
413 1 TOK_NINT
413 ] TOKPR_FECHADO
413 ) TOKPR_FECHADO
413 ; TOKPVIRGULA
414 printf TOKIDENTIFICADOR
414 ( TOKPS_ABERTO
414 , TOKVIRGULA
414 linha TOKIDENTIFICADOR
414 , TOKVIRGULA
414 lexema TOKIDENTIFICADOR
414 , TOKVIRGULA
414 token TOKIDENTIFICADOR
414 ) TOKPR_FECHADO
414 ; TOKPVIRGULA
415 fprintf TOKIDENTIFICADOR
415 ( TOKPS_ABERTO
415 pont_arq TOKIDENTIFICADOR
415 , TOKVIRGULA
415 , TOKVIRGULA
415 linha TOKIDENTIFICADOR
415 , TOKVIRGULA
415 lexema TOKIDENTIFICADOR
415 , TOKVIRGULA
415 token TOKIDENTIFICADOR
415 ) TOKPR_FECHADO
415 ; TOKPVIRGULA
416 lexema TOKIDENTIFICADOR
416 [ TOKPR_ABERTO
416 0 TOK_NINT
416 ] TOKPR_FECHADO
416 = TOKMUL
416 '\0' TOKCARATER
416 ; TOKPVIRGULA
417 estado TOKIDENTIFICADOR
417 = TOKMUL
417 0 TOK_NINT
417 ; TOKPVIRGULA
418 } TOKCH_FECHADO
419 else PALRESERVADA
419 if PALRESERVADA
419 ( TOKPS_ABERTO
419 strcmp TOKIDENTIFICADOR
419 ( TOKPS_ABERTO
419 lexema TOKIDENTIFICADOR
419 , TOKVIRGULA
419 TOKGOTO TOKIDENTIFICADOR
419 [ TOKPR_ABERTO
419 0 TOK_NINT
419 ] TOKPR_FECHADO
419 ) TOKPR_FECHADO
419 == TOKATR_COMPOSTA
419 0 TOK_NINT
419 ) TOKPR_FECHADO
420 { TOKCH_ABERTO
422 strcpy TOKIDENTIFICADOR
422 ( TOKPS_ABERTO
422 token TOKIDENTIFICADOR
422 , TOKVIRGULA
422 TOKGOTO TOKIDENTIFICADOR
422 [ TOKPR_ABERTO
422 1 TOK_NINT
422 ] TOKPR_FECHADO
422 ) TOKPR_FECHADO
422 ; TOKPVIRGULA
423 printf TOKIDENTIFICADOR
423 ( TOKPS_ABERTO
423 , TOKVIRGULA
423 linha TOKIDENTIFICADOR
423 , TOKVIRGULA
423 lexema TOKIDENTIFICADOR
423 , TOKVIRGULA
423 token TOKIDENTIFICADOR
423 ) TOKPR_FECHADO
423 ; TOKPVIRGULA
424 fprintf TOKIDENTIFICADOR
424 ( TOKPS_ABERTO
424 pont_arq TOKIDENTIFICADOR
424 , TOKVIRGULA
424 , TOKVIRGULA
424 linha TOKIDENTIFICADOR
424 , TOKVIRGULA
424 lexema TOKIDENTIFICADOR
424 , TOKVIRGULA
424 token TOKIDENTIFICADOR
424 ) TOKPR_FECHADO
424 ; TOKPVIRGULA
425 lexema TOKIDENTIFICADOR
425 [ TOKPR_ABERTO
425 0 TOK_NINT
425 ] TOKPR_FECHADO
425 = TOKMUL
425 '\0' TOKCARATER
425 ; TOKPVIRGULA
426 estado TOKIDENTIFICADOR
426 = TOKMUL
426 0 TOK_NINT
426 ; TOKPVIRGULA
427 } TOKCH_FECHADO
428 else PALRESERVADA
428 if PALRESERVADA
428 ( TOKPS_ABERTO
428 strcmp TOKIDENTIFICADOR
428 ( TOKPS_ABERTO
428 lexema TOKIDENTIFICADOR
428 , TOKVIRGULA
428 TOKIF TOKIDENTIFICADOR
428 [ TOKPR_ABERTO
428 0 TOK_NINT
428 ] TOKPR_FECHADO
428 ) TOKPR_FECHADO
428 == TOKATR_COMPOSTA
428 0 TOK_NINT
428 ) TOKPR_FECHADO
429 { TOKCH_ABERTO
431 strcpy TOKIDENTIFICADOR
431 ( TOKPS_ABERTO
431 token TOKIDENTIFICADOR
431 , TOKVIRGULA
431 TOKIF TOKIDENTIFICADOR
431 [ TOKPR_ABERTO
431 1 TOK_NINT
431 ] TOKPR_FECHADO
431 ) TOKPR_FECHADO
431 ; TOKPVIRGULA
432 printf TOKIDENTIFICADOR
432 ( TOKPS_ABERTO
432 , TOKVIRGULA
432 linha TOKIDENTIFICADOR
432 , TOKVIRGULA
432 lexema TOKIDENTIFICADOR
432 , TOKVIRGULA
432 token TOKIDENTIFICADOR
432 ) TOKPR_FECHADO
432 ; TOKPVIRGULA
433 fprintf TOKIDENTIFICADOR
433 ( TOKPS_ABERTO
433 pont_arq TOKIDENTIFICADOR
433 , TOKVIRGULA
433 , TOKVIRGULA
433 linha TOKIDENTIFICADOR
433 , TOKVIRGULA
433 lexema TOKIDENTIFICADOR
433 , TOKVIRGULA
433 token TOKIDENTIFICADOR
433 ) TOKPR_FECHADO
433 ; TOKPVIRGULA
434 lexema TOKIDENTIFICADOR
434 [ TOKPR_ABERTO
434 0 TOK_NINT
434 ] TOKPR_FECHADO
434 = TOKMUL
434 '\0' TOKCARATER
434 ; TOKPVIRGULA
435 estado TOKIDENTIFICADOR
435 = TOKMUL
435 0 TOK_NINT
435 ; TOKPVIRGULA
436 } TOKCH_FECHADO
437 else PALRESERVADA
437 if PALRESERVADA
437 ( TOKPS_ABERTO
437 strcmp TOKIDENTIFICADOR
437 ( TOKPS_ABERTO
437 lexema TOKIDENTIFICADOR
437 , TOKVIRGULA
437 TOKINT TOKIDENTIFICADOR
437 [ TOKPR_ABERTO
437 0 TOK_NINT
437 ] TOKPR_FECHADO
437 ) TOKPR_FECHADO
437 == TOKATR_COMPOSTA
437 0 TOK_NINT
437 ) TOKPR_FECHADO
438 { TOKCH_ABERTO
440 strcpy TOKIDENTIFICADOR
440 ( TOKPS_ABERTO
440 token TOKIDENTIFICADOR
440 , TOKVIRGULA
440 TOKINT TOKIDENTIFICADOR
440 [ TOKPR_ABERTO
440 1 TOK_NINT
440 ] TOKPR_FECHADO
440 ) TOKPR_FECHADO
440 ; TOKPVIRGULA
441 printf TOKIDENTIFICADOR
441 ( TOKPS_ABERTO
441 , TOKVIRGULA
441 linha TOKIDENTIFICADOR
441 , TOKVIRGULA
441 lexema TOKIDENTIFICADOR
441 , TOKVIRGULA
441 token TOKIDENTIFICADOR
441 ) TOKPR_FECHADO
441 ; TOKPVIRGULA
442 fprintf TOKIDENTIFICADOR
442 ( TOKPS_ABERTO
442 pont_arq TOKIDENTIFICADOR
442 , TOKVIRGULA
442 , TOKVIRGULA
442 linha TOKIDENTIFICADOR
442 , TOKVIRGULA
442 lexema TOKIDENTIFICADOR
442 , TOKVIRGULA
442 token TOKIDENTIFICADOR
442 ) TOKPR_FECHADO
442 ; TOKPVIRGULA
443 lexema TOKIDENTIFICADOR
443 [ TOKPR_ABERTO
443 0 TOK_NINT
443 ] TOKPR_FECHADO
443 = TOKMUL
443 '\0' TOKCARATER
443 ; TOKPVIRGULA
444 estado TOKIDENTIFICADOR
444 = TOKMUL
444 0 TOK_NINT
444 ; TOKPVIRGULA
445 } TOKCH_FECHADO
446 else PALRESERVADA
446 if PALRESERVADA
446 ( TOKPS_ABERTO
446 strcmp TOKIDENTIFICADOR
446 ( TOKPS_ABERTO
446 lexema TOKIDENTIFICADOR
446 , TOKVIRGULA
446 TOKLONG TOKIDENTIFICADOR
446 [ TOKPR_ABERTO
446 0 TOK_NINT
446 ] TOKPR_FECHADO
446 ) TOKPR_FECHADO
446 == TOKATR_COMPOSTA
446 0 TOK_NINT
446 ) TOKPR_FECHADO
447 { TOKCH_ABERTO
449 strcpy TOKIDENTIFICADOR
449 ( TOKPS_ABERTO
449 token TOKIDENTIFICADOR
449 , TOKVIRGULA
449 TOKLONG TOKIDENTIFICADOR
449 [ TOKPR_ABERTO
449 1 TOK_NINT
449 ] TOKPR_FECHADO
449 ) TOKPR_FECHADO
449 ; TOKPVIRGULA
450 printf TOKIDENTIFICADOR
450 ( TOKPS_ABERTO
450 , TOKVIRGULA
450 linha TOKIDENTIFICADOR
450 , TOKVIRGULA
450 lexema TOKIDENTIFICADOR
450 , TOKVIRGULA
450 token TOKIDENTIFICADOR
450 ) TOKPR_FECHADO
450 ; TOKPVIRGULA
451 fprintf TOKIDENTIFICADOR
451 ( TOKPS_ABERTO
451 pont_arq TOKIDENTIFICADOR
451 , TOKVIRGULA
451 , TOKVIRGULA
451 linha TOKIDENTIFICADOR
451 , TOKVIRGULA
451 lexema TOKIDENTIFICADOR
451 , TOKVIRGULA
451 token TOKIDENTIFICADOR
451 ) TOKPR_FECHADO
451 ; TOKPVIRGULA
452 lexema TOKIDENTIFICADOR
452 [ TOKPR_ABERTO
452 0 TOK_NINT
452 ] TOKPR_FECHADO
452 = TOKMUL
452 '\0' TOKCARATER
452 ; TOKPVIRGULA
453 estado TOKIDENTIFICADOR
453 = TOKMUL
453 0 TOK_NINT
453 ; TOKPVIRGULA
454 } TOKCH_FECHADO
455 else PALRESERVADA
455 if PALRESERVADA
455 ( TOKPS_ABERTO
455 strcmp TOKIDENTIFICADOR
455 ( TOKPS_ABERTO
455 lexema TOKIDENTIFICADOR
455 , TOKVIRGULA
455 TOKREGISTER TOKIDENTIFICADOR
455 [ TOKPR_ABERTO
455 0 TOK_NINT
455 ] TOKPR_FECHADO
455 ) TOKPR_FECHADO
455 == TOKATR_COMPOSTA
455 0 TOK_NINT
455 ) TOKPR_FECHADO
456 { TOKCH_ABERTO
458 strcpy TOKIDENTIFICADOR
458 ( TOKPS_ABERTO
458 token TOKIDENTIFICADOR
458 , TOKVIRGULA
458 TOKREGISTER TOKIDENTIFICADOR
458 [ TOKPR_ABERTO
458 1 TOK_NINT
458 ] TOKPR_FECHADO
458 ) TOKPR_FECHADO
458 ; TOKPVIRGULA
459 printf TOKIDENTIFICADOR
459 ( TOKPS_ABERTO
459 , TOKVIRGULA
459 linha TOKIDENTIFICADOR
459 , TOKVIRGULA
459 lexema TOKIDENTIFICADOR
459 , TOKVIRGULA
459 token TOKIDENTIFICADOR
459 ) TOKPR_FECHADO
459 ; TOKPVIRGULA
460 fprintf TOKIDENTIFICADOR
460 ( TOKPS_ABERTO
460 pont_arq TOKIDENTIFICADOR
460 , TOKVIRGULA
460 , TOKVIRGULA
460 linha TOKIDENTIFICADOR
460 , TOKVIRGULA
460 lexema TOKIDENTIFICADOR
460 , TOKVIRGULA
460 token TOKIDENTIFICADOR
460 ) TOKPR_FECHADO
460 ; TOKPVIRGULA
461 lexema TOKIDENTIFICADOR
461 [ TOKPR_ABERTO
461 0 TOK_NINT
461 ] TOKPR_FECHADO
461 = TOKMUL
461 '\0' TOKCARATER
461 ; TOKPVIRGULA
462 estado TOKIDENTIFICADOR
462 = TOKMUL
462 0 TOK_NINT
462 ; TOKPVIRGULA
463 } TOKCH_FECHADO
464 else PALRESERVADA
464 if PALRESERVADA
464 ( TOKPS_ABERTO
464 strcmp TOKIDENTIFICADOR
464 ( TOKPS_ABERTO
464 lexema TOKIDENTIFICADOR
464 , TOKVIRGULA
464 TOKRETURN TOKIDENTIFICADOR
464 [ TOKPR_ABERTO
464 0 TOK_NINT
464 ] TOKPR_FECHADO
464 ) TOKPR_FECHADO
464 == TOKATR_COMPOSTA
464 0 TOK_NINT
464 ) TOKPR_FECHADO
465 { TOKCH_ABERTO
467 strcpy TOKIDENTIFICADOR
467 ( TOKPS_ABERTO
467 token TOKIDENTIFICADOR
467 , TOKVIRGULA
467 TOKRETURN TOKIDENTIFICADOR
467 [ TOKPR_ABERTO
467 1 TOK_NINT
467 ] TOKPR_FECHADO
467 ) TOKPR_FECHADO
467 ; TOKPVIRGULA
468 printf TOKIDENTIFICADOR
468 ( TOKPS_ABERTO
468 , TOKVIRGULA
468 linha TOKIDENTIFICADOR
468 , TOKVIRGULA
468 lexema TOKIDENTIFICADOR
468 , TOKVIRGULA
468 token TOKIDENTIFICADOR
468 ) TOKPR_FECHADO
468 ; TOKPVIRGULA
469 fprintf TOKIDENTIFICADOR
469 ( TOKPS_ABERTO
469 pont_arq TOKIDENTIFICADOR
469 , TOKVIRGULA
469 , TOKVIRGULA
469 linha TOKIDENTIFICADOR
469 , TOKVIRGULA
469 lexema TOKIDENTIFICADOR
469 , TOKVIRGULA
469 token TOKIDENTIFICADOR
469 ) TOKPR_FECHADO
469 ; TOKPVIRGULA
470 lexema TOKIDENTIFICADOR
470 [ TOKPR_ABERTO
470 0 TOK_NINT
470 ] TOKPR_FECHADO
470 = TOKMUL
470 '\0' TOKCARATER
470 ; TOKPVIRGULA
471 estado TOKIDENTIFICADOR
471 = TOKMUL
471 0 TOK_NINT
471 ; TOKPVIRGULA
472 } TOKCH_FECHADO
473 else PALRESERVADA
473 if PALRESERVADA
473 ( TOKPS_ABERTO
473 strcmp TOKIDENTIFICADOR
473 ( TOKPS_ABERTO
473 lexema TOKIDENTIFICADOR
473 , TOKVIRGULA
473 TOKSHORT TOKIDENTIFICADOR
473 [ TOKPR_ABERTO
473 0 TOK_NINT
473 ] TOKPR_FECHADO
473 ) TOKPR_FECHADO
473 == TOKATR_COMPOSTA
473 0 TOK_NINT
473 ) TOKPR_FECHADO
474 { TOKCH_ABERTO
476 strcpy TOKIDENTIFICADOR
476 ( TOKPS_ABERTO
476 token TOKIDENTIFICADOR
476 , TOKVIRGULA
476 TOKSHORT TOKIDENTIFICADOR
476 [ TOKPR_ABERTO
476 1 TOK_NINT
476 ] TOKPR_FECHADO
476 ) TOKPR_FECHADO
476 ; TOKPVIRGULA
477 printf TOKIDENTIFICADOR
477 ( TOKPS_ABERTO
477 , TOKVIRGULA
477 linha TOKIDENTIFICADOR
477 , TOKVIRGULA
477 lexema TOKIDENTIFICADOR
477 , TOKVIRGULA
477 token TOKIDENTIFICADOR
477 ) TOKPR_FECHADO
477 ; TOKPVIRGULA
478 fprintf TOKIDENTIFICADOR
478 ( TOKPS_ABERTO
478 pont_arq TOKIDENTIFICADOR
478 , TOKVIRGULA
478 , TOKVIRGULA
478 linha TOKIDENTIFICADOR
478 , TOKVIRGULA
478 lexema TOKIDENTIFICADOR
478 , TOKVIRGULA
478 token TOKIDENTIFICADOR
478 ) TOKPR_FECHADO
478 ; TOKPVIRGULA
479 lexema TOKIDENTIFICADOR
479 [ TOKPR_ABERTO
479 0 TOK_NINT
479 ] TOKPR_FECHADO
479 = TOKMUL
479 '\0' TOKCARATER
479 ; TOKPVIRGULA
480 estado TOKIDENTIFICADOR
480 = TOKMUL
480 0 TOK_NINT
480 ; TOKPVIRGULA
481 } TOKCH_FECHADO
482 else PALRESERVADA
482 if PALRESERVADA
482 ( TOKPS_ABERTO
482 strcmp TOKIDENTIFICADOR
482 ( TOKPS_ABERTO
482 lexema TOKIDENTIFICADOR
482 , TOKVIRGULA
482 TOKSIGNED TOKIDENTIFICADOR
482 [ TOKPR_ABERTO
482 0 TOK_NINT
482 ] TOKPR_FECHADO
482 ) TOKPR_FECHADO
482 == TOKATR_COMPOSTA
482 0 TOK_NINT
482 ) TOKPR_FECHADO
483 { TOKCH_ABERTO
485 strcpy TOKIDENTIFICADOR
485 ( TOKPS_ABERTO
485 token TOKIDENTIFICADOR
485 , TOKVIRGULA
485 TOKSIGNED TOKIDENTIFICADOR
485 [ TOKPR_ABERTO
485 0 TOK_NINT
485 ] TOKPR_FECHADO
485 ) TOKPR_FECHADO
485 ; TOKPVIRGULA
486 printf TOKIDENTIFICADOR
486 ( TOKPS_ABERTO
486 , TOKVIRGULA
486 linha TOKIDENTIFICADOR
486 , TOKVIRGULA
486 lexema TOKIDENTIFICADOR
486 , TOKVIRGULA
486 token TOKIDENTIFICADOR
486 ) TOKPR_FECHADO
486 ; TOKPVIRGULA
487 fprintf TOKIDENTIFICADOR
487 ( TOKPS_ABERTO
487 pont_arq TOKIDENTIFICADOR
487 , TOKVIRGULA
487 , TOKVIRGULA
487 linha TOKIDENTIFICADOR
487 , TOKVIRGULA
487 lexema TOKIDENTIFICADOR
487 , TOKVIRGULA
487 token TOKIDENTIFICADOR
487 ) TOKPR_FECHADO
487 ; TOKPVIRGULA
488 lexema TOKIDENTIFICADOR
488 [ TOKPR_ABERTO
488 0 TOK_NINT
488 ] TOKPR_FECHADO
488 = TOKMUL
488 '\0' TOKCARATER
488 ; TOKPVIRGULA
489 estado TOKIDENTIFICADOR
489 = TOKMUL
489 0 TOK_NINT
489 ; TOKPVIRGULA
490 } TOKCH_FECHADO
491 else PALRESERVADA
491 if PALRESERVADA
491 ( TOKPS_ABERTO
491 strcmp TOKIDENTIFICADOR
491 ( TOKPS_ABERTO
491 lexema TOKIDENTIFICADOR
491 , TOKVIRGULA
491 TOKSIZEOF TOKIDENTIFICADOR
491 [ TOKPR_ABERTO
491 0 TOK_NINT
491 ] TOKPR_FECHADO
491 ) TOKPR_FECHADO
491 == TOKATR_COMPOSTA
491 0 TOK_NINT
491 ) TOKPR_FECHADO
492 { TOKCH_ABERTO
494 strcpy TOKIDENTIFICADOR
494 ( TOKPS_ABERTO
494 token TOKIDENTIFICADOR
494 , TOKVIRGULA
494 TOKSIZEOF TOKIDENTIFICADOR
494 [ TOKPR_ABERTO
494 1 TOK_NINT
494 ] TOKPR_FECHADO
494 ) TOKPR_FECHADO
494 ; TOKPVIRGULA
495 printf TOKIDENTIFICADOR
495 ( TOKPS_ABERTO
495 , TOKVIRGULA
495 linha TOKIDENTIFICADOR
495 , TOKVIRGULA
495 lexema TOKIDENTIFICADOR
495 , TOKVIRGULA
495 token TOKIDENTIFICADOR
495 ) TOKPR_FECHADO
495 ; TOKPVIRGULA
496 fprintf TOKIDENTIFICADOR
496 ( TOKPS_ABERTO
496 pont_arq TOKIDENTIFICADOR
496 , TOKVIRGULA
496 , TOKVIRGULA
496 linha TOKIDENTIFICADOR
496 , TOKVIRGULA
496 lexema TOKIDENTIFICADOR
496 , TOKVIRGULA
496 token TOKIDENTIFICADOR
496 ) TOKPR_FECHADO
496 ; TOKPVIRGULA
497 lexema TOKIDENTIFICADOR
497 [ TOKPR_ABERTO
497 0 TOK_NINT
497 ] TOKPR_FECHADO
497 = TOKMUL
497 '\0' TOKCARATER
497 ; TOKPVIRGULA
498 estado TOKIDENTIFICADOR
498 = TOKMUL
498 0 TOK_NINT
498 ; TOKPVIRGULA
499 } TOKCH_FECHADO
500 else PALRESERVADA
500 if PALRESERVADA
500 ( TOKPS_ABERTO
500 strcmp TOKIDENTIFICADOR
500 ( TOKPS_ABERTO
500 lexema TOKIDENTIFICADOR
500 , TOKVIRGULA
500 TOKSTATIC TOKIDENTIFICADOR
500 [ TOKPR_ABERTO
500 0 TOK_NINT
500 ] TOKPR_FECHADO
500 ) TOKPR_FECHADO
500 == TOKATR_COMPOSTA
500 0 TOK_NINT
500 ) TOKPR_FECHADO
501 { TOKCH_ABERTO
503 strcpy TOKIDENTIFICADOR
503 ( TOKPS_ABERTO
503 token TOKIDENTIFICADOR
503 , TOKVIRGULA
503 TOKSTATIC TOKIDENTIFICADOR
503 [ TOKPR_ABERTO
503 1 TOK_NINT
503 ] TOKPR_FECHADO
503 ) TOKPR_FECHADO
503 ; TOKPVIRGULA
504 printf TOKIDENTIFICADOR
504 ( TOKPS_ABERTO
504 , TOKVIRGULA
504 linha TOKIDENTIFICADOR
504 , TOKVIRGULA
504 lexema TOKIDENTIFICADOR
504 , TOKVIRGULA
504 token TOKIDENTIFICADOR
504 ) TOKPR_FECHADO
504 ; TOKPVIRGULA
505 fprintf TOKIDENTIFICADOR
505 ( TOKPS_ABERTO
505 pont_arq TOKIDENTIFICADOR
505 , TOKVIRGULA
505 , TOKVIRGULA
505 linha TOKIDENTIFICADOR
505 , TOKVIRGULA
505 lexema TOKIDENTIFICADOR
505 , TOKVIRGULA
505 token TOKIDENTIFICADOR
505 ) TOKPR_FECHADO
505 ; TOKPVIRGULA
506 lexema TOKIDENTIFICADOR
506 [ TOKPR_ABERTO
506 0 TOK_NINT
506 ] TOKPR_FECHADO
506 = TOKMUL
506 '\0' TOKCARATER
506 ; TOKPVIRGULA
507 estado TOKIDENTIFICADOR
507 = TOKMUL
507 0 TOK_NINT
507 ; TOKPVIRGULA
508 } TOKCH_FECHADO
509 else PALRESERVADA
509 if PALRESERVADA
509 ( TOKPS_ABERTO
509 strcmp TOKIDENTIFICADOR
509 ( TOKPS_ABERTO
509 lexema TOKIDENTIFICADOR
509 , TOKVIRGULA
509 TOKSTRUCT TOKIDENTIFICADOR
509 [ TOKPR_ABERTO
509 0 TOK_NINT
509 ] TOKPR_FECHADO
509 ) TOKPR_FECHADO
509 == TOKATR_COMPOSTA
509 0 TOK_NINT
509 ) TOKPR_FECHADO
510 { TOKCH_ABERTO
512 strcpy TOKIDENTIFICADOR
512 ( TOKPS_ABERTO
512 token TOKIDENTIFICADOR
512 , TOKVIRGULA
512 TOKSTRUCT TOKIDENTIFICADOR
512 [ TOKPR_ABERTO
512 1 TOK_NINT
512 ] TOKPR_FECHADO
512 ) TOKPR_FECHADO
512 ; TOKPVIRGULA
513 printf TOKIDENTIFICADOR
513 ( TOKPS_ABERTO
513 , TOKVIRGULA
513 linha TOKIDENTIFICADOR
513 , TOKVIRGULA
513 lexema TOKIDENTIFICADOR
513 , TOKVIRGULA
513 token TOKIDENTIFICADOR
513 ) TOKPR_FECHADO
513 ; TOKPVIRGULA
514 lexema TOKIDENTIFICADOR
514 [ TOKPR_ABERTO
514 0 TOK_NINT
514 ] TOKPR_FECHADO
514 = TOKMUL
514 '\0' TOKCARATER
514 ; TOKPVIRGULA
515 estado TOKIDENTIFICADOR
515 = TOKMUL
515 0 TOK_NINT
515 ; TOKPVIRGULA
516 } TOKCH_FECHADO
517 else PALRESERVADA
517 if PALRESERVADA
517 ( TOKPS_ABERTO
517 strcmp TOKIDENTIFICADOR
517 ( TOKPS_ABERTO
517 lexema TOKIDENTIFICADOR
517 , TOKVIRGULA
517 TOKSWITCH TOKIDENTIFICADOR
517 [ TOKPR_ABERTO
517 0 TOK_NINT
517 ] TOKPR_FECHADO
517 ) TOKPR_FECHADO
517 == TOKATR_COMPOSTA
517 0 TOK_NINT
517 ) TOKPR_FECHADO
518 { TOKCH_ABERTO
520 strcpy TOKIDENTIFICADOR
520 ( TOKPS_ABERTO
520 token TOKIDENTIFICADOR
520 , TOKVIRGULA
520 TOKSWITCH TOKIDENTIFICADOR
520 [ TOKPR_ABERTO
520 1 TOK_NINT
520 ] TOKPR_FECHADO
520 ) TOKPR_FECHADO
520 ; TOKPVIRGULA
521 printf TOKIDENTIFICADOR
521 ( TOKPS_ABERTO
521 , TOKVIRGULA
521 linha TOKIDENTIFICADOR
521 , TOKVIRGULA
521 lexema TOKIDENTIFICADOR
521 , TOKVIRGULA
521 token TOKIDENTIFICADOR
521 ) TOKPR_FECHADO
521 ; TOKPVIRGULA
522 fprintf TOKIDENTIFICADOR
522 ( TOKPS_ABERTO
522 pont_arq TOKIDENTIFICADOR
522 , TOKVIRGULA
522 , TOKVIRGULA
522 linha TOKIDENTIFICADOR
522 , TOKVIRGULA
522 lexema TOKIDENTIFICADOR
522 , TOKVIRGULA
522 token TOKIDENTIFICADOR
522 ) TOKPR_FECHADO
522 ; TOKPVIRGULA
523 lexema TOKIDENTIFICADOR
523 [ TOKPR_ABERTO
523 0 TOK_NINT
523 ] TOKPR_FECHADO
523 = TOKMUL
523 '\0' TOKCARATER
523 ; TOKPVIRGULA
524 estado TOKIDENTIFICADOR
524 = TOKMUL
524 0 TOK_NINT
524 ; TOKPVIRGULA
525 } TOKCH_FECHADO
526 else PALRESERVADA
526 if PALRESERVADA
526 ( TOKPS_ABERTO
526 strcmp TOKIDENTIFICADOR
526 ( TOKPS_ABERTO
526 lexema TOKIDENTIFICADOR
526 , TOKVIRGULA
526 TOKTYPEDEF TOKIDENTIFICADOR
526 [ TOKPR_ABERTO
526 0 TOK_NINT
526 ] TOKPR_FECHADO
526 ) TOKPR_FECHADO
526 == TOKATR_COMPOSTA
526 0 TOK_NINT
526 ) TOKPR_FECHADO
527 { TOKCH_ABERTO
529 strcpy TOKIDENTIFICADOR
529 ( TOKPS_ABERTO
529 token TOKIDENTIFICADOR
529 , TOKVIRGULA
529 TOKTYPEDEF TOKIDENTIFICADOR
529 [ TOKPR_ABERTO
529 1 TOK_NINT
529 ] TOKPR_FECHADO
529 ) TOKPR_FECHADO
529 ; TOKPVIRGULA
530 printf TOKIDENTIFICADOR
530 ( TOKPS_ABERTO
530 , TOKVIRGULA
530 linha TOKIDENTIFICADOR
530 , TOKVIRGULA
530 lexema TOKIDENTIFICADOR
530 , TOKVIRGULA
530 token TOKIDENTIFICADOR
530 ) TOKPR_FECHADO
530 ; TOKPVIRGULA
531 fprintf TOKIDENTIFICADOR
531 ( TOKPS_ABERTO
531 pont_arq TOKIDENTIFICADOR
531 , TOKVIRGULA
531 , TOKVIRGULA
531 linha TOKIDENTIFICADOR
531 , TOKVIRGULA
531 lexema TOKIDENTIFICADOR
531 , TOKVIRGULA
531 token TOKIDENTIFICADOR
531 ) TOKPR_FECHADO
531 ; TOKPVIRGULA
532 lexema TOKIDENTIFICADOR
532 [ TOKPR_ABERTO
532 0 TOK_NINT
532 ] TOKPR_FECHADO
532 = TOKMUL
532 '\0' TOKCARATER
532 ; TOKPVIRGULA
533 estado TOKIDENTIFICADOR
533 = TOKMUL
533 0 TOK_NINT
533 ; TOKPVIRGULA
534 } TOKCH_FECHADO
535 else PALRESERVADA
535 if PALRESERVADA
535 ( TOKPS_ABERTO
535 strcmp TOKIDENTIFICADOR
535 ( TOKPS_ABERTO
535 lexema TOKIDENTIFICADOR
535 , TOKVIRGULA
535 TOKUNION TOKIDENTIFICADOR
535 [ TOKPR_ABERTO
535 0 TOK_NINT
535 ] TOKPR_FECHADO
535 ) TOKPR_FECHADO
535 == TOKATR_COMPOSTA
535 0 TOK_NINT
535 ) TOKPR_FECHADO
536 { TOKCH_ABERTO
538 strcpy TOKIDENTIFICADOR
538 ( TOKPS_ABERTO
538 token TOKIDENTIFICADOR
538 , TOKVIRGULA
538 TOKUNION TOKIDENTIFICADOR
538 [ TOKPR_ABERTO
538 1 TOK_NINT
538 ] TOKPR_FECHADO
538 ) TOKPR_FECHADO
538 ; TOKPVIRGULA
539 printf TOKIDENTIFICADOR
539 ( TOKPS_ABERTO
539 , TOKVIRGULA
539 linha TOKIDENTIFICADOR
539 , TOKVIRGULA
539 lexema TOKIDENTIFICADOR
539 , TOKVIRGULA
539 token TOKIDENTIFICADOR
539 ) TOKPR_FECHADO
539 ; TOKPVIRGULA
540 fprintf TOKIDENTIFICADOR
540 ( TOKPS_ABERTO
540 pont_arq TOKIDENTIFICADOR
540 , TOKVIRGULA
540 , TOKVIRGULA
540 linha TOKIDENTIFICADOR
540 , TOKVIRGULA
540 lexema TOKIDENTIFICADOR
540 , TOKVIRGULA
540 token TOKIDENTIFICADOR
540 ) TOKPR_FECHADO
540 ; TOKPVIRGULA
541 lexema TOKIDENTIFICADOR
541 [ TOKPR_ABERTO
541 0 TOK_NINT
541 ] TOKPR_FECHADO
541 = TOKMUL
541 '\0' TOKCARATER
541 ; TOKPVIRGULA
542 estado TOKIDENTIFICADOR
542 = TOKMUL
542 0 TOK_NINT
542 ; TOKPVIRGULA
543 } TOKCH_FECHADO
544 else PALRESERVADA
544 if PALRESERVADA
544 ( TOKPS_ABERTO
544 strcmp TOKIDENTIFICADOR
544 ( TOKPS_ABERTO
544 lexema TOKIDENTIFICADOR
544 , TOKVIRGULA
544 TOKUNSIGNED TOKIDENTIFICADOR
544 [ TOKPR_ABERTO
544 0 TOK_NINT
544 ] TOKPR_FECHADO
544 ) TOKPR_FECHADO
544 == TOKATR_COMPOSTA
544 0 TOK_NINT
544 ) TOKPR_FECHADO
545 { TOKCH_ABERTO
547 strcpy TOKIDENTIFICADOR
547 ( TOKPS_ABERTO
547 token TOKIDENTIFICADOR
547 , TOKVIRGULA
547 TOKUNSIGNED TOKIDENTIFICADOR
547 [ TOKPR_ABERTO
547 1 TOK_NINT
547 ] TOKPR_FECHADO
547 ) TOKPR_FECHADO
547 ; TOKPVIRGULA
548 printf TOKIDENTIFICADOR
548 ( TOKPS_ABERTO
548 , TOKVIRGULA
548 linha TOKIDENTIFICADOR
548 , TOKVIRGULA
548 lexema TOKIDENTIFICADOR
548 , TOKVIRGULA
548 token TOKIDENTIFICADOR
548 ) TOKPR_FECHADO
548 ; TOKPVIRGULA
549 fprintf TOKIDENTIFICADOR
549 ( TOKPS_ABERTO
549 pont_arq TOKIDENTIFICADOR
549 , TOKVIRGULA
549 , TOKVIRGULA
549 linha TOKIDENTIFICADOR
549 , TOKVIRGULA
549 lexema TOKIDENTIFICADOR
549 , TOKVIRGULA
549 token TOKIDENTIFICADOR
549 ) TOKPR_FECHADO
549 ; TOKPVIRGULA
550 lexema TOKIDENTIFICADOR
550 [ TOKPR_ABERTO
550 0 TOK_NINT
550 ] TOKPR_FECHADO
550 = TOKMUL
550 '\0' TOKCARATER
550 ; TOKPVIRGULA
551 estado TOKIDENTIFICADOR
551 = TOKMUL
551 0 TOK_NINT
551 ; TOKPVIRGULA
552 } TOKCH_FECHADO
553 else PALRESERVADA
553 if PALRESERVADA
553 ( TOKPS_ABERTO
553 strcmp TOKIDENTIFICADOR
553 ( TOKPS_ABERTO
553 lexema TOKIDENTIFICADOR
553 , TOKVIRGULA
553 TOKVOID TOKIDENTIFICADOR
553 [ TOKPR_ABERTO
553 0 TOK_NINT
553 ] TOKPR_FECHADO
553 ) TOKPR_FECHADO
553 == TOKATR_COMPOSTA
553 0 TOK_NINT
553 ) TOKPR_FECHADO
554 { TOKCH_ABERTO
556 strcpy TOKIDENTIFICADOR
556 ( TOKPS_ABERTO
556 token TOKIDENTIFICADOR
556 , TOKVIRGULA
556 TOKVOID TOKIDENTIFICADOR
556 [ TOKPR_ABERTO
556 1 TOK_NINT
556 ] TOKPR_FECHADO
556 ) TOKPR_FECHADO
556 ; TOKPVIRGULA
557 printf TOKIDENTIFICADOR
557 ( TOKPS_ABERTO
557 , TOKVIRGULA
557 linha TOKIDENTIFICADOR
557 , TOKVIRGULA
557 lexema TOKIDENTIFICADOR
557 , TOKVIRGULA
557 token TOKIDENTIFICADOR
557 ) TOKPR_FECHADO
557 ; TOKPVIRGULA
558 fprintf TOKIDENTIFICADOR
558 ( TOKPS_ABERTO
558 pont_arq TOKIDENTIFICADOR
558 , TOKVIRGULA
558 , TOKVIRGULA
558 linha TOKIDENTIFICADOR
558 , TOKVIRGULA
558 lexema TOKIDENTIFICADOR
558 , TOKVIRGULA
558 token TOKIDENTIFICADOR
558 ) TOKPR_FECHADO
558 ; TOKPVIRGULA
559 lexema TOKIDENTIFICADOR
559 [ TOKPR_ABERTO
559 0 TOK_NINT
559 ] TOKPR_FECHADO
559 = TOKMUL
559 '\0' TOKCARATER
559 ; TOKPVIRGULA
560 } TOKCH_FECHADO
561 else PALRESERVADA
561 if PALRESERVADA
561 ( TOKPS_ABERTO
561 strcmp TOKIDENTIFICADOR
561 ( TOKPS_ABERTO
561 lexema TOKIDENTIFICADOR
561 , TOKVIRGULA
561 TOKVOLATILE TOKIDENTIFICADOR
561 [ TOKPR_ABERTO
561 0 TOK_NINT
561 ] TOKPR_FECHADO
561 ) TOKPR_FECHADO
561 == TOKATR_COMPOSTA
561 0 TOK_NINT
561 ) TOKPR_FECHADO
562 { TOKCH_ABERTO
564 strcpy TOKIDENTIFICADOR
564 ( TOKPS_ABERTO
564 token TOKIDENTIFICADOR
564 , TOKVIRGULA
564 TOKVOLATILE TOKIDENTIFICADOR
564 [ TOKPR_ABERTO
564 1 TOK_NINT
564 ] TOKPR_FECHADO
564 ) TOKPR_FECHADO
564 ; TOKPVIRGULA
565 printf TOKIDENTIFICADOR
565 ( TOKPS_ABERTO
565 , TOKVIRGULA
565 linha TOKIDENTIFICADOR
565 , TOKVIRGULA
565 lexema TOKIDENTIFICADOR
565 , TOKVIRGULA
565 token TOKIDENTIFICADOR
565 ) TOKPR_FECHADO
565 ; TOKPVIRGULA
566 fprintf TOKIDENTIFICADOR
566 ( TOKPS_ABERTO
566 pont_arq TOKIDENTIFICADOR
566 , TOKVIRGULA
566 , TOKVIRGULA
566 linha TOKIDENTIFICADOR
566 , TOKVIRGULA
566 lexema TOKIDENTIFICADOR
566 , TOKVIRGULA
566 token TOKIDENTIFICADOR
566 ) TOKPR_FECHADO
566 ; TOKPVIRGULA
567 lexema TOKIDENTIFICADOR
567 [ TOKPR_ABERTO
567 0 TOK_NINT
567 ] TOKPR_FECHADO
567 = TOKMUL
567 '\0' TOKCARATER
567 ; TOKPVIRGULA
568 estado TOKIDENTIFICADOR
568 = TOKMUL
568 0 TOK_NINT
568 ; TOKPVIRGULA
569 } TOKCH_FECHADO
570 else PALRESERVADA
570 if PALRESERVADA
570 ( TOKPS_ABERTO
570 strcmp TOKIDENTIFICADOR
570 ( TOKPS_ABERTO
570 lexema TOKIDENTIFICADOR
570 , TOKVIRGULA
570 TOKWHILE TOKIDENTIFICADOR
570 [ TOKPR_ABERTO
570 0 TOK_NINT
570 ] TOKPR_FECHADO
570 ) TOKPR_FECHADO
570 == TOKATR_COMPOSTA
570 0 TOK_NINT
570 ) TOKPR_FECHADO
571 { TOKCH_ABERTO
573 strcpy TOKIDENTIFICADOR
573 ( TOKPS_ABERTO
573 token TOKIDENTIFICADOR
573 , TOKVIRGULA
573 TOKWHILE TOKIDENTIFICADOR
573 [ TOKPR_ABERTO
573 1 TOK_NINT
573 ] TOKPR_FECHADO
573 ) TOKPR_FECHADO
573 ; TOKPVIRGULA
574 printf TOKIDENTIFICADOR
574 ( TOKPS_ABERTO
574 , TOKVIRGULA
574 linha TOKIDENTIFICADOR
574 , TOKVIRGULA
574 lexema TOKIDENTIFICADOR
574 , TOKVIRGULA
574 token TOKIDENTIFICADOR
574 ) TOKPR_FECHADO
574 ; TOKPVIRGULA
575 fprintf TOKIDENTIFICADOR
575 ( TOKPS_ABERTO
575 pont_arq TOKIDENTIFICADOR
575 , TOKVIRGULA
575 , TOKVIRGULA
575 linha TOKIDENTIFICADOR
575 , TOKVIRGULA
575 lexema TOKIDENTIFICADOR
575 , TOKVIRGULA
575 token TOKIDENTIFICADOR
575 ) TOKPR_FECHADO
575 ; TOKPVIRGULA
576 lexema TOKIDENTIFICADOR
576 [ TOKPR_ABERTO
576 0 TOK_NINT
576 ] TOKPR_FECHADO
576 = TOKMUL
576 '\0' TOKCARATER
576 ; TOKPVIRGULA
577 estado TOKIDENTIFICADOR
577 = TOKMUL
577 0 TOK_NINT
577 ; TOKPVIRGULA
578 } TOKCH_FECHADO
579 else PALRESERVADA
579 if PALRESERVADA
579 ( TOKPS_ABERTO
579 strcmp TOKIDENTIFICADOR
579 ( TOKPS_ABERTO
579 lexema TOKIDENTIFICADOR
579 , TOKVIRGULA
579 TOKINCLUDE TOKIDENTIFICADOR
579 [ TOKPR_ABERTO
579 0 TOK_NINT
579 ] TOKPR_FECHADO
579 ) TOKPR_FECHADO
579 == TOKATR_COMPOSTA
579 0 TOK_NINT
579 ) TOKPR_FECHADO
580 { TOKCH_ABERTO
581 strcpy TOKIDENTIFICADOR
581 ( TOKPS_ABERTO
581 token TOKIDENTIFICADOR
581 , TOKVIRGULA
581 TOKINCLUDE TOKIDENTIFICADOR
581 [ TOKPR_ABERTO
581 1 TOK_NINT
581 ] TOKPR_FECHADO
581 ) TOKPR_FECHADO
581 ; TOKPVIRGULA
582 printf TOKIDENTIFICADOR
582 ( TOKPS_ABERTO
582 , TOKVIRGULA
582 linha TOKIDENTIFICADOR
582 , TOKVIRGULA
582 lexema TOKIDENTIFICADOR
582 , TOKVIRGULA
582 token TOKIDENTIFICADOR
582 ) TOKPR_FECHADO
582 ; TOKPVIRGULA
583 fprintf TOKIDENTIFICADOR
583 ( TOKPS_ABERTO
583 pont_arq TOKIDENTIFICADOR
583 , TOKVIRGULA
583 , TOKVIRGULA
583 linha TOKIDENTIFICADOR
583 , TOKVIRGULA
583 lexema TOKIDENTIFICADOR
583 , TOKVIRGULA
583 token TOKIDENTIFICADOR
583 ) TOKPR_FECHADO
583 ; TOKPVIRGULA
584 lexema TOKIDENTIFICADOR
584 [ TOKPR_ABERTO
584 0 TOK_NINT
584 ] TOKPR_FECHADO
584 = TOKMUL
584 '\0' TOKCARATER
584 ; TOKPVIRGULA
585 estado TOKIDENTIFICADOR
585 = TOKMUL
585 0 TOK_NINT
585 ; TOKPVIRGULA
586 } TOKCH_FECHADO
587 else PALRESERVADA
588 { TOKCH_ABERTO
589 strcpy TOKIDENTIFICADOR
589 ( TOKPS_ABERTO
589 token TOKIDENTIFICADOR
589 , TOKVIRGULA
589 ) TOKPR_FECHADO
589 ; TOKPVIRGULA
591 printf TOKIDENTIFICADOR
591 ( TOKPS_ABERTO
591 , TOKVIRGULA
591 linha TOKIDENTIFICADOR
591 , TOKVIRGULA
591 lexema TOKIDENTIFICADOR
591 , TOKVIRGULA
591 token TOKIDENTIFICADOR
591 ) TOKPR_FECHADO
591 ; TOKPVIRGULA
592 fprintf TOKIDENTIFICADOR
592 ( TOKPS_ABERTO
592 pont_arq TOKIDENTIFICADOR
592 , TOKVIRGULA
592 , TOKVIRGULA
592 linha TOKIDENTIFICADOR
592 , TOKVIRGULA
592 lexema TOKIDENTIFICADOR
592 , TOKVIRGULA
592 token TOKIDENTIFICADOR
592 ) TOKPR_FECHADO
592 ; TOKPVIRGULA
593 lexema TOKIDENTIFICADOR
593 [ TOKPR_ABERTO
593 0 TOK_NINT
593 ] TOKPR_FECHADO
593 = TOKMUL
593 '\0' TOKCARATER
593 ; TOKPVIRGULA
594 estado TOKIDENTIFICADOR
594 = TOKMUL
594 0 TOK_NINT
594 ; TOKPVIRGULA
595 } TOKCH_FECHADO
597 break PALRESERVADA
597 ; TOKPVIRGULA
598 case PALRESERVADA
598 3 TOK_NINT
598 : TOKATR_BIT
599 if PALRESERVADA
599 ( TOKPS_ABERTO
599 car TOKIDENTIFICADOR
599 == TOKATR_COMPOSTA
599 62 TOK_NINT
599 ) TOKPR_FECHADO
600 { TOKCH_ABERTO
601 char PALRESERVADA
601 carac TOKIDENTIFICADOR
601 = TOKMUL
601 ( TOKPS_ABERTO
601 char PALRESERVADA
601 ) TOKPR_FECHADO
601 car TOKIDENTIFICADOR
601 ; TOKPVIRGULA
602 strncat TOKIDENTIFICADOR
602 ( TOKPS_ABERTO
602 lexema TOKIDENTIFICADOR
602 , TOKVIRGULA
602 & TOKANDBIT
602 carac TOKIDENTIFICADOR
602 , TOKVIRGULA
602 1 TOK_NINT
602 ) TOKPR_FECHADO
602 ; TOKPVIRGULA
603 estado TOKIDENTIFICADOR
603 = TOKMUL
603 5 TOK_NINT
603 ; TOKPVIRGULA
604 } TOKCH_FECHADO
605 else PALRESERVADA
605 if PALRESERVADA
605 ( TOKPS_ABERTO
605 car TOKIDENTIFICADOR
605 == TOKATR_COMPOSTA
605 61 TOK_NINT
605 ) TOKPR_FECHADO
606 { TOKCH_ABERTO
607 char PALRESERVADA
607 carac TOKIDENTIFICADOR
607 = TOKMUL
607 ( TOKPS_ABERTO
607 char PALRESERVADA
607 ) TOKPR_FECHADO
607 car TOKIDENTIFICADOR
607 ; TOKPVIRGULA
608 strncat TOKIDENTIFICADOR
608 ( TOKPS_ABERTO
608 lexema TOKIDENTIFICADOR
608 , TOKVIRGULA
608 & TOKANDBIT
608 carac TOKIDENTIFICADOR
608 , TOKVIRGULA
608 1 TOK_NINT
608 ) TOKPR_FECHADO
608 ; TOKPVIRGULA
609 estado TOKIDENTIFICADOR
609 = TOKMUL
609 4 TOK_NINT
609 ; TOKPVIRGULA
610 } TOKCH_FECHADO
611 else PALRESERVADA
612 { TOKCH_ABERTO
613 volta_char TOKIDENTIFICADOR
613 ( TOKPS_ABERTO
613 farq TOKIDENTIFICADOR
613 ) TOKPR_FECHADO
613 ; TOKPVIRGULA
614 estado TOKIDENTIFICADOR
614 = TOKMUL
614 6 TOK_NINT
614 ; TOKPVIRGULA
615 } TOKCH_FECHADO
616 break PALRESERVADA
616 ; TOKPVIRGULA
617 case PALRESERVADA
617 4 TOK_NINT
617 : TOKATR_BIT
618 case PALRESERVADA
618 5 TOK_NINT
618 : TOKATR_BIT
619 case PALRESERVADA
619 6 TOK_NINT
619 : TOKATR_BIT
620 volta_char TOKIDENTIFICADOR
620 ( TOKPS_ABERTO
620 farq TOKIDENTIFICADOR
620 ) TOKPR_FECHADO
620 ; TOKPVIRGULA
621 if PALRESERVADA
621 ( TOKPS_ABERTO
621 strcmp TOKIDENTIFICADOR
621 ( TOKPS_ABERTO
621 token TOKIDENTIFICADOR
621 , TOKVIRGULA
621 TOKDESDIR TOKIDENTIFICADOR
621 [ TOKPR_ABERTO
621 0 TOK_NINT
621 ] TOKPR_FECHADO
621 ) TOKPR_FECHADO
621 == TOKATR_COMPOSTA
621 0 TOK_NINT
621 ) TOKPR_FECHADO
622 { TOKCH_ABERTO
623 strcpy TOKIDENTIFICADOR
623 ( TOKPS_ABERTO
623 token TOKIDENTIFICADOR
623 , TOKVIRGULA
623 TOKDESDIR TOKIDENTIFICADOR
623 [ TOKPR_ABERTO
623 1 TOK_NINT
623 ] TOKPR_FECHADO
623 ) TOKPR_FECHADO
623 ; TOKPVIRGULA
625 printf TOKIDENTIFICADOR
625 ( TOKPS_ABERTO
625 , TOKVIRGULA
625 linha TOKIDENTIFICADOR
625 , TOKVIRGULA
625 lexema TOKIDENTIFICADOR
625 , TOKVIRGULA
625 token TOKIDENTIFICADOR
625 ) TOKPR_FECHADO
625 ; TOKPVIRGULA
626 fprintf TOKIDENTIFICADOR
626 ( TOKPS_ABERTO
626 pont_arq TOKIDENTIFICADOR
626 , TOKVIRGULA
626 , TOKVIRGULA
626 linha TOKIDENTIFICADOR
626 , TOKVIRGULA
626 lexema TOKIDENTIFICADOR
626 , TOKVIRGULA
626 token TOKIDENTIFICADOR
626 ) TOKPR_FECHADO
626 ; TOKPVIRGULA
627 lexema TOKIDENTIFICADOR
627 [ TOKPR_ABERTO
627 0 TOK_NINT
627 ] TOKPR_FECHADO
627 = TOKMUL
627 '\0' TOKCARATER
627 ; TOKPVIRGULA
628 estado TOKIDENTIFICADOR
628 = TOKMUL
628 0 TOK_NINT
628 ; TOKPVIRGULA
629 } TOKCH_FECHADO
630 else PALRESERVADA
630 if PALRESERVADA
630 ( TOKPS_ABERTO
630 strcmp TOKIDENTIFICADOR
630 ( TOKPS_ABERTO
630 token TOKIDENTIFICADOR
630 , TOKVIRGULA
630 TOKMAOIG TOKIDENTIFICADOR
630 [ TOKPR_ABERTO
630 0 TOK_NINT
630 ] TOKPR_FECHADO
630 ) TOKPR_FECHADO
630 == TOKATR_COMPOSTA
630 0 TOK_NINT
630 ) TOKPR_FECHADO
631 { TOKCH_ABERTO
632 strcpy TOKIDENTIFICADOR
632 ( TOKPS_ABERTO
632 token TOKIDENTIFICADOR
632 , TOKVIRGULA
632 TOKMAOIG TOKIDENTIFICADOR
632 [ TOKPR_ABERTO
632 1 TOK_NINT
632 ] TOKPR_FECHADO
632 ) TOKPR_FECHADO
632 ; TOKPVIRGULA
634 printf TOKIDENTIFICADOR
634 ( TOKPS_ABERTO
634 , TOKVIRGULA
634 linha TOKIDENTIFICADOR
634 , TOKVIRGULA
634 lexema TOKIDENTIFICADOR
634 , TOKVIRGULA
634 token TOKIDENTIFICADOR
634 ) TOKPR_FECHADO
634 ; TOKPVIRGULA
635 fprintf TOKIDENTIFICADOR
635 ( TOKPS_ABERTO
635 pont_arq TOKIDENTIFICADOR
635 , TOKVIRGULA
635 , TOKVIRGULA
635 linha TOKIDENTIFICADOR
635 , TOKVIRGULA
635 lexema TOKIDENTIFICADOR
635 , TOKVIRGULA
635 token TOKIDENTIFICADOR
635 ) TOKPR_FECHADO
635 ; TOKPVIRGULA
636 lexema TOKIDENTIFICADOR
636 [ TOKPR_ABERTO
636 0 TOK_NINT
636 ] TOKPR_FECHADO
636 = TOKMUL
636 '\0' TOKCARATER
636 ; TOKPVIRGULA
637 estado TOKIDENTIFICADOR
637 = TOKMUL
637 0 TOK_NINT
637 ; TOKPVIRGULA
638 } TOKCH_FECHADO
639 else PALRESERVADA
640 { TOKCH_ABERTO
641 strcpy TOKIDENTIFICADOR
641 ( TOKPS_ABERTO
641 token TOKIDENTIFICADOR
641 , TOKVIRGULA
641 TOKMAIOR TOKIDENTIFICADOR
641 [ TOKPR_ABERTO
641 1 TOK_NINT
641 ] TOKPR_FECHADO
641 ) TOKPR_FECHADO
641 ; TOKPVIRGULA
643 printf TOKIDENTIFICADOR
643 ( TOKPS_ABERTO
643 , TOKVIRGULA
643 linha TOKIDENTIFICADOR
643 , TOKVIRGULA
643 lexema TOKIDENTIFICADOR
643 , TOKVIRGULA
643 token TOKIDENTIFICADOR
643 ) TOKPR_FECHADO
643 ; TOKPVIRGULA
644 fprintf TOKIDENTIFICADOR
644 ( TOKPS_ABERTO
644 pont_arq TOKIDENTIFICADOR
644 , TOKVIRGULA
644 , TOKVIRGULA
644 linha TOKIDENTIFICADOR
644 , TOKVIRGULA
644 lexema TOKIDENTIFICADOR
644 , TOKVIRGULA
644 token TOKIDENTIFICADOR
644 ) TOKPR_FECHADO
644 ; TOKPVIRGULA
645 lexema TOKIDENTIFICADOR
645 [ TOKPR_ABERTO
645 0 TOK_NINT
645 ] TOKPR_FECHADO
645 = TOKMUL
645 '\0' TOKCARATER
645 ; TOKPVIRGULA
646 estado TOKIDENTIFICADOR
646 = TOKMUL
646 0 TOK_NINT
646 ; TOKPVIRGULA
647 } TOKCH_FECHADO
649 break PALRESERVADA
649 ; TOKPVIRGULA
651 case PALRESERVADA
651 7 TOK_NINT
651 : TOKATR_BIT
652 if PALRESERVADA
652 ( TOKPS_ABERTO
652 car TOKIDENTIFICADOR
652 == TOKATR_COMPOSTA
652 60 TOK_NINT
652 ) TOKPR_FECHADO
653 { TOKCH_ABERTO
654 char PALRESERVADA
654 carac TOKIDENTIFICADOR
654 = TOKMUL
654 ( TOKPS_ABERTO
654 char PALRESERVADA
654 ) TOKPR_FECHADO
654 car TOKIDENTIFICADOR
654 ; TOKPVIRGULA
655 strncat TOKIDENTIFICADOR
655 ( TOKPS_ABERTO
655 lexema TOKIDENTIFICADOR
655 , TOKVIRGULA
655 & TOKANDBIT
655 carac TOKIDENTIFICADOR
655 , TOKVIRGULA
655 1 TOK_NINT
655 ) TOKPR_FECHADO
655 ; TOKPVIRGULA
656 estado TOKIDENTIFICADOR
656 = TOKMUL
656 9 TOK_NINT
656 ; TOKPVIRGULA
657 } TOKCH_FECHADO
658 else PALRESERVADA
658 if PALRESERVADA
658 ( TOKPS_ABERTO
658 car TOKIDENTIFICADOR
658 == TOKATR_COMPOSTA
658 61 TOK_NINT
658 ) TOKPR_FECHADO
659 { TOKCH_ABERTO
660 char PALRESERVADA
660 carac TOKIDENTIFICADOR
660 = TOKMUL
660 ( TOKPS_ABERTO
660 char PALRESERVADA
660 ) TOKPR_FECHADO
660 car TOKIDENTIFICADOR
660 ; TOKPVIRGULA
661 strncat TOKIDENTIFICADOR
661 ( TOKPS_ABERTO
661 lexema TOKIDENTIFICADOR
661 , TOKVIRGULA
661 & TOKANDBIT
661 carac TOKIDENTIFICADOR
661 , TOKVIRGULA
661 1 TOK_NINT
661 ) TOKPR_FECHADO
661 ; TOKPVIRGULA
662 estado TOKIDENTIFICADOR
662 = TOKMUL
662 8 TOK_NINT
662 ; TOKPVIRGULA
663 } TOKCH_FECHADO
664 else PALRESERVADA
665 { TOKCH_ABERTO
666 volta_char TOKIDENTIFICADOR
666 ( TOKPS_ABERTO
666 farq TOKIDENTIFICADOR
666 ) TOKPR_FECHADO
666 ; TOKPVIRGULA
667 estado TOKIDENTIFICADOR
667 = TOKMUL
667 10 TOK_NINT
667 ; TOKPVIRGULA
668 } TOKCH_FECHADO
670 break PALRESERVADA
670 ; TOKPVIRGULA
671 case PALRESERVADA
671 8 TOK_NINT
671 : TOKATR_BIT
672 case PALRESERVADA
672 9 TOK_NINT
672 : TOKATR_BIT
673 case PALRESERVADA
673 10 TOK_NINT
673 : TOKATR_BIT
674 volta_char TOKIDENTIFICADOR
674 ( TOKPS_ABERTO
674 farq TOKIDENTIFICADOR
674 ) TOKPR_FECHADO
674 ; TOKPVIRGULA
675 if PALRESERVADA
675 ( TOKPS_ABERTO
675 strcmp TOKIDENTIFICADOR
675 ( TOKPS_ABERTO
675 token TOKIDENTIFICADOR
675 , TOKVIRGULA
675 TOKDESESQ TOKIDENTIFICADOR
675 [ TOKPR_ABERTO
675 0 TOK_NINT
675 ] TOKPR_FECHADO
675 ) TOKPR_FECHADO
675 == TOKATR_COMPOSTA
675 0 TOK_NINT
675 ) TOKPR_FECHADO
676 { TOKCH_ABERTO
677 strcpy TOKIDENTIFICADOR
677 ( TOKPS_ABERTO
677 token TOKIDENTIFICADOR
677 , TOKVIRGULA
677 TOKDESESQ TOKIDENTIFICADOR
677 [ TOKPR_ABERTO
677 1 TOK_NINT
677 ] TOKPR_FECHADO
677 ) TOKPR_FECHADO
677 ; TOKPVIRGULA
679 printf TOKIDENTIFICADOR
679 ( TOKPS_ABERTO
679 , TOKVIRGULA
679 linha TOKIDENTIFICADOR
679 , TOKVIRGULA
679 lexema TOKIDENTIFICADOR
679 , TOKVIRGULA
679 token TOKIDENTIFICADOR
679 ) TOKPR_FECHADO
679 ; TOKPVIRGULA
680 fprintf TOKIDENTIFICADOR
680 ( TOKPS_ABERTO
680 pont_arq TOKIDENTIFICADOR
680 , TOKVIRGULA
680 , TOKVIRGULA
680 linha TOKIDENTIFICADOR
680 , TOKVIRGULA
680 lexema TOKIDENTIFICADOR
680 , TOKVIRGULA
680 token TOKIDENTIFICADOR
680 ) TOKPR_FECHADO
680 ; TOKPVIRGULA
681 lexema TOKIDENTIFICADOR
681 [ TOKPR_ABERTO
681 0 TOK_NINT
681 ] TOKPR_FECHADO
681 = TOKMUL
681 '\0' TOKCARATER
681 ; TOKPVIRGULA
682 estado TOKIDENTIFICADOR
682 = TOKMUL
682 0 TOK_NINT
682 ; TOKPVIRGULA
683 } TOKCH_FECHADO
684 else PALRESERVADA
684 if PALRESERVADA
684 ( TOKPS_ABERTO
684 strcmp TOKIDENTIFICADOR
684 ( TOKPS_ABERTO
684 token TOKIDENTIFICADOR
684 , TOKVIRGULA
684 TOKMENIG TOKIDENTIFICADOR
684 [ TOKPR_ABERTO
684 0 TOK_NINT
684 ] TOKPR_FECHADO
684 ) TOKPR_FECHADO
684 == TOKATR_COMPOSTA
684 0 TOK_NINT
684 ) TOKPR_FECHADO
685 { TOKCH_ABERTO
686 strcpy TOKIDENTIFICADOR
686 ( TOKPS_ABERTO
686 token TOKIDENTIFICADOR
686 , TOKVIRGULA
686 TOKMENIG TOKIDENTIFICADOR
686 [ TOKPR_ABERTO
686 1 TOK_NINT
686 ] TOKPR_FECHADO
686 ) TOKPR_FECHADO
686 ; TOKPVIRGULA
688 printf TOKIDENTIFICADOR
688 ( TOKPS_ABERTO
688 , TOKVIRGULA
688 linha TOKIDENTIFICADOR
688 , TOKVIRGULA
688 lexema TOKIDENTIFICADOR
688 , TOKVIRGULA
688 token TOKIDENTIFICADOR
688 ) TOKPR_FECHADO
688 ; TOKPVIRGULA
689 fprintf TOKIDENTIFICADOR
689 ( TOKPS_ABERTO
689 pont_arq TOKIDENTIFICADOR
689 , TOKVIRGULA
689 , TOKVIRGULA
689 linha TOKIDENTIFICADOR
689 , TOKVIRGULA
689 lexema TOKIDENTIFICADOR
689 , TOKVIRGULA
689 token TOKIDENTIFICADOR
689 ) TOKPR_FECHADO
689 ; TOKPVIRGULA
690 lexema TOKIDENTIFICADOR
690 [ TOKPR_ABERTO
690 0 TOK_NINT
690 ] TOKPR_FECHADO
690 = TOKMUL
690 '\0' TOKCARATER
690 ; TOKPVIRGULA
691 estado TOKIDENTIFICADOR
691 = TOKMUL
691 0 TOK_NINT
691 ; TOKPVIRGULA
692 } TOKCH_FECHADO
693 else PALRESERVADA
694 { TOKCH_ABERTO
695 strcpy TOKIDENTIFICADOR
695 ( TOKPS_ABERTO
695 token TOKIDENTIFICADOR
695 , TOKVIRGULA
695 TOKMENORQUE TOKIDENTIFICADOR
695 [ TOKPR_ABERTO
695 1 TOK_NINT
695 ] TOKPR_FECHADO
695 ) TOKPR_FECHADO
695 ; TOKPVIRGULA
697 printf TOKIDENTIFICADOR
697 ( TOKPS_ABERTO
697 , TOKVIRGULA
697 linha TOKIDENTIFICADOR
697 , TOKVIRGULA
697 lexema TOKIDENTIFICADOR
697 , TOKVIRGULA
697 token TOKIDENTIFICADOR
697 ) TOKPR_FECHADO
697 ; TOKPVIRGULA
698 fprintf TOKIDENTIFICADOR
698 ( TOKPS_ABERTO
698 pont_arq TOKIDENTIFICADOR
698 , TOKVIRGULA
698 , TOKVIRGULA
698 linha TOKIDENTIFICADOR
698 , TOKVIRGULA
698 lexema TOKIDENTIFICADOR
698 , TOKVIRGULA
698 token TOKIDENTIFICADOR
698 ) TOKPR_FECHADO
698 ; TOKPVIRGULA
699 lexema TOKIDENTIFICADOR
699 [ TOKPR_ABERTO
699 0 TOK_NINT
699 ] TOKPR_FECHADO
699 = TOKMUL
699 '\0' TOKCARATER
699 ; TOKPVIRGULA
700 estado TOKIDENTIFICADOR
700 = TOKMUL
700 0 TOK_NINT
700 ; TOKPVIRGULA
701 } TOKCH_FECHADO
703 break PALRESERVADA
703 ; TOKPVIRGULA
704 case PALRESERVADA
704 11 TOK_NINT
704 : TOKATR_BIT
705 if PALRESERVADA
705 ( TOKPS_ABERTO
705 car TOKIDENTIFICADOR
705 == TOKATR_COMPOSTA
705 61 TOK_NINT
705 ) TOKPR_FECHADO
706 { TOKCH_ABERTO
707 char PALRESERVADA
707 carac TOKIDENTIFICADOR
707 = TOKMUL
707 ( TOKPS_ABERTO
707 char PALRESERVADA
707 ) TOKPR_FECHADO
707 car TOKIDENTIFICADOR
707 ; TOKPVIRGULA
708 strncat TOKIDENTIFICADOR
708 ( TOKPS_ABERTO
708 lexema TOKIDENTIFICADOR
708 , TOKVIRGULA
708 & TOKANDBIT
708 carac TOKIDENTIFICADOR
708 , TOKVIRGULA
708 1 TOK_NINT
708 ) TOKPR_FECHADO
708 ; TOKPVIRGULA
709 estado TOKIDENTIFICADOR
709 = TOKMUL
709 12 TOK_NINT
709 ; TOKPVIRGULA
710 } TOKCH_FECHADO
711 else PALRESERVADA
712 { TOKCH_ABERTO
713 volta_char TOKIDENTIFICADOR
713 ( TOKPS_ABERTO
713 farq TOKIDENTIFICADOR
713 ) TOKPR_FECHADO
713 ; TOKPVIRGULA
714 estado TOKIDENTIFICADOR
714 = TOKMUL
714 13 TOK_NINT
714 ; TOKPVIRGULA
715 } TOKCH_FECHADO
716 break PALRESERVADA
716 ; TOKPVIRGULA
718 case PALRESERVADA
718 12 TOK_NINT
718 : TOKATR_BIT
719 volta_char TOKIDENTIFICADOR
719 ( TOKPS_ABERTO
719 farq TOKIDENTIFICADOR
719 ) TOKPR_FECHADO
719 ; TOKPVIRGULA
720 strcpy TOKIDENTIFICADOR
720 ( TOKPS_ABERTO
720 token TOKIDENTIFICADOR
720 , TOKVIRGULA
720 TOKIGUAL TOKIDENTIFICADOR
720 [ TOKPR_ABERTO
720 1 TOK_NINT
720 ] TOKPR_FECHADO
720 ) TOKPR_FECHADO
720 ; TOKPVIRGULA
721 printf TOKIDENTIFICADOR
721 ( TOKPS_ABERTO
721 , TOKVIRGULA
721 linha TOKIDENTIFICADOR
721 , TOKVIRGULA
721 lexema TOKIDENTIFICADOR
721 , TOKVIRGULA
721 token TOKIDENTIFICADOR
721 ) TOKPR_FECHADO
721 ; TOKPVIRGULA
722 fprintf TOKIDENTIFICADOR
722 ( TOKPS_ABERTO
722 pont_arq TOKIDENTIFICADOR
722 , TOKVIRGULA
722 , TOKVIRGULA
722 linha TOKIDENTIFICADOR
722 , TOKVIRGULA
722 lexema TOKIDENTIFICADOR
722 , TOKVIRGULA
722 token TOKIDENTIFICADOR
722 ) TOKPR_FECHADO
722 ; TOKPVIRGULA
723 lexema TOKIDENTIFICADOR
723 [ TOKPR_ABERTO
723 0 TOK_NINT
723 ] TOKPR_FECHADO
723 = TOKMUL
723 '\0' TOKCARATER
723 ; TOKPVIRGULA
724 estado TOKIDENTIFICADOR
724 = TOKMUL
724 0 TOK_NINT
724 ; TOKPVIRGULA
725 break PALRESERVADA
725 ; TOKPVIRGULA
726 case PALRESERVADA
726 13 TOK_NINT
726 : TOKATR_BIT
727 volta_char TOKIDENTIFICADOR
727 ( TOKPS_ABERTO
727 farq TOKIDENTIFICADOR
727 ) TOKPR_FECHADO
727 ; TOKPVIRGULA
728 strcpy TOKIDENTIFICADOR
728 ( TOKPS_ABERTO
728 token TOKIDENTIFICADOR
728 , TOKVIRGULA
728 TOKATR TOKIDENTIFICADOR
728 [ TOKPR_ABERTO
728 1 TOK_NINT
728 ] TOKPR_FECHADO
728 ) TOKPR_FECHADO
728 ; TOKPVIRGULA
729 printf TOKIDENTIFICADOR
729 ( TOKPS_ABERTO
729 , TOKVIRGULA
729 linha TOKIDENTIFICADOR
729 , TOKVIRGULA
729 lexema TOKIDENTIFICADOR
729 , TOKVIRGULA
729 token TOKIDENTIFICADOR
729 ) TOKPR_FECHADO
729 ; TOKPVIRGULA
730 fprintf TOKIDENTIFICADOR
730 ( TOKPS_ABERTO
730 pont_arq TOKIDENTIFICADOR
730 , TOKVIRGULA
730 , TOKVIRGULA
730 linha TOKIDENTIFICADOR
730 , TOKVIRGULA
730 lexema TOKIDENTIFICADOR
730 , TOKVIRGULA
730 token TOKIDENTIFICADOR
730 ) TOKPR_FECHADO
730 ; TOKPVIRGULA
731 lexema TOKIDENTIFICADOR
731 [ TOKPR_ABERTO
731 0 TOK_NINT
731 ] TOKPR_FECHADO
731 = TOKMUL
731 '\0' TOKCARATER
731 ; TOKPVIRGULA
732 estado TOKIDENTIFICADOR
732 = TOKMUL
732 0 TOK_NINT
732 ; TOKPVIRGULA
733 break PALRESERVADA
733 ; TOKPVIRGULA
734 case PALRESERVADA
734 18 TOK_NINT
734 : TOKATR_BIT
735 if PALRESERVADA
735 ( TOKPS_ABERTO
735 car TOKIDENTIFICADOR
735 == TOKATR_COMPOSTA
735 61 TOK_NINT
735 ) TOKPR_FECHADO
736 { TOKCH_ABERTO
737 char PALRESERVADA
737 carac TOKIDENTIFICADOR
737 = TOKMUL
737 ( TOKPS_ABERTO
737 char PALRESERVADA
737 ) TOKPR_FECHADO
737 car TOKIDENTIFICADOR
737 ; TOKPVIRGULA
738 strncat TOKIDENTIFICADOR
738 ( TOKPS_ABERTO
738 lexema TOKIDENTIFICADOR
738 , TOKVIRGULA
738 & TOKANDBIT
738 carac TOKIDENTIFICADOR
738 , TOKVIRGULA
738 1 TOK_NINT
738 ) TOKPR_FECHADO
738 ; TOKPVIRGULA
739 estado TOKIDENTIFICADOR
739 = TOKMUL
739 19 TOK_NINT
739 ; TOKPVIRGULA
740 } TOKCH_FECHADO
741 else PALRESERVADA
742 { TOKCH_ABERTO
743 volta_char TOKIDENTIFICADOR
743 ( TOKPS_ABERTO
743 farq TOKIDENTIFICADOR
743 ) TOKPR_FECHADO
743 ; TOKPVIRGULA
744 estado TOKIDENTIFICADOR
744 = TOKMUL
744 20 TOK_NINT
744 ; TOKPVIRGULA
745 } TOKCH_FECHADO
747 break PALRESERVADA
747 ; TOKPVIRGULA
748 case PALRESERVADA
748 19 TOK_NINT
748 : TOKATR_BIT
749 case PALRESERVADA
749 20 TOK_NINT
749 : TOKATR_BIT
750 volta_char TOKIDENTIFICADOR
750 ( TOKPS_ABERTO
750 farq TOKIDENTIFICADOR
750 ) TOKPR_FECHADO
750 ; TOKPVIRGULA
751 if PALRESERVADA
751 ( TOKPS_ABERTO
751 strcmp TOKIDENTIFICADOR
751 ( TOKPS_ABERTO
751 lexema TOKIDENTIFICADOR
751 , TOKVIRGULA
751 TOKDIFE TOKIDENTIFICADOR
751 [ TOKPR_ABERTO
751 0 TOK_NINT
751 ] TOKPR_FECHADO
751 ) TOKPR_FECHADO
751 == TOKATR_COMPOSTA
751 0 TOK_NINT
751 ) TOKPR_FECHADO
752 { TOKCH_ABERTO
753 strcpy TOKIDENTIFICADOR
753 ( TOKPS_ABERTO
753 token TOKIDENTIFICADOR
753 , TOKVIRGULA
753 TOKDIFE TOKIDENTIFICADOR
753 [ TOKPR_ABERTO
753 1 TOK_NINT
753 ] TOKPR_FECHADO
753 ) TOKPR_FECHADO
753 ; TOKPVIRGULA
755 printf TOKIDENTIFICADOR
755 ( TOKPS_ABERTO
755 , TOKVIRGULA
755 linha TOKIDENTIFICADOR
755 , TOKVIRGULA
755 lexema TOKIDENTIFICADOR
755 , TOKVIRGULA
755 token TOKIDENTIFICADOR
755 ) TOKPR_FECHADO
755 ; TOKPVIRGULA
756 fprintf TOKIDENTIFICADOR
756 ( TOKPS_ABERTO
756 pont_arq TOKIDENTIFICADOR
756 , TOKVIRGULA
756 , TOKVIRGULA
756 linha TOKIDENTIFICADOR
756 , TOKVIRGULA
756 lexema TOKIDENTIFICADOR
756 , TOKVIRGULA
756 token TOKIDENTIFICADOR
756 ) TOKPR_FECHADO
756 ; TOKPVIRGULA
757 lexema TOKIDENTIFICADOR
757 [ TOKPR_ABERTO
757 0 TOK_NINT
757 ] TOKPR_FECHADO
757 = TOKMUL
757 '\0' TOKCARATER
757 ; TOKPVIRGULA
758 estado TOKIDENTIFICADOR
758 = TOKMUL
758 0 TOK_NINT
758 ; TOKPVIRGULA
759 } TOKCH_FECHADO
760 else PALRESERVADA
761 { TOKCH_ABERTO
762 strcpy TOKIDENTIFICADOR
762 ( TOKPS_ABERTO
762 token TOKIDENTIFICADOR
762 , TOKVIRGULA
762 TOKNOT TOKIDENTIFICADOR
762 [ TOKPR_ABERTO
762 1 TOK_NINT
762 ] TOKPR_FECHADO
762 ) TOKPR_FECHADO
762 ; TOKPVIRGULA
764 printf TOKIDENTIFICADOR
764 ( TOKPS_ABERTO
764 , TOKVIRGULA
764 linha TOKIDENTIFICADOR
764 , TOKVIRGULA
764 lexema TOKIDENTIFICADOR
764 , TOKVIRGULA
764 token TOKIDENTIFICADOR
764 ) TOKPR_FECHADO
764 ; TOKPVIRGULA
765 fprintf TOKIDENTIFICADOR
765 ( TOKPS_ABERTO
765 pont_arq TOKIDENTIFICADOR
765 , TOKVIRGULA
765 , TOKVIRGULA
765 linha TOKIDENTIFICADOR
765 , TOKVIRGULA
765 lexema TOKIDENTIFICADOR
765 , TOKVIRGULA
765 token TOKIDENTIFICADOR
765 ) TOKPR_FECHADO
765 ; TOKPVIRGULA
766 lexema TOKIDENTIFICADOR
766 [ TOKPR_ABERTO
766 0 TOK_NINT
766 ] TOKPR_FECHADO
766 = TOKMUL
766 '\0' TOKCARATER
766 ; TOKPVIRGULA
767 estado TOKIDENTIFICADOR
767 = TOKMUL
767 0 TOK_NINT
767 ; TOKPVIRGULA
768 } TOKCH_FECHADO
770 break PALRESERVADA
770 ; TOKPVIRGULA
771 case PALRESERVADA
771 33 TOK_NINT
771 : TOKATR_BIT
772 if PALRESERVADA
772 ( TOKPS_ABERTO
772 car TOKIDENTIFICADOR
772 >= TOKMAIOR
772 48 TOK_NINT
772 && TOKAND
772 car TOKIDENTIFICADOR
772 <= TOKMENORQUE
772 57 TOK_NINT
772 ) TOKPR_FECHADO
773 { TOKCH_ABERTO
774 char PALRESERVADA
774 carac TOKIDENTIFICADOR
774 = TOKMUL
774 ( TOKPS_ABERTO
774 char PALRESERVADA
774 ) TOKPR_FECHADO
774 car TOKIDENTIFICADOR
774 ; TOKPVIRGULA
775 strncat TOKIDENTIFICADOR
775 ( TOKPS_ABERTO
775 lexema TOKIDENTIFICADOR
775 , TOKVIRGULA
775 & TOKANDBIT
775 carac TOKIDENTIFICADOR
775 , TOKVIRGULA
775 1 TOK_NINT
775 ) TOKPR_FECHADO
775 ; TOKPVIRGULA
776 estado TOKIDENTIFICADOR
776 = TOKMUL
776 37 TOK_NINT
776 ; TOKPVIRGULA
777 } TOKCH_FECHADO
778 else PALRESERVADA
778 if PALRESERVADA
778 ( TOKPS_ABERTO
778 car TOKIDENTIFICADOR
778 == TOKATR_COMPOSTA
778 61 TOK_NINT
778 ) TOKPR_FECHADO
779 { TOKCH_ABERTO
780 char PALRESERVADA
780 carac TOKIDENTIFICADOR
780 = TOKMUL
780 ( TOKPS_ABERTO
780 char PALRESERVADA
780 ) TOKPR_FECHADO
780 car TOKIDENTIFICADOR
780 ; TOKPVIRGULA
781 strncat TOKIDENTIFICADOR
781 ( TOKPS_ABERTO
781 lexema TOKIDENTIFICADOR
781 , TOKVIRGULA
781 & TOKANDBIT
781 carac TOKIDENTIFICADOR
781 , TOKVIRGULA
781 1 TOK_NINT
781 ) TOKPR_FECHADO
781 ; TOKPVIRGULA
782 estado TOKIDENTIFICADOR
782 = TOKMUL
782 35 TOK_NINT
782 ; TOKPVIRGULA
783 } TOKCH_FECHADO
784 else PALRESERVADA
784 if PALRESERVADA
784 ( TOKPS_ABERTO
784 car TOKIDENTIFICADOR
784 == TOKATR_COMPOSTA
784 45 TOK_NINT
784 ) TOKPR_FECHADO
785 { TOKCH_ABERTO
786 char PALRESERVADA
786 carac TOKIDENTIFICADOR
786 = TOKMUL
786 ( TOKPS_ABERTO
786 char PALRESERVADA
786 ) TOKPR_FECHADO
786 car TOKIDENTIFICADOR
786 ; TOKPVIRGULA
787 strncat TOKIDENTIFICADOR
787 ( TOKPS_ABERTO
787 lexema TOKIDENTIFICADOR
787 , TOKVIRGULA
787 & TOKANDBIT
787 carac TOKIDENTIFICADOR
787 , TOKVIRGULA
787 1 TOK_NINT
787 ) TOKPR_FECHADO
787 ; TOKPVIRGULA
788 estado TOKIDENTIFICADOR
788 = TOKMUL
788 36 TOK_NINT
788 ; TOKPVIRGULA
789 } TOKCH_FECHADO
790 else PALRESERVADA
791 { TOKCH_ABERTO
792 volta_char TOKIDENTIFICADOR
792 ( TOKPS_ABERTO
792 farq TOKIDENTIFICADOR
792 ) TOKPR_FECHADO
792 ; TOKPVIRGULA
793 estado TOKIDENTIFICADOR
793 = TOKMUL
793 34 TOK_NINT
793 ; TOKPVIRGULA
794 } TOKCH_FECHADO
796 break PALRESERVADA
796 ; TOKPVIRGULA
797 case PALRESERVADA
797 34 TOK_NINT
797 : TOKATR_BIT
798 case PALRESERVADA
798 35 TOK_NINT
798 : TOKATR_BIT
799 case PALRESERVADA
799 36 TOK_NINT
799 : TOKATR_BIT
800 volta_char TOKIDENTIFICADOR
800 ( TOKPS_ABERTO
800 farq TOKIDENTIFICADOR
800 ) TOKPR_FECHADO
800 ; TOKPVIRGULA
801 if PALRESERVADA
801 ( TOKPS_ABERTO
801 strcmp TOKIDENTIFICADOR
801 ( TOKPS_ABERTO
801 lexema TOKIDENTIFICADOR
801 , TOKVIRGULA
801 TOKMENOS TOKIDENTIFICADOR
801 [ TOKPR_ABERTO
801 0 TOK_NINT
801 ] TOKPR_FECHADO
801 ) TOKPR_FECHADO
801 == TOKATR_COMPOSTA
801 0 TOK_NINT
801 ) TOKPR_FECHADO
802 { TOKCH_ABERTO
803 strcpy TOKIDENTIFICADOR
803 ( TOKPS_ABERTO
803 token TOKIDENTIFICADOR
803 , TOKVIRGULA
803 TOKMENOS TOKIDENTIFICADOR
803 [ TOKPR_ABERTO
803 1 TOK_NINT
803 ] TOKPR_FECHADO
803 ) TOKPR_FECHADO
803 ; TOKPVIRGULA
805 printf TOKIDENTIFICADOR
805 ( TOKPS_ABERTO
805 , TOKVIRGULA
805 linha TOKIDENTIFICADOR
805 , TOKVIRGULA
805 lexema TOKIDENTIFICADOR
805 , TOKVIRGULA
805 token TOKIDENTIFICADOR
805 ) TOKPR_FECHADO
805 ; TOKPVIRGULA
806 fprintf TOKIDENTIFICADOR
806 ( TOKPS_ABERTO
806 pont_arq TOKIDENTIFICADOR
806 , TOKVIRGULA
806 , TOKVIRGULA
806 linha TOKIDENTIFICADOR
806 , TOKVIRGULA
806 lexema TOKIDENTIFICADOR
806 , TOKVIRGULA
806 token TOKIDENTIFICADOR
806 ) TOKPR_FECHADO
806 ; TOKPVIRGULA
807 lexema TOKIDENTIFICADOR
807 [ TOKPR_ABERTO
807 0 TOK_NINT
807 ] TOKPR_FECHADO
807 = TOKMUL
807 '\0' TOKCARATER
807 ; TOKPVIRGULA
808 estado TOKIDENTIFICADOR
808 = TOKMUL
808 0 TOK_NINT
808 ; TOKPVIRGULA
809 } TOKCH_FECHADO
810 else PALRESERVADA
810 if PALRESERVADA
810 ( TOKPS_ABERTO
810 strcmp TOKIDENTIFICADOR
810 ( TOKPS_ABERTO
810 lexema TOKIDENTIFICADOR
810 , TOKVIRGULA
810 TOKDECATR TOKIDENTIFICADOR
810 [ TOKPR_ABERTO
810 0 TOK_NINT
810 ] TOKPR_FECHADO
810 ) TOKPR_FECHADO
810 == TOKATR_COMPOSTA
810 0 TOK_NINT
810 ) TOKPR_FECHADO
811 { TOKCH_ABERTO
812 strcpy TOKIDENTIFICADOR
812 ( TOKPS_ABERTO
812 token TOKIDENTIFICADOR
812 , TOKVIRGULA
812 TOKDECATR TOKIDENTIFICADOR
812 [ TOKPR_ABERTO
812 1 TOK_NINT
812 ] TOKPR_FECHADO
812 ) TOKPR_FECHADO
812 ; TOKPVIRGULA
813 printf TOKIDENTIFICADOR
813 ( TOKPS_ABERTO
813 , TOKVIRGULA
813 linha TOKIDENTIFICADOR
813 , TOKVIRGULA
813 lexema TOKIDENTIFICADOR
813 , TOKVIRGULA
813 token TOKIDENTIFICADOR
813 ) TOKPR_FECHADO
813 ; TOKPVIRGULA
814 fprintf TOKIDENTIFICADOR
814 ( TOKPS_ABERTO
814 pont_arq TOKIDENTIFICADOR
814 , TOKVIRGULA
814 , TOKVIRGULA
814 linha TOKIDENTIFICADOR
814 , TOKVIRGULA
814 lexema TOKIDENTIFICADOR
814 , TOKVIRGULA
814 token TOKIDENTIFICADOR
814 ) TOKPR_FECHADO
814 ; TOKPVIRGULA
815 lexema TOKIDENTIFICADOR
815 [ TOKPR_ABERTO
815 0 TOK_NINT
815 ] TOKPR_FECHADO
815 = TOKMUL
815 '\0' TOKCARATER
815 ; TOKPVIRGULA
816 estado TOKIDENTIFICADOR
816 = TOKMUL
816 0 TOK_NINT
816 ; TOKPVIRGULA
817 } TOKCH_FECHADO
818 else PALRESERVADA
818 if PALRESERVADA
818 ( TOKPS_ABERTO
818 strcmp TOKIDENTIFICADOR
818 ( TOKPS_ABERTO
818 lexema TOKIDENTIFICADOR
818 , TOKVIRGULA
818 TOKDEC TOKIDENTIFICADOR
818 [ TOKPR_ABERTO
818 0 TOK_NINT
818 ] TOKPR_FECHADO
818 ) TOKPR_FECHADO
818 == TOKATR_COMPOSTA
818 0 TOK_NINT
818 ) TOKPR_FECHADO
819 { TOKCH_ABERTO
821 strcpy TOKIDENTIFICADOR
821 ( TOKPS_ABERTO
821 token TOKIDENTIFICADOR
821 , TOKVIRGULA
821 TOKDEC TOKIDENTIFICADOR
821 [ TOKPR_ABERTO
821 1 TOK_NINT
821 ] TOKPR_FECHADO
821 ) TOKPR_FECHADO
821 ; TOKPVIRGULA
822 printf TOKIDENTIFICADOR
822 ( TOKPS_ABERTO
822 , TOKVIRGULA
822 linha TOKIDENTIFICADOR
822 , TOKVIRGULA
822 lexema TOKIDENTIFICADOR
822 , TOKVIRGULA
822 token TOKIDENTIFICADOR
822 ) TOKPR_FECHADO
822 ; TOKPVIRGULA
823 fprintf TOKIDENTIFICADOR
823 ( TOKPS_ABERTO
823 pont_arq TOKIDENTIFICADOR
823 , TOKVIRGULA
823 , TOKVIRGULA
823 linha TOKIDENTIFICADOR
823 , TOKVIRGULA
823 lexema TOKIDENTIFICADOR
823 , TOKVIRGULA
823 token TOKIDENTIFICADOR
823 ) TOKPR_FECHADO
823 ; TOKPVIRGULA
824 lexema TOKIDENTIFICADOR
824 [ TOKPR_ABERTO
824 0 TOK_NINT
824 ] TOKPR_FECHADO
824 = TOKMUL
824 '\0' TOKCARATER
824 ; TOKPVIRGULA
825 estado TOKIDENTIFICADOR
825 = TOKMUL
825 0 TOK_NINT
825 ; TOKPVIRGULA
826 } TOKCH_FECHADO
828 break PALRESERVADA
828 ; TOKPVIRGULA
829 case PALRESERVADA
829 21 TOK_NINT
829 : TOKATR_BIT
830 if PALRESERVADA
830 ( TOKPS_ABERTO
830 car TOKIDENTIFICADOR
830 == TOKATR_COMPOSTA
830 61 TOK_NINT
830 ) TOKPR_FECHADO
831 { TOKCH_ABERTO
832 char PALRESERVADA
832 carac TOKIDENTIFICADOR
832 = TOKMUL
832 ( TOKPS_ABERTO
832 char PALRESERVADA
832 ) TOKPR_FECHADO
832 car TOKIDENTIFICADOR
832 ; TOKPVIRGULA
833 strncat TOKIDENTIFICADOR
833 ( TOKPS_ABERTO
833 lexema TOKIDENTIFICADOR
833 , TOKVIRGULA
833 & TOKANDBIT
833 carac TOKIDENTIFICADOR
833 , TOKVIRGULA
833 1 TOK_NINT
833 ) TOKPR_FECHADO
833 ; TOKPVIRGULA
834 estado TOKIDENTIFICADOR
834 = TOKMUL
834 22 TOK_NINT
834 ; TOKPVIRGULA
835 } TOKCH_FECHADO
836 else PALRESERVADA
837 { TOKCH_ABERTO
838 volta_char TOKIDENTIFICADOR
838 ( TOKPS_ABERTO
838 farq TOKIDENTIFICADOR
838 ) TOKPR_FECHADO
838 ; TOKPVIRGULA
839 estado TOKIDENTIFICADOR
839 = TOKMUL
839 23 TOK_NINT
839 ; TOKPVIRGULA
840 } TOKCH_FECHADO
841 break PALRESERVADA
841 ; TOKPVIRGULA
842 case PALRESERVADA
842 22 TOK_NINT
842 : TOKATR_BIT
843 volta_char TOKIDENTIFICADOR
843 ( TOKPS_ABERTO
843 farq TOKIDENTIFICADOR
843 ) TOKPR_FECHADO
843 ; TOKPVIRGULA
844 strcpy TOKIDENTIFICADOR
844 ( TOKPS_ABERTO
844 token TOKIDENTIFICADOR
844 , TOKVIRGULA
844 TOKMULTCATR TOKIDENTIFICADOR
844 [ TOKPR_ABERTO
844 1 TOK_NINT
844 ] TOKPR_FECHADO
844 ) TOKPR_FECHADO
844 ; TOKPVIRGULA
845 printf TOKIDENTIFICADOR
845 ( TOKPS_ABERTO
845 , TOKVIRGULA
845 linha TOKIDENTIFICADOR
845 , TOKVIRGULA
845 lexema TOKIDENTIFICADOR
845 , TOKVIRGULA
845 token TOKIDENTIFICADOR
845 ) TOKPR_FECHADO
845 ; TOKPVIRGULA
846 fprintf TOKIDENTIFICADOR
846 ( TOKPS_ABERTO
846 pont_arq TOKIDENTIFICADOR
846 , TOKVIRGULA
846 , TOKVIRGULA
846 linha TOKIDENTIFICADOR
846 , TOKVIRGULA
846 lexema TOKIDENTIFICADOR
846 , TOKVIRGULA
846 token TOKIDENTIFICADOR
846 ) TOKPR_FECHADO
846 ; TOKPVIRGULA
847 lexema TOKIDENTIFICADOR
847 [ TOKPR_ABERTO
847 0 TOK_NINT
847 ] TOKPR_FECHADO
847 = TOKMUL
847 '\0' TOKCARATER
847 ; TOKPVIRGULA
848 estado TOKIDENTIFICADOR
848 = TOKMUL
848 0 TOK_NINT
848 ; TOKPVIRGULA
849 break PALRESERVADA
849 ; TOKPVIRGULA
850 case PALRESERVADA
850 23 TOK_NINT
850 : TOKATR_BIT
851 volta_char TOKIDENTIFICADOR
851 ( TOKPS_ABERTO
851 farq TOKIDENTIFICADOR
851 ) TOKPR_FECHADO
851 ; TOKPVIRGULA
852 strcpy TOKIDENTIFICADOR
852 ( TOKPS_ABERTO
852 token TOKIDENTIFICADOR
852 , TOKVIRGULA
852 TOKMUL TOKIDENTIFICADOR
852 [ TOKPR_ABERTO
852 1 TOK_NINT
852 ] TOKPR_FECHADO
852 ) TOKPR_FECHADO
852 ; TOKPVIRGULA
853 printf TOKIDENTIFICADOR
853 ( TOKPS_ABERTO
853 , TOKVIRGULA
853 linha TOKIDENTIFICADOR
853 , TOKVIRGULA
853 lexema TOKIDENTIFICADOR
853 , TOKVIRGULA
853 token TOKIDENTIFICADOR
853 ) TOKPR_FECHADO
853 ; TOKPVIRGULA
854 fprintf TOKIDENTIFICADOR
854 ( TOKPS_ABERTO
854 pont_arq TOKIDENTIFICADOR
854 , TOKVIRGULA
854 , TOKVIRGULA
854 linha TOKIDENTIFICADOR
854 , TOKVIRGULA
854 lexema TOKIDENTIFICADOR
854 , TOKVIRGULA
854 token TOKIDENTIFICADOR
854 ) TOKPR_FECHADO
854 ; TOKPVIRGULA
855 lexema TOKIDENTIFICADOR
855 [ TOKPR_ABERTO
855 0 TOK_NINT
855 ] TOKPR_FECHADO
855 = TOKMUL
855 '\0' TOKCARATER
855 ; TOKPVIRGULA
856 estado TOKIDENTIFICADOR
856 = TOKMUL
856 0 TOK_NINT
856 ; TOKPVIRGULA
857 break PALRESERVADA
857 ; TOKPVIRGULA
858 break PALRESERVADA
858 ; TOKPVIRGULA
859 case PALRESERVADA
859 24 TOK_NINT
859 : TOKATR_BIT
860 case PALRESERVADA
860 37 TOK_NINT
860 : TOKATR_BIT
861 case PALRESERVADA
861 38 TOK_NINT
861 : TOKATR_BIT
862 a TOKIDENTIFICADOR
862 : TOKATR_BIT
863 if PALRESERVADA
863 ( TOKPS_ABERTO
863 dot TOKIDENTIFICADOR
863 == TOKATR_COMPOSTA
863 1 TOK_NINT
863 ) TOKPR_FECHADO
864 { TOKCH_ABERTO
865 char PALRESERVADA
865 carac TOKIDENTIFICADOR
865 = TOKMUL
865 ( TOKPS_ABERTO
865 char PALRESERVADA
865 ) TOKPR_FECHADO
865 car TOKIDENTIFICADOR
865 ; TOKPVIRGULA
866 car TOKIDENTIFICADOR
866 = TOKMUL
866 ( TOKPS_ABERTO
866 int PALRESERVADA
866 ) TOKPR_FECHADO
866 lerChar TOKIDENTIFICADOR
866 ( TOKPS_ABERTO
866 farq TOKIDENTIFICADOR
866 ) TOKPR_FECHADO
866 ; TOKPVIRGULA
867 strncat TOKIDENTIFICADOR
867 ( TOKPS_ABERTO
867 lexema TOKIDENTIFICADOR
867 , TOKVIRGULA
867 & TOKANDBIT
867 carac TOKIDENTIFICADOR
867 , TOKVIRGULA
867 1 TOK_NINT
867 ) TOKPR_FECHADO
867 ; TOKPVIRGULA
868 } TOKCH_FECHADO
869 while PALRESERVADA
869 ( TOKPS_ABERTO
869 car TOKIDENTIFICADOR
869 >= TOKMAIOR
869 48 TOK_NINT
869 && TOKAND
869 car TOKIDENTIFICADOR
869 <= TOKMENORQUE
869 57 TOK_NINT
869 ) TOKPR_FECHADO
870 { TOKCH_ABERTO
872 char PALRESERVADA
872 carac TOKIDENTIFICADOR
872 = TOKMUL
872 ( TOKPS_ABERTO
872 char PALRESERVADA
872 ) TOKPR_FECHADO
872 car TOKIDENTIFICADOR
872 ; TOKPVIRGULA
873 strncat TOKIDENTIFICADOR
873 ( TOKPS_ABERTO
873 lexema TOKIDENTIFICADOR
873 , TOKVIRGULA
873 & TOKANDBIT
873 carac TOKIDENTIFICADOR
873 , TOKVIRGULA
873 1 TOK_NINT
873 ) TOKPR_FECHADO
873 ; TOKPVIRGULA
874 car TOKIDENTIFICADOR
874 = TOKMUL
874 ( TOKPS_ABERTO
874 int PALRESERVADA
874 ) TOKPR_FECHADO
874 lerChar TOKIDENTIFICADOR
874 ( TOKPS_ABERTO
874 farq TOKIDENTIFICADOR
874 ) TOKPR_FECHADO
874 ; TOKPVIRGULA
875 } TOKCH_FECHADO
876 if PALRESERVADA
876 ( TOKPS_ABERTO
876 car TOKIDENTIFICADOR
876 == TOKATR_COMPOSTA
876 46 TOK_NINT
876 ) TOKPR_FECHADO
877 { TOKCH_ABERTO
878 dot TOKIDENTIFICADOR
878 = TOKMUL
878 1 TOK_NINT
878 ; TOKPVIRGULA
879 goto PALRESERVADA
879 a TOKIDENTIFICADOR
879 ; TOKPVIRGULA
880 } TOKCH_FECHADO
881 else PALRESERVADA
882 { TOKCH_ABERTO
883 if PALRESERVADA
883 ( TOKPS_ABERTO
883 dot TOKIDENTIFICADOR
883 == TOKATR_COMPOSTA
883 1 TOK_NINT
883 ) TOKPR_FECHADO
884 { TOKCH_ABERTO
885 strcpy TOKIDENTIFICADOR
885 ( TOKPS_ABERTO
885 token TOKIDENTIFICADOR
885 , TOKVIRGULA
885 ) TOKPR_FECHADO
885 ; TOKPVIRGULA
886 dot TOKIDENTIFICADOR
886 = TOKMUL
886 0 TOK_NINT
886 ; TOKPVIRGULA
887 } TOKCH_FECHADO
888 else PALRESERVADA
888 if PALRESERVADA
888 ( TOKPS_ABERTO
888 dot TOKIDENTIFICADOR
888 == TOKATR_COMPOSTA
888 0 TOK_NINT
888 ) TOKPR_FECHADO
889 { TOKCH_ABERTO
890 strcpy TOKIDENTIFICADOR
890 ( TOKPS_ABERTO
890 token TOKIDENTIFICADOR
890 , TOKVIRGULA
890 ) TOKPR_FECHADO
890 ; TOKPVIRGULA
891 } TOKCH_FECHADO
893 printf TOKIDENTIFICADOR
893 ( TOKPS_ABERTO
893 , TOKVIRGULA
893 linha TOKIDENTIFICADOR
893 , TOKVIRGULA
893 lexema TOKIDENTIFICADOR
893 , TOKVIRGULA
893 token TOKIDENTIFICADOR
893 ) TOKPR_FECHADO
893 ; TOKPVIRGULA
894 fprintf TOKIDENTIFICADOR
894 ( TOKPS_ABERTO
894 pont_arq TOKIDENTIFICADOR
894 , TOKVIRGULA
894 , TOKVIRGULA
894 linha TOKIDENTIFICADOR
894 , TOKVIRGULA
894 lexema TOKIDENTIFICADOR
894 , TOKVIRGULA
894 token TOKIDENTIFICADOR
894 ) TOKPR_FECHADO
894 ; TOKPVIRGULA
895 lexema TOKIDENTIFICADOR
895 [ TOKPR_ABERTO
895 0 TOK_NINT
895 ] TOKPR_FECHADO
895 = TOKMUL
895 '\0' TOKCARATER
895 ; TOKPVIRGULA
896 estado TOKIDENTIFICADOR
896 = TOKMUL
896 0 TOK_NINT
896 ; TOKPVIRGULA
897 } TOKCH_FECHADO
898 volta_char TOKIDENTIFICADOR
898 ( TOKPS_ABERTO
898 farq TOKIDENTIFICADOR
898 ) TOKPR_FECHADO
898 ; TOKPVIRGULA
900 break PALRESERVADA
900 ; TOKPVIRGULA
901 case PALRESERVADA
901 14 TOK_NINT
901 : TOKATR_BIT
902 if PALRESERVADA
902 ( TOKPS_ABERTO
902 car TOKIDENTIFICADOR
902 == TOKATR_COMPOSTA
902 43 TOK_NINT
902 ) TOKPR_FECHADO
903 { TOKCH_ABERTO
904 char PALRESERVADA
904 carac TOKIDENTIFICADOR
904 = TOKMUL
904 ( TOKPS_ABERTO
904 char PALRESERVADA
904 ) TOKPR_FECHADO
904 car TOKIDENTIFICADOR
904 ; TOKPVIRGULA
905 strncat TOKIDENTIFICADOR
905 ( TOKPS_ABERTO
905 lexema TOKIDENTIFICADOR
905 , TOKVIRGULA
905 & TOKANDBIT
905 carac TOKIDENTIFICADOR
905 , TOKVIRGULA
905 1 TOK_NINT
905 ) TOKPR_FECHADO
905 ; TOKPVIRGULA
906 estado TOKIDENTIFICADOR
906 = TOKMUL
906 15 TOK_NINT
906 ; TOKPVIRGULA
907 } TOKCH_FECHADO
908 else PALRESERVADA
908 if PALRESERVADA
908 ( TOKPS_ABERTO
908 car TOKIDENTIFICADOR
908 == TOKATR_COMPOSTA
908 61 TOK_NINT
908 ) TOKPR_FECHADO
909 { TOKCH_ABERTO
910 char PALRESERVADA
910 carac TOKIDENTIFICADOR
910 = TOKMUL
910 ( TOKPS_ABERTO
910 char PALRESERVADA
910 ) TOKPR_FECHADO
910 car TOKIDENTIFICADOR
910 ; TOKPVIRGULA
911 strncat TOKIDENTIFICADOR
911 ( TOKPS_ABERTO
911 lexema TOKIDENTIFICADOR
911 , TOKVIRGULA
911 & TOKANDBIT
911 carac TOKIDENTIFICADOR
911 , TOKVIRGULA
911 1 TOK_NINT
911 ) TOKPR_FECHADO
911 ; TOKPVIRGULA
912 estado TOKIDENTIFICADOR
912 = TOKMUL
912 16 TOK_NINT
912 ; TOKPVIRGULA
913 } TOKCH_FECHADO
914 else PALRESERVADA
915 { TOKCH_ABERTO
917 volta_char TOKIDENTIFICADOR
917 ( TOKPS_ABERTO
917 farq TOKIDENTIFICADOR
917 ) TOKPR_FECHADO
917 ; TOKPVIRGULA
919 estado TOKIDENTIFICADOR
919 = TOKMUL
919 17 TOK_NINT
919 ; TOKPVIRGULA
920 } TOKCH_FECHADO
921 break PALRESERVADA
921 ; TOKPVIRGULA
922 case PALRESERVADA
922 15 TOK_NINT
922 : TOKATR_BIT
923 case PALRESERVADA
923 16 TOK_NINT
923 : TOKATR_BIT
924 case PALRESERVADA
924 17 TOK_NINT
924 : TOKATR_BIT
925 volta_char TOKIDENTIFICADOR
925 ( TOKPS_ABERTO
925 farq TOKIDENTIFICADOR
925 ) TOKPR_FECHADO
925 ; TOKPVIRGULA
926 if PALRESERVADA
926 ( TOKPS_ABERTO
926 strcmp TOKIDENTIFICADOR
926 ( TOKPS_ABERTO
926 lexema TOKIDENTIFICADOR
926 , TOKVIRGULA
926 TOKINC TOKIDENTIFICADOR
926 [ TOKPR_ABERTO
926 0 TOK_NINT
926 ] TOKPR_FECHADO
926 ) TOKPR_FECHADO
926 == TOKATR_COMPOSTA
926 0 TOK_NINT
926 ) TOKPR_FECHADO
927 { TOKCH_ABERTO
928 strcpy TOKIDENTIFICADOR
928 ( TOKPS_ABERTO
928 token TOKIDENTIFICADOR
928 , TOKVIRGULA
928 TOKINC TOKIDENTIFICADOR
928 [ TOKPR_ABERTO
928 1 TOK_NINT
928 ] TOKPR_FECHADO
928 ) TOKPR_FECHADO
928 ; TOKPVIRGULA
929 printf TOKIDENTIFICADOR
929 ( TOKPS_ABERTO
929 , TOKVIRGULA
929 linha TOKIDENTIFICADOR
929 , TOKVIRGULA
929 lexema TOKIDENTIFICADOR
929 , TOKVIRGULA
929 token TOKIDENTIFICADOR
929 ) TOKPR_FECHADO
929 ; TOKPVIRGULA
930 fprintf TOKIDENTIFICADOR
930 ( TOKPS_ABERTO
930 pont_arq TOKIDENTIFICADOR
930 , TOKVIRGULA
930 , TOKVIRGULA
930 linha TOKIDENTIFICADOR
930 , TOKVIRGULA
930 lexema TOKIDENTIFICADOR
930 , TOKVIRGULA
930 token TOKIDENTIFICADOR
930 ) TOKPR_FECHADO
930 ; TOKPVIRGULA
931 lexema TOKIDENTIFICADOR
931 [ TOKPR_ABERTO
931 0 TOK_NINT
931 ] TOKPR_FECHADO
931 = TOKMUL
931 '\0' TOKCARATER
931 ; TOKPVIRGULA
932 estado TOKIDENTIFICADOR
932 = TOKMUL
932 0 TOK_NINT
932 ; TOKPVIRGULA
933 } TOKCH_FECHADO
934 else PALRESERVADA
934 if PALRESERVADA
934 ( TOKPS_ABERTO
934 strcmp TOKIDENTIFICADOR
934 ( TOKPS_ABERTO
934 lexema TOKIDENTIFICADOR
934 , TOKVIRGULA
934 TOKSOATR TOKIDENTIFICADOR
934 [ TOKPR_ABERTO
934 0 TOK_NINT
934 ] TOKPR_FECHADO
934 ) TOKPR_FECHADO
934 == TOKATR_COMPOSTA
934 0 TOK_NINT
934 ) TOKPR_FECHADO
935 { TOKCH_ABERTO
936 strcpy TOKIDENTIFICADOR
936 ( TOKPS_ABERTO
936 token TOKIDENTIFICADOR
936 , TOKVIRGULA
936 TOKSOATR TOKIDENTIFICADOR
936 [ TOKPR_ABERTO
936 1 TOK_NINT
936 ] TOKPR_FECHADO
936 ) TOKPR_FECHADO
936 ; TOKPVIRGULA
937 printf TOKIDENTIFICADOR
937 ( TOKPS_ABERTO
937 , TOKVIRGULA
937 linha TOKIDENTIFICADOR
937 , TOKVIRGULA
937 lexema TOKIDENTIFICADOR
937 , TOKVIRGULA
937 token TOKIDENTIFICADOR
937 ) TOKPR_FECHADO
937 ; TOKPVIRGULA
938 fprintf TOKIDENTIFICADOR
938 ( TOKPS_ABERTO
938 pont_arq TOKIDENTIFICADOR
938 , TOKVIRGULA
938 , TOKVIRGULA
938 linha TOKIDENTIFICADOR
938 , TOKVIRGULA
938 lexema TOKIDENTIFICADOR
938 , TOKVIRGULA
938 token TOKIDENTIFICADOR
938 ) TOKPR_FECHADO
938 ; TOKPVIRGULA
939 lexema TOKIDENTIFICADOR
939 [ TOKPR_ABERTO
939 0 TOK_NINT
939 ] TOKPR_FECHADO
939 = TOKMUL
939 '\0' TOKCARATER
939 ; TOKPVIRGULA
940 estado TOKIDENTIFICADOR
940 = TOKMUL
940 0 TOK_NINT
940 ; TOKPVIRGULA
941 } TOKCH_FECHADO
942 else PALRESERVADA
942 if PALRESERVADA
942 ( TOKPS_ABERTO
942 strcmp TOKIDENTIFICADOR
942 ( TOKPS_ABERTO
942 lexema TOKIDENTIFICADOR
942 , TOKVIRGULA
942 TOKPLUS TOKIDENTIFICADOR
942 [ TOKPR_ABERTO
942 0 TOK_NINT
942 ] TOKPR_FECHADO
942 ) TOKPR_FECHADO
942 == TOKATR_COMPOSTA
942 0 TOK_NINT
942 ) TOKPR_FECHADO
943 { TOKCH_ABERTO
944 strcpy TOKIDENTIFICADOR
944 ( TOKPS_ABERTO
944 token TOKIDENTIFICADOR
944 , TOKVIRGULA
944 TOKPLUS TOKIDENTIFICADOR
944 [ TOKPR_ABERTO
944 1 TOK_NINT
944 ] TOKPR_FECHADO
944 ) TOKPR_FECHADO
944 ; TOKPVIRGULA
945 printf TOKIDENTIFICADOR
945 ( TOKPS_ABERTO
945 , TOKVIRGULA
945 linha TOKIDENTIFICADOR
945 , TOKVIRGULA
945 lexema TOKIDENTIFICADOR
945 , TOKVIRGULA
945 token TOKIDENTIFICADOR
945 ) TOKPR_FECHADO
945 ; TOKPVIRGULA
946 fprintf TOKIDENTIFICADOR
946 ( TOKPS_ABERTO
946 pont_arq TOKIDENTIFICADOR
946 , TOKVIRGULA
946 , TOKVIRGULA
946 linha TOKIDENTIFICADOR
946 , TOKVIRGULA
946 lexema TOKIDENTIFICADOR
946 , TOKVIRGULA
946 token TOKIDENTIFICADOR
946 ) TOKPR_FECHADO
946 ; TOKPVIRGULA
947 lexema TOKIDENTIFICADOR
947 [ TOKPR_ABERTO
947 0 TOK_NINT
947 ] TOKPR_FECHADO
947 = TOKMUL
947 '\0' TOKCARATER
947 ; TOKPVIRGULA
948 estado TOKIDENTIFICADOR
948 = TOKMUL
948 0 TOK_NINT
948 ; TOKPVIRGULA
949 } TOKCH_FECHADO
951 break PALRESERVADA
951 ; TOKPVIRGULA
952 case PALRESERVADA
952 49 TOK_NINT
952 : TOKATR_BIT
953 case PALRESERVADA
953 50 TOK_NINT
953 : TOKATR_BIT
954 { TOKCH_ABERTO
955 while PALRESERVADA
955 ( TOKPS_ABERTO
955 car TOKIDENTIFICADOR
955 != TOKDIFE
955 34 TOK_NINT
955 ) TOKPR_FECHADO
956 { TOKCH_ABERTO
957 char PALRESERVADA
957 carac TOKIDENTIFICADOR
957 = TOKMUL
957 ( TOKPS_ABERTO
957 char PALRESERVADA
957 ) TOKPR_FECHADO
957 car TOKIDENTIFICADOR
957 ; TOKPVIRGULA
958 strncat TOKIDENTIFICADOR
958 ( TOKPS_ABERTO
958 lexema TOKIDENTIFICADOR
958 , TOKVIRGULA
958 & TOKANDBIT
958 carac TOKIDENTIFICADOR
958 , TOKVIRGULA
958 1 TOK_NINT
958 ) TOKPR_FECHADO
958 ; TOKPVIRGULA
959 car TOKIDENTIFICADOR
959 = TOKMUL
959 ( TOKPS_ABERTO
959 int PALRESERVADA
959 ) TOKPR_FECHADO
959 lerChar TOKIDENTIFICADOR
959 ( TOKPS_ABERTO
959 farq TOKIDENTIFICADOR
959 ) TOKPR_FECHADO
959 ; TOKPVIRGULA
960 } TOKCH_FECHADO
961 char PALRESERVADA
961 carac TOKIDENTIFICADOR
961 = TOKMUL
961 ( TOKPS_ABERTO
961 char PALRESERVADA
961 ) TOKPR_FECHADO
961 car TOKIDENTIFICADOR
961 ; TOKPVIRGULA
962 strncat TOKIDENTIFICADOR
962 ( TOKPS_ABERTO
962 lexema TOKIDENTIFICADOR
962 , TOKVIRGULA
962 & TOKANDBIT
962 carac TOKIDENTIFICADOR
962 , TOKVIRGULA
962 1 TOK_NINT
962 ) TOKPR_FECHADO
962 ; TOKPVIRGULA
964 strcpy TOKIDENTIFICADOR
964 ( TOKPS_ABERTO
964 token TOKIDENTIFICADOR
964 , TOKVIRGULA
964 ) TOKPR_FECHADO
964 ; TOKPVIRGULA
965 printf TOKIDENTIFICADOR
965 ( TOKPS_ABERTO
965 , TOKVIRGULA
965 linha TOKIDENTIFICADOR
965 , TOKVIRGULA
965 lexema TOKIDENTIFICADOR
965 , TOKVIRGULA
965 token TOKIDENTIFICADOR
965 ) TOKPR_FECHADO
965 ; TOKPVIRGULA
966 lexema TOKIDENTIFICADOR
966 [ TOKPR_ABERTO
966 0 TOK_NINT
966 ] TOKPR_FECHADO
966 = TOKMUL
966 '\0' TOKCARATER
966 ; TOKPVIRGULA
967 estado TOKIDENTIFICADOR
967 = TOKMUL
967 0 TOK_NINT
967 ; TOKPVIRGULA
968 } TOKCH_FECHADO
969 break PALRESERVADA
969 ; TOKPVIRGULA
970 case PALRESERVADA
970 51 TOK_NINT
970 : TOKATR_BIT
971 if PALRESERVADA
971 ( TOKPS_ABERTO
971 car TOKIDENTIFICADOR
971 == TOKATR_COMPOSTA
971 38 TOK_NINT
971 ) TOKPR_FECHADO
972 { TOKCH_ABERTO
973 char PALRESERVADA
973 carac TOKIDENTIFICADOR
973 = TOKMUL
973 ( TOKPS_ABERTO
973 char PALRESERVADA
973 ) TOKPR_FECHADO
973 car TOKIDENTIFICADOR
973 ; TOKPVIRGULA
974 strncat TOKIDENTIFICADOR
974 ( TOKPS_ABERTO
974 lexema TOKIDENTIFICADOR
974 , TOKVIRGULA
974 & TOKANDBIT
974 carac TOKIDENTIFICADOR
974 , TOKVIRGULA
974 1 TOK_NINT
974 ) TOKPR_FECHADO
974 ; TOKPVIRGULA
975 estado TOKIDENTIFICADOR
975 = TOKMUL
975 53 TOK_NINT
975 ; TOKPVIRGULA
976 } TOKCH_FECHADO
977 else PALRESERVADA
978 { TOKCH_ABERTO
979 volta_char TOKIDENTIFICADOR
979 ( TOKPS_ABERTO
979 farq TOKIDENTIFICADOR
979 ) TOKPR_FECHADO
979 ; TOKPVIRGULA
980 estado TOKIDENTIFICADOR
980 = TOKMUL
980 52 TOK_NINT
980 ; TOKPVIRGULA
981 } TOKCH_FECHADO
982 break PALRESERVADA
982 ; TOKPVIRGULA
983 case PALRESERVADA
983 52 TOK_NINT
983 : TOKATR_BIT
984 volta_char TOKIDENTIFICADOR
984 ( TOKPS_ABERTO
984 farq TOKIDENTIFICADOR
984 ) TOKPR_FECHADO
984 ; TOKPVIRGULA
985 strcpy TOKIDENTIFICADOR
985 ( TOKPS_ABERTO
985 token TOKIDENTIFICADOR
985 , TOKVIRGULA
985 TOKANDBIT TOKIDENTIFICADOR
985 [ TOKPR_ABERTO
985 1 TOK_NINT
985 ] TOKPR_FECHADO
985 ) TOKPR_FECHADO
985 ; TOKPVIRGULA
986 printf TOKIDENTIFICADOR
986 ( TOKPS_ABERTO
986 , TOKVIRGULA
986 linha TOKIDENTIFICADOR
986 , TOKVIRGULA
986 lexema TOKIDENTIFICADOR
986 , TOKVIRGULA
986 token TOKIDENTIFICADOR
986 ) TOKPR_FECHADO
986 ; TOKPVIRGULA
987 fprintf TOKIDENTIFICADOR
987 ( TOKPS_ABERTO
987 pont_arq TOKIDENTIFICADOR
987 , TOKVIRGULA
987 , TOKVIRGULA
987 linha TOKIDENTIFICADOR
987 , TOKVIRGULA
987 lexema TOKIDENTIFICADOR
987 , TOKVIRGULA
987 token TOKIDENTIFICADOR
987 ) TOKPR_FECHADO
987 ; TOKPVIRGULA
988 lexema TOKIDENTIFICADOR
988 [ TOKPR_ABERTO
988 0 TOK_NINT
988 ] TOKPR_FECHADO
988 = TOKMUL
988 '\0' TOKCARATER
988 ; TOKPVIRGULA
989 estado TOKIDENTIFICADOR
989 = TOKMUL
989 0 TOK_NINT
989 ; TOKPVIRGULA
990 verifica TOKIDENTIFICADOR
990 = TOKMUL
990 1 TOK_NINT
990 ; TOKPVIRGULA
991 break PALRESERVADA
991 ; TOKPVIRGULA
993 case PALRESERVADA
993 53 TOK_NINT
993 : TOKATR_BIT
994 volta_char TOKIDENTIFICADOR
994 ( TOKPS_ABERTO
994 farq TOKIDENTIFICADOR
994 ) TOKPR_FECHADO
994 ; TOKPVIRGULA
995 strcpy TOKIDENTIFICADOR
995 ( TOKPS_ABERTO
995 token TOKIDENTIFICADOR
995 , TOKVIRGULA
995 TOKAND TOKIDENTIFICADOR
995 [ TOKPR_ABERTO
995 1 TOK_NINT
995 ] TOKPR_FECHADO
995 ) TOKPR_FECHADO
995 ; TOKPVIRGULA
996 printf TOKIDENTIFICADOR
996 ( TOKPS_ABERTO
996 , TOKVIRGULA
996 linha TOKIDENTIFICADOR
996 , TOKVIRGULA
996 lexema TOKIDENTIFICADOR
996 , TOKVIRGULA
996 token TOKIDENTIFICADOR
996 ) TOKPR_FECHADO
996 ; TOKPVIRGULA
997 fprintf TOKIDENTIFICADOR
997 ( TOKPS_ABERTO
997 pont_arq TOKIDENTIFICADOR
997 , TOKVIRGULA
997 , TOKVIRGULA
997 linha TOKIDENTIFICADOR
997 , TOKVIRGULA
997 lexema TOKIDENTIFICADOR
997 , TOKVIRGULA
997 token TOKIDENTIFICADOR
997 ) TOKPR_FECHADO
997 ; TOKPVIRGULA
998 lexema TOKIDENTIFICADOR
998 [ TOKPR_ABERTO
998 0 TOK_NINT
998 ] TOKPR_FECHADO
998 = TOKMUL
998 '\0' TOKCARATER
998 ; TOKPVIRGULA
999 estado TOKIDENTIFICADOR
999 = TOKMUL
999 0 TOK_NINT
999 ; TOKPVIRGULA
1000 verifica TOKIDENTIFICADOR
1000 = TOKMUL
1000 1 TOK_NINT
1000 ; TOKPVIRGULA
1001 break PALRESERVADA
1001 ; TOKPVIRGULA
1002 case PALRESERVADA
1002 54 TOK_NINT
1002 : TOKATR_BIT
1003 if PALRESERVADA
1003 ( TOKPS_ABERTO
1003 car TOKIDENTIFICADOR
1003 == TOKATR_COMPOSTA
1003 124 TOK_NINT
1003 ) TOKPR_FECHADO
1004 { TOKCH_ABERTO
1005 char PALRESERVADA
1005 carac TOKIDENTIFICADOR
1005 = TOKMUL
1005 ( TOKPS_ABERTO
1005 char PALRESERVADA
1005 ) TOKPR_FECHADO
1005 car TOKIDENTIFICADOR
1005 ; TOKPVIRGULA
1006 strncat TOKIDENTIFICADOR
1006 ( TOKPS_ABERTO
1006 lexema TOKIDENTIFICADOR
1006 , TOKVIRGULA
1006 & TOKANDBIT
1006 carac TOKIDENTIFICADOR
1006 , TOKVIRGULA
1006 1 TOK_NINT
1006 ) TOKPR_FECHADO
1006 ; TOKPVIRGULA
1007 estado TOKIDENTIFICADOR
1007 = TOKMUL
1007 55 TOK_NINT
1007 ; TOKPVIRGULA
1008 } TOKCH_FECHADO
1009 else PALRESERVADA
1010 { TOKCH_ABERTO
1011 volta_char TOKIDENTIFICADOR
1011 ( TOKPS_ABERTO
1011 farq TOKIDENTIFICADOR
1011 ) TOKPR_FECHADO
1011 ; TOKPVIRGULA
1012 estado TOKIDENTIFICADOR
1012 = TOKMUL
1012 56 TOK_NINT
1012 ; TOKPVIRGULA
1013 } TOKCH_FECHADO
1014 break PALRESERVADA
1014 ; TOKPVIRGULA
1015 case PALRESERVADA
1015 55 TOK_NINT
1015 : TOKATR_BIT
1016 volta_char TOKIDENTIFICADOR
1016 ( TOKPS_ABERTO
1016 farq TOKIDENTIFICADOR
1016 ) TOKPR_FECHADO
1016 ; TOKPVIRGULA
1017 strcpy TOKIDENTIFICADOR
1017 ( TOKPS_ABERTO
1017 token TOKIDENTIFICADOR
1017 , TOKVIRGULA
1017 TOKOR TOKIDENTIFICADOR
1017 [ TOKPR_ABERTO
1017 1 TOK_NINT
1017 ] TOKPR_FECHADO
1017 ) TOKPR_FECHADO
1017 ; TOKPVIRGULA
1018 printf TOKIDENTIFICADOR
1018 ( TOKPS_ABERTO
1018 , TOKVIRGULA
1018 linha TOKIDENTIFICADOR
1018 , TOKVIRGULA
1018 lexema TOKIDENTIFICADOR
1018 , TOKVIRGULA
1018 token TOKIDENTIFICADOR
1018 ) TOKPR_FECHADO
1018 ; TOKPVIRGULA
1019 fprintf TOKIDENTIFICADOR
1019 ( TOKPS_ABERTO
1019 pont_arq TOKIDENTIFICADOR
1019 , TOKVIRGULA
1019 , TOKVIRGULA
1019 linha TOKIDENTIFICADOR
1019 , TOKVIRGULA
1019 lexema TOKIDENTIFICADOR
1019 , TOKVIRGULA
1019 token TOKIDENTIFICADOR
1019 ) TOKPR_FECHADO
1019 ; TOKPVIRGULA
1020 lexema TOKIDENTIFICADOR
1020 [ TOKPR_ABERTO
1020 0 TOK_NINT
1020 ] TOKPR_FECHADO
1020 = TOKMUL
1020 '\0' TOKCARATER
1020 ; TOKPVIRGULA
1021 estado TOKIDENTIFICADOR
1021 = TOKMUL
1021 0 TOK_NINT
1021 ; TOKPVIRGULA
1022 verifica TOKIDENTIFICADOR
1022 = TOKMUL
1022 1 TOK_NINT
1022 ; TOKPVIRGULA
1023 break PALRESERVADA
1023 ; TOKPVIRGULA
1025 case PALRESERVADA
1025 56 TOK_NINT
1025 : TOKATR_BIT
1026 volta_char TOKIDENTIFICADOR
1026 ( TOKPS_ABERTO
1026 farq TOKIDENTIFICADOR
1026 ) TOKPR_FECHADO
1026 ; TOKPVIRGULA
1027 strcpy TOKIDENTIFICADOR
1027 ( TOKPS_ABERTO
1027 token TOKIDENTIFICADOR
1027 , TOKVIRGULA
1027 TOKORBIT TOKIDENTIFICADOR
1027 [ TOKPR_ABERTO
1027 1 TOK_NINT
1027 ] TOKPR_FECHADO
1027 ) TOKPR_FECHADO
1027 ; TOKPVIRGULA
1028 printf TOKIDENTIFICADOR
1028 ( TOKPS_ABERTO
1028 , TOKVIRGULA
1028 linha TOKIDENTIFICADOR
1028 , TOKVIRGULA
1028 lexema TOKIDENTIFICADOR
1028 , TOKVIRGULA
1028 token TOKIDENTIFICADOR
1028 ) TOKPR_FECHADO
1028 ; TOKPVIRGULA
1029 fprintf TOKIDENTIFICADOR
1029 ( TOKPS_ABERTO
1029 pont_arq TOKIDENTIFICADOR
1029 , TOKVIRGULA
1029 , TOKVIRGULA
1029 linha TOKIDENTIFICADOR
1029 , TOKVIRGULA
1029 lexema TOKIDENTIFICADOR
1029 , TOKVIRGULA
1029 token TOKIDENTIFICADOR
1029 ) TOKPR_FECHADO
1029 ; TOKPVIRGULA
1030 lexema TOKIDENTIFICADOR
1030 [ TOKPR_ABERTO
1030 0 TOK_NINT
1030 ] TOKPR_FECHADO
1030 = TOKMUL
1030 '\0' TOKCARATER
1030 ; TOKPVIRGULA
1031 estado TOKIDENTIFICADOR
1031 = TOKMUL
1031 0 TOK_NINT
1031 ; TOKPVIRGULA
1032 verifica TOKIDENTIFICADOR
1032 = TOKMUL
1032 1 TOK_NINT
1032 ; TOKPVIRGULA
1033 break PALRESERVADA
1033 ; TOKPVIRGULA
1035 case PALRESERVADA
1035 41 TOK_NINT
1035 : TOKATR_BIT
1036 if PALRESERVADA
1036 ( TOKPS_ABERTO
1036 car TOKIDENTIFICADOR
1036 == TOKATR_COMPOSTA
1036 47 TOK_NINT
1036 ) TOKPR_FECHADO
1037 { TOKCH_ABERTO
1038 char PALRESERVADA
1038 carac TOKIDENTIFICADOR
1038 = TOKMUL
1038 ( TOKPS_ABERTO
1038 char PALRESERVADA
1038 ) TOKPR_FECHADO
1038 car TOKIDENTIFICADOR
1038 ; TOKPVIRGULA
1039 strncat TOKIDENTIFICADOR
1039 ( TOKPS_ABERTO
1039 lexema TOKIDENTIFICADOR
1039 , TOKVIRGULA
1039 & TOKANDBIT
1039 carac TOKIDENTIFICADOR
1039 , TOKVIRGULA
1039 1 TOK_NINT
1039 ) TOKPR_FECHADO
1039 ; TOKPVIRGULA
1040 estado TOKIDENTIFICADOR
1040 = TOKMUL
1040 45 TOK_NINT
1040 ; TOKPVIRGULA
1041 } TOKCH_FECHADO
1042 else PALRESERVADA
1042 if PALRESERVADA
1042 ( TOKPS_ABERTO
1042 car TOKIDENTIFICADOR
1042 == TOKATR_COMPOSTA
1042 61 TOK_NINT
1042 ) TOKPR_FECHADO
1043 { TOKCH_ABERTO
1044 char PALRESERVADA
1044 carac TOKIDENTIFICADOR
1044 = TOKMUL
1044 ( TOKPS_ABERTO
1044 char PALRESERVADA
1044 ) TOKPR_FECHADO
1044 car TOKIDENTIFICADOR
1044 ; TOKPVIRGULA
1045 strncat TOKIDENTIFICADOR
1045 ( TOKPS_ABERTO
1045 lexema TOKIDENTIFICADOR
1045 , TOKVIRGULA
1045 & TOKANDBIT
1045 carac TOKIDENTIFICADOR
1045 , TOKVIRGULA
1045 1 TOK_NINT
1045 ) TOKPR_FECHADO
1045 ; TOKPVIRGULA
1046 estado TOKIDENTIFICADOR
1046 = TOKMUL
1046 47 TOK_NINT
1046 ; TOKPVIRGULA
1047 verifica TOKIDENTIFICADOR
1047 = TOKMUL
1047 1 TOK_NINT
1047 ; TOKPVIRGULA
1048 } TOKCH_FECHADO
1049 else PALRESERVADA
1049 if PALRESERVADA
1049 ( TOKPS_ABERTO
1049 car TOKIDENTIFICADOR
1049 == TOKATR_COMPOSTA
1049 42 TOK_NINT
1049 ) TOKPR_FECHADO
1050 { TOKCH_ABERTO
1051 char PALRESERVADA
1051 carac TOKIDENTIFICADOR
1051 = TOKMUL
1051 ( TOKPS_ABERTO
1051 char PALRESERVADA
1051 ) TOKPR_FECHADO
1051 car TOKIDENTIFICADOR
1051 ; TOKPVIRGULA
1052 strncat TOKIDENTIFICADOR
1052 ( TOKPS_ABERTO
1052 lexema TOKIDENTIFICADOR
1052 , TOKVIRGULA
1052 & TOKANDBIT
1052 carac TOKIDENTIFICADOR
1052 , TOKVIRGULA
1052 1 TOK_NINT
1052 ) TOKPR_FECHADO
1052 ; TOKPVIRGULA
1053 estado TOKIDENTIFICADOR
1053 = TOKMUL
1053 42 TOK_NINT
1053 ; TOKPVIRGULA
1054 verifica TOKIDENTIFICADOR
1054 = TOKMUL
1054 1 TOK_NINT
1054 ; TOKPVIRGULA
1055 } TOKCH_FECHADO
1056 else PALRESERVADA
1057 { TOKCH_ABERTO
1058 volta_char TOKIDENTIFICADOR
1058 ( TOKPS_ABERTO
1058 farq TOKIDENTIFICADOR
1058 ) TOKPR_FECHADO
1058 ; TOKPVIRGULA
1059 estado TOKIDENTIFICADOR
1059 = TOKMUL
1059 48 TOK_NINT
1059 ; TOKPVIRGULA
1060 verifica TOKIDENTIFICADOR
1060 = TOKMUL
1060 1 TOK_NINT
1060 ; TOKPVIRGULA
1061 } TOKCH_FECHADO
1062 break PALRESERVADA
1062 ; TOKPVIRGULA
1063 case PALRESERVADA
1063 42 TOK_NINT
1063 : TOKATR_BIT
1064 { TOKCH_ABERTO
1065 while PALRESERVADA
1065 ( TOKPS_ABERTO
1065 car TOKIDENTIFICADOR
1065 != TOKDIFE
1065 42 TOK_NINT
1065 ) TOKPR_FECHADO
1066 { TOKCH_ABERTO
1067 char PALRESERVADA
1067 carac TOKIDENTIFICADOR
1067 = TOKMUL
1067 ( TOKPS_ABERTO
1067 char PALRESERVADA
1067 ) TOKPR_FECHADO
1067 car TOKIDENTIFICADOR
1067 ; TOKPVIRGULA
1068 strncat TOKIDENTIFICADOR
1068 ( TOKPS_ABERTO
1068 lexema TOKIDENTIFICADOR
1068 , TOKVIRGULA
1068 & TOKANDBIT
1068 carac TOKIDENTIFICADOR
1068 , TOKVIRGULA
1068 1 TOK_NINT
1068 ) TOKPR_FECHADO
1068 ; TOKPVIRGULA
1069 car TOKIDENTIFICADOR
1069 = TOKMUL
1069 ( TOKPS_ABERTO
1069 int PALRESERVADA
1069 ) TOKPR_FECHADO
1069 lerChar TOKIDENTIFICADOR
1069 ( TOKPS_ABERTO
1069 farq TOKIDENTIFICADOR
1069 ) TOKPR_FECHADO
1069 ; TOKPVIRGULA
1070 } TOKCH_FECHADO
1071 char PALRESERVADA
1071 carac TOKIDENTIFICADOR
1071 = TOKMUL
1071 ( TOKPS_ABERTO
1071 char PALRESERVADA
1071 ) TOKPR_FECHADO
1071 car TOKIDENTIFICADOR
1071 ; TOKPVIRGULA
1072 strncat TOKIDENTIFICADOR
1072 ( TOKPS_ABERTO
1072 lexema TOKIDENTIFICADOR
1072 , TOKVIRGULA
1072 & TOKANDBIT
1072 carac TOKIDENTIFICADOR
1072 , TOKVIRGULA
1072 1 TOK_NINT
1072 ) TOKPR_FECHADO
1072 ; TOKPVIRGULA
1073 estado TOKIDENTIFICADOR
1073 = TOKMUL
1073 43 TOK_NINT
1073 ; TOKPVIRGULA
1074 } TOKCH_FECHADO
1075 break PALRESERVADA
1075 ; TOKPVIRGULA
1076 case PALRESERVADA
1076 43 TOK_NINT
1076 : TOKATR_BIT
1077 if PALRESERVADA
1077 ( TOKPS_ABERTO
1077 car TOKIDENTIFICADOR
1077 != TOKDIFE
1077 47 TOK_NINT
1077 ) TOKPR_FECHADO
1078 { TOKCH_ABERTO
1079 char PALRESERVADA
1079 carac TOKIDENTIFICADOR
1079 = TOKMUL
1079 ( TOKPS_ABERTO
1079 char PALRESERVADA
1079 ) TOKPR_FECHADO
1079 car TOKIDENTIFICADOR
1079 ; TOKPVIRGULA
1080 strncat TOKIDENTIFICADOR
1080 ( TOKPS_ABERTO
1080 lexema TOKIDENTIFICADOR
1080 , TOKVIRGULA
1080 & TOKANDBIT
1080 carac TOKIDENTIFICADOR
1080 , TOKVIRGULA
1080 1 TOK_NINT
1080 ) TOKPR_FECHADO
1080 ; TOKPVIRGULA
1081 estado TOKIDENTIFICADOR
1081 = TOKMUL
1081 42 TOK_NINT
1081 ; TOKPVIRGULA
1082 } TOKCH_FECHADO
1083 else PALRESERVADA
1084 { TOKCH_ABERTO
1085 char PALRESERVADA
1085 carac TOKIDENTIFICADOR
1085 = TOKMUL
1085 ( TOKPS_ABERTO
1085 char PALRESERVADA
1085 ) TOKPR_FECHADO
1085 car TOKIDENTIFICADOR
1085 ; TOKPVIRGULA
1086 strncat TOKIDENTIFICADOR
1086 ( TOKPS_ABERTO
1086 lexema TOKIDENTIFICADOR
1086 , TOKVIRGULA
1086 & TOKANDBIT
1086 carac TOKIDENTIFICADOR
1086 , TOKVIRGULA
1086 1 TOK_NINT
1086 ) TOKPR_FECHADO
1086 ; TOKPVIRGULA
1087 strcpy TOKIDENTIFICADOR
1087 ( TOKPS_ABERTO
1087 token TOKIDENTIFICADOR
1087 , TOKVIRGULA
1087 ) TOKPR_FECHADO
1087 ; TOKPVIRGULA
1088 printf TOKIDENTIFICADOR
1088 ( TOKPS_ABERTO
1088 , TOKVIRGULA
1088 linha TOKIDENTIFICADOR
1088 , TOKVIRGULA
1088 lexema TOKIDENTIFICADOR
1088 , TOKVIRGULA
1088 token TOKIDENTIFICADOR
1088 ) TOKPR_FECHADO
1088 ; TOKPVIRGULA
1089 lexema TOKIDENTIFICADOR
1089 [ TOKPR_ABERTO
1089 0 TOK_NINT
1089 ] TOKPR_FECHADO
1089 = TOKMUL
1089 '\0' TOKCARATER
1089 ; TOKPVIRGULA
1090 estado TOKIDENTIFICADOR
1090 = TOKMUL
1090 0 TOK_NINT
1090 ; TOKPVIRGULA
1091 } TOKCH_FECHADO
1092 break PALRESERVADA
1092 ; TOKPVIRGULA
1093 case PALRESERVADA
1093 45 TOK_NINT
1093 : TOKATR_BIT
1095 while PALRESERVADA
1095 ( TOKPS_ABERTO
1095 car TOKIDENTIFICADOR
1095 != TOKDIFE
1095 10 TOK_NINT
1095 ) TOKPR_FECHADO
1096 { TOKCH_ABERTO
1097 char PALRESERVADA
1097 carac TOKIDENTIFICADOR
1097 = TOKMUL
1097 ( TOKPS_ABERTO
1097 char PALRESERVADA
1097 ) TOKPR_FECHADO
1097 car TOKIDENTIFICADOR
1097 ; TOKPVIRGULA
1098 strncat TOKIDENTIFICADOR
1098 ( TOKPS_ABERTO
1098 lexema TOKIDENTIFICADOR
1098 , TOKVIRGULA
1098 & TOKANDBIT
1098 carac TOKIDENTIFICADOR
1098 , TOKVIRGULA
1098 1 TOK_NINT
1098 ) TOKPR_FECHADO
1098 ; TOKPVIRGULA
1099 car TOKIDENTIFICADOR
1099 = TOKMUL
1099 ( TOKPS_ABERTO
1099 int PALRESERVADA
1099 ) TOKPR_FECHADO
1099 lerChar TOKIDENTIFICADOR
1099 ( TOKPS_ABERTO
1099 farq TOKIDENTIFICADOR
1099 ) TOKPR_FECHADO
1099 ; TOKPVIRGULA
1100 } TOKCH_FECHADO
1101 strcpy TOKIDENTIFICADOR
1101 ( TOKPS_ABERTO
1101 token TOKIDENTIFICADOR
1101 , TOKVIRGULA
1101 ) TOKPR_FECHADO
1101 ; TOKPVIRGULA
1102 printf TOKIDENTIFICADOR
1102 ( TOKPS_ABERTO
1102 , TOKVIRGULA
1102 linha TOKIDENTIFICADOR
1102 , TOKVIRGULA
1102 lexema TOKIDENTIFICADOR
1102 , TOKVIRGULA
1102 token TOKIDENTIFICADOR
1102 ) TOKPR_FECHADO
1102 ; TOKPVIRGULA
1103 lexema TOKIDENTIFICADOR
1103 [ TOKPR_ABERTO
1103 0 TOK_NINT
1103 ] TOKPR_FECHADO
1103 = TOKMUL
1103 '\0' TOKCARATER
1103 ; TOKPVIRGULA
1104 verifica TOKIDENTIFICADOR
1104 = TOKMUL
1104 1 TOK_NINT
1104 ; TOKPVIRGULA
1105 estado TOKIDENTIFICADOR
1105 = TOKMUL
1105 0 TOK_NINT
1105 ; TOKPVIRGULA
1106 break PALRESERVADA
1106 ; TOKPVIRGULA
1107 case PALRESERVADA
1107 47 TOK_NINT
1107 : TOKATR_BIT
1108 { TOKCH_ABERTO
1109 volta_char TOKIDENTIFICADOR
1109 ( TOKPS_ABERTO
1109 farq TOKIDENTIFICADOR
1109 ) TOKPR_FECHADO
1109 ; TOKPVIRGULA
1110 strcpy TOKIDENTIFICADOR
1110 ( TOKPS_ABERTO
1110 token TOKIDENTIFICADOR
1110 , TOKVIRGULA
1110 TOKDIVCATR TOKIDENTIFICADOR
1110 [ TOKPR_ABERTO
1110 1 TOK_NINT
1110 ] TOKPR_FECHADO
1110 ) TOKPR_FECHADO
1110 ; TOKPVIRGULA
1111 printf TOKIDENTIFICADOR
1111 ( TOKPS_ABERTO
1111 , TOKVIRGULA
1111 linha TOKIDENTIFICADOR
1111 , TOKVIRGULA
1111 lexema TOKIDENTIFICADOR
1111 , TOKVIRGULA
1111 token TOKIDENTIFICADOR
1111 ) TOKPR_FECHADO
1111 ; TOKPVIRGULA
1112 fprintf TOKIDENTIFICADOR
1112 ( TOKPS_ABERTO
1112 pont_arq TOKIDENTIFICADOR
1112 , TOKVIRGULA
1112 , TOKVIRGULA
1112 linha TOKIDENTIFICADOR
1112 , TOKVIRGULA
1112 lexema TOKIDENTIFICADOR
1112 , TOKVIRGULA
1112 token TOKIDENTIFICADOR
1112 ) TOKPR_FECHADO
1112 ; TOKPVIRGULA
1113 lexema TOKIDENTIFICADOR
1113 [ TOKPR_ABERTO
1113 0 TOK_NINT
1113 ] TOKPR_FECHADO
1113 = TOKMUL
1113 '\0' TOKCARATER
1113 ; TOKPVIRGULA
1114 estado TOKIDENTIFICADOR
1114 = TOKMUL
1114 0 TOK_NINT
1114 ; TOKPVIRGULA
1115 break PALRESERVADA
1115 ; TOKPVIRGULA
1116 } TOKCH_FECHADO
1117 case PALRESERVADA
1117 48 TOK_NINT
1117 : TOKATR_BIT
1118 volta_char TOKIDENTIFICADOR
1118 ( TOKPS_ABERTO
1118 farq TOKIDENTIFICADOR
1118 ) TOKPR_FECHADO
1118 ; TOKPVIRGULA
1119 strcpy TOKIDENTIFICADOR
1119 ( TOKPS_ABERTO
1119 token TOKIDENTIFICADOR
1119 , TOKVIRGULA
1119 TOKDIV TOKIDENTIFICADOR
1119 [ TOKPR_ABERTO
1119 1 TOK_NINT
1119 ] TOKPR_FECHADO
1119 ) TOKPR_FECHADO
1119 ; TOKPVIRGULA
1120 printf TOKIDENTIFICADOR
1120 ( TOKPS_ABERTO
1120 , TOKVIRGULA
1120 linha TOKIDENTIFICADOR
1120 , TOKVIRGULA
1120 lexema TOKIDENTIFICADOR
1120 , TOKVIRGULA
1120 token TOKIDENTIFICADOR
1120 ) TOKPR_FECHADO
1120 ; TOKPVIRGULA
1121 fprintf TOKIDENTIFICADOR
1121 ( TOKPS_ABERTO
1121 pont_arq TOKIDENTIFICADOR
1121 , TOKVIRGULA
1121 , TOKVIRGULA
1121 linha TOKIDENTIFICADOR
1121 , TOKVIRGULA
1121 lexema TOKIDENTIFICADOR
1121 , TOKVIRGULA
1121 token TOKIDENTIFICADOR
1121 ) TOKPR_FECHADO
1121 ; TOKPVIRGULA
1122 lexema TOKIDENTIFICADOR
1122 [ TOKPR_ABERTO
1122 0 TOK_NINT
1122 ] TOKPR_FECHADO
1122 = TOKMUL
1122 '\0' TOKCARATER
1122 ; TOKPVIRGULA
1123 estado TOKIDENTIFICADOR
1123 = TOKMUL
1123 0 TOK_NINT
1123 ; TOKPVIRGULA
1124 break PALRESERVADA
1124 ; TOKPVIRGULA
1125 case PALRESERVADA
1125 57 TOK_NINT
1125 : TOKATR_BIT
1126 if PALRESERVADA
1126 ( TOKPS_ABERTO
1126 car TOKIDENTIFICADOR
1126 == TOKATR_COMPOSTA
1126 92 TOK_NINT
1126 ) TOKPR_FECHADO
1127 { TOKCH_ABERTO
1128 char PALRESERVADA
1128 carac TOKIDENTIFICADOR
1128 = TOKMUL
1128 ( TOKPS_ABERTO
1128 char PALRESERVADA
1128 ) TOKPR_FECHADO
1128 car TOKIDENTIFICADOR
1128 ; TOKPVIRGULA
1129 strncat TOKIDENTIFICADOR
1129 ( TOKPS_ABERTO
1129 lexema TOKIDENTIFICADOR
1129 , TOKVIRGULA
1129 & TOKANDBIT
1129 carac TOKIDENTIFICADOR
1129 , TOKVIRGULA
1129 1 TOK_NINT
1129 ) TOKPR_FECHADO
1129 ; TOKPVIRGULA
1131 estado TOKIDENTIFICADOR
1131 = TOKMUL
1131 69 TOK_NINT
1131 ; TOKPVIRGULA
1132 } TOKCH_FECHADO
1133 else PALRESERVADA
1133 if PALRESERVADA
1133 ( TOKPS_ABERTO
1133 car TOKIDENTIFICADOR
1133 != TOKDIFE
1133 39 TOK_NINT
1133 ) TOKPR_FECHADO
1134 { TOKCH_ABERTO
1135 char PALRESERVADA
1135 carac TOKIDENTIFICADOR
1135 = TOKMUL
1135 ( TOKPS_ABERTO
1135 char PALRESERVADA
1135 ) TOKPR_FECHADO
1135 car TOKIDENTIFICADOR
1135 ; TOKPVIRGULA
1136 strncat TOKIDENTIFICADOR
1136 ( TOKPS_ABERTO
1136 lexema TOKIDENTIFICADOR
1136 , TOKVIRGULA
1136 & TOKANDBIT
1136 carac TOKIDENTIFICADOR
1136 , TOKVIRGULA
1136 1 TOK_NINT
1136 ) TOKPR_FECHADO
1136 ; TOKPVIRGULA
1138 estado TOKIDENTIFICADOR
1138 = TOKMUL
1138 58 TOK_NINT
1138 ; TOKPVIRGULA
1139 } TOKCH_FECHADO
1141 break PALRESERVADA
1141 ; TOKPVIRGULA
1143 case PALRESERVADA
1143 58 TOK_NINT
1143 : TOKATR_BIT
1144 case PALRESERVADA
1144 69 TOK_NINT
1144 : TOKATR_BIT
1145 if PALRESERVADA
1145 ( TOKPS_ABERTO
1145 car TOKIDENTIFICADOR
1145 == TOKATR_COMPOSTA
1145 48 TOK_NINT
1145 ) TOKPR_FECHADO
1146 { TOKCH_ABERTO
1147 char PALRESERVADA
1147 carac TOKIDENTIFICADOR
1147 = TOKMUL
1147 ( TOKPS_ABERTO
1147 char PALRESERVADA
1147 ) TOKPR_FECHADO
1147 car TOKIDENTIFICADOR
1147 ; TOKPVIRGULA
1148 strncat TOKIDENTIFICADOR
1148 ( TOKPS_ABERTO
1148 lexema TOKIDENTIFICADOR
1148 , TOKVIRGULA
1148 & TOKANDBIT
1148 carac TOKIDENTIFICADOR
1148 , TOKVIRGULA
1148 1 TOK_NINT
1148 ) TOKPR_FECHADO
1148 ; TOKPVIRGULA
1150 estado TOKIDENTIFICADOR
1150 = TOKMUL
1150 70 TOK_NINT
1150 ; TOKPVIRGULA
1151 } TOKCH_FECHADO
1152 else PALRESERVADA
1152 if PALRESERVADA
1152 ( TOKPS_ABERTO
1152 car TOKIDENTIFICADOR
1152 == TOKATR_COMPOSTA
1152 39 TOK_NINT
1152 ) TOKPR_FECHADO
1153 { TOKCH_ABERTO
1154 char PALRESERVADA
1154 carac TOKIDENTIFICADOR
1154 = TOKMUL
1154 ( TOKPS_ABERTO
1154 char PALRESERVADA
1154 ) TOKPR_FECHADO
1154 car TOKIDENTIFICADOR
1154 ; TOKPVIRGULA
1155 strncat TOKIDENTIFICADOR
1155 ( TOKPS_ABERTO
1155 lexema TOKIDENTIFICADOR
1155 , TOKVIRGULA
1155 & TOKANDBIT
1155 carac TOKIDENTIFICADOR
1155 , TOKVIRGULA
1155 1 TOK_NINT
1155 ) TOKPR_FECHADO
1155 ; TOKPVIRGULA
1156 strcpy TOKIDENTIFICADOR
1156 ( TOKPS_ABERTO
1156 token TOKIDENTIFICADOR
1156 , TOKVIRGULA
1156 ) TOKPR_FECHADO
1156 ; TOKPVIRGULA
1157 printf TOKIDENTIFICADOR
1157 ( TOKPS_ABERTO
1157 , TOKVIRGULA
1157 linha TOKIDENTIFICADOR
1157 , TOKVIRGULA
1157 lexema TOKIDENTIFICADOR
1157 , TOKVIRGULA
1157 token TOKIDENTIFICADOR
1157 ) TOKPR_FECHADO
1157 ; TOKPVIRGULA
1158 fprintf TOKIDENTIFICADOR
1158 ( TOKPS_ABERTO
1158 pont_arq TOKIDENTIFICADOR
1158 , TOKVIRGULA
1158 , TOKVIRGULA
1158 linha TOKIDENTIFICADOR
1158 , TOKVIRGULA
1158 lexema TOKIDENTIFICADOR
1158 , TOKVIRGULA
1158 token TOKIDENTIFICADOR
1158 ) TOKPR_FECHADO
1158 ; TOKPVIRGULA
1159 estado TOKIDENTIFICADOR
1159 = TOKMUL
1159 0 TOK_NINT
1159 ; TOKPVIRGULA
1160 lexema TOKIDENTIFICADOR
1160 [ TOKPR_ABERTO
1160 0 TOK_NINT
1160 ] TOKPR_FECHADO
1160 = TOKMUL
1160 '\0' TOKCARATER
1160 ; TOKPVIRGULA
1161 verifica TOKIDENTIFICADOR
1161 = TOKMUL
1161 1 TOK_NINT
1161 ; TOKPVIRGULA
1162 } TOKCH_FECHADO
1163 else PALRESERVADA
1164 { TOKCH_ABERTO
1166 char PALRESERVADA
1166 carac TOKIDENTIFICADOR
1166 = TOKMUL
1166 ( TOKPS_ABERTO
1166 char PALRESERVADA
1166 ) TOKPR_FECHADO
1166 car TOKIDENTIFICADOR
1166 ; TOKPVIRGULA
1167 strncat TOKIDENTIFICADOR
1167 ( TOKPS_ABERTO
1167 lexema TOKIDENTIFICADOR
1167 , TOKVIRGULA
1167 & TOKANDBIT
1167 carac TOKIDENTIFICADOR
1167 , TOKVIRGULA
1167 1 TOK_NINT
1167 ) TOKPR_FECHADO
1167 ; TOKPVIRGULA
1168 strcpy TOKIDENTIFICADOR
1168 ( TOKPS_ABERTO
1168 token TOKIDENTIFICADOR
1168 , TOKVIRGULA
1168 ) TOKPR_FECHADO
1168 ; TOKPVIRGULA
1169 printf TOKIDENTIFICADOR
1169 ( TOKPS_ABERTO
1169 , TOKVIRGULA
1169 linha TOKIDENTIFICADOR
1169 , TOKVIRGULA
1169 lexema TOKIDENTIFICADOR
1169 , TOKVIRGULA
1169 token TOKIDENTIFICADOR
1169 ) TOKPR_FECHADO
1169 ; TOKPVIRGULA
1170 fprintf TOKIDENTIFICADOR
1170 ( TOKPS_ABERTO
1170 pont_arq TOKIDENTIFICADOR
1170 , TOKVIRGULA
1170 , TOKVIRGULA
1170 linha TOKIDENTIFICADOR
1170 , TOKVIRGULA
1170 lexema TOKIDENTIFICADOR
1170 , TOKVIRGULA
1170 token TOKIDENTIFICADOR
1170 ) TOKPR_FECHADO
1170 ; TOKPVIRGULA
1171 estado TOKIDENTIFICADOR
1171 = TOKMUL
1171 0 TOK_NINT
1171 ; TOKPVIRGULA
1172 verifica TOKIDENTIFICADOR
1172 = TOKMUL
1172 1 TOK_NINT
1172 ; TOKPVIRGULA
1173 lexema TOKIDENTIFICADOR
1173 [ TOKPR_ABERTO
1173 0 TOK_NINT
1173 ] TOKPR_FECHADO
1173 = TOKMUL
1173 '\0' TOKCARATER
1173 ; TOKPVIRGULA
1174 } TOKCH_FECHADO
1175 break PALRESERVADA
1175 ; TOKPVIRGULA
1176 case PALRESERVADA
1176 70 TOK_NINT
1176 : TOKATR_BIT
1176 { TOKCH_ABERTO
1178 char PALRESERVADA
1178 carac TOKIDENTIFICADOR
1178 = TOKMUL
1178 ( TOKPS_ABERTO
1178 char PALRESERVADA
1178 ) TOKPR_FECHADO
1178 car TOKIDENTIFICADOR
1178 ; TOKPVIRGULA
1179 strncat TOKIDENTIFICADOR
1179 ( TOKPS_ABERTO
1179 lexema TOKIDENTIFICADOR
1179 , TOKVIRGULA
1179 & TOKANDBIT
1179 carac TOKIDENTIFICADOR
1179 , TOKVIRGULA
1179 1 TOK_NINT
1179 ) TOKPR_FECHADO
1179 ; TOKPVIRGULA
1180 strcpy TOKIDENTIFICADOR
1180 ( TOKPS_ABERTO
1180 token TOKIDENTIFICADOR
1180 , TOKVIRGULA
1180 ) TOKPR_FECHADO
1180 ; TOKPVIRGULA
1181 printf TOKIDENTIFICADOR
1181 ( TOKPS_ABERTO
1181 , TOKVIRGULA
1181 linha TOKIDENTIFICADOR
1181 , TOKVIRGULA
1181 lexema TOKIDENTIFICADOR
1181 , TOKVIRGULA
1181 token TOKIDENTIFICADOR
1181 ) TOKPR_FECHADO
1181 ; TOKPVIRGULA
1182 fprintf TOKIDENTIFICADOR
1182 ( TOKPS_ABERTO
1182 pont_arq TOKIDENTIFICADOR
1182 , TOKVIRGULA
1182 , TOKVIRGULA
1182 linha TOKIDENTIFICADOR
1182 , TOKVIRGULA
1182 lexema TOKIDENTIFICADOR
1182 , TOKVIRGULA
1182 token TOKIDENTIFICADOR
1182 ) TOKPR_FECHADO
1182 ; TOKPVIRGULA
1183 estado TOKIDENTIFICADOR
1183 = TOKMUL
1183 0 TOK_NINT
1183 ; TOKPVIRGULA
1184 lexema TOKIDENTIFICADOR
1184 [ TOKPR_ABERTO
1184 0 TOK_NINT
1184 ] TOKPR_FECHADO
1184 = TOKMUL
1184 '\0' TOKCARATER
1184 ; TOKPVIRGULA
1185 verifica TOKIDENTIFICADOR
1185 = TOKMUL
1185 1 TOK_NINT
1185 ; TOKPVIRGULA
1186 break PALRESERVADA
1186 ; TOKPVIRGULA
1187 } TOKCH_FECHADO
1188 case PALRESERVADA
1188 28 TOK_NINT
1188 : TOKATR_BIT
1189 case PALRESERVADA
1189 29 TOK_NINT
1189 : TOKATR_BIT
1190 case PALRESERVADA
1190 30 TOK_NINT
1190 : TOKATR_BIT
1191 case PALRESERVADA
1191 31 TOK_NINT
1191 : TOKATR_BIT
1192 case PALRESERVADA
1192 32 TOK_NINT
1192 : TOKATR_BIT
1193 case PALRESERVADA
1193 60 TOK_NINT
1193 : TOKATR_BIT
1194 case PALRESERVADA
1194 61 TOK_NINT
1194 : TOKATR_BIT
1195 case PALRESERVADA
1195 62 TOK_NINT
1195 : TOKATR_BIT
1196 case PALRESERVADA
1196 63 TOK_NINT
1196 : TOKATR_BIT
1197 case PALRESERVADA
1197 64 TOK_NINT
1197 : TOKATR_BIT
1198 case PALRESERVADA
1198 65 TOK_NINT
1198 : TOKATR_BIT
1199 case PALRESERVADA
1199 66 TOK_NINT
1199 : TOKATR_BIT
1200 { TOKCH_ABERTO
1201 volta_char TOKIDENTIFICADOR
1201 ( TOKPS_ABERTO
1201 farq TOKIDENTIFICADOR
1201 ) TOKPR_FECHADO
1201 ; TOKPVIRGULA
1202 if PALRESERVADA
1202 ( TOKPS_ABERTO
1202 strcmp TOKIDENTIFICADOR
1202 ( TOKPS_ABERTO
1202 lexema TOKIDENTIFICADOR
1202 , TOKVIRGULA
1202 TOKPS_ABERTO TOKIDENTIFICADOR
1202 [ TOKPR_ABERTO
1202 0 TOK_NINT
1202 ] TOKPR_FECHADO
1202 ) TOKPR_FECHADO
1202 == TOKATR_COMPOSTA
1202 0 TOK_NINT
1202 ) TOKPR_FECHADO
1203 { TOKCH_ABERTO
1204 strcpy TOKIDENTIFICADOR
1204 ( TOKPS_ABERTO
1204 token TOKIDENTIFICADOR
1204 , TOKVIRGULA
1204 TOKPS_ABERTO TOKIDENTIFICADOR
1204 [ TOKPR_ABERTO
1204 1 TOK_NINT
1204 ] TOKPR_FECHADO
1204 ) TOKPR_FECHADO
1204 ; TOKPVIRGULA
1205 printf TOKIDENTIFICADOR
1205 ( TOKPS_ABERTO
1205 , TOKVIRGULA
1205 linha TOKIDENTIFICADOR
1205 , TOKVIRGULA
1205 lexema TOKIDENTIFICADOR
1205 , TOKVIRGULA
1205 token TOKIDENTIFICADOR
1205 ) TOKPR_FECHADO
1205 ; TOKPVIRGULA
1206 fprintf TOKIDENTIFICADOR
1206 ( TOKPS_ABERTO
1206 pont_arq TOKIDENTIFICADOR
1206 , TOKVIRGULA
1206 , TOKVIRGULA
1206 linha TOKIDENTIFICADOR
1206 , TOKVIRGULA
1206 lexema TOKIDENTIFICADOR
1206 , TOKVIRGULA
1206 token TOKIDENTIFICADOR
1206 ) TOKPR_FECHADO
1206 ; TOKPVIRGULA
1207 } TOKCH_FECHADO
1208 else PALRESERVADA
1208 if PALRESERVADA
1208 ( TOKPS_ABERTO
1208 strcmp TOKIDENTIFICADOR
1208 ( TOKPS_ABERTO
1208 lexema TOKIDENTIFICADOR
1208 , TOKVIRGULA
1208 TOKPS_FECHADO TOKIDENTIFICADOR
1208 [ TOKPR_ABERTO
1208 0 TOK_NINT
1208 ] TOKPR_FECHADO
1208 ) TOKPR_FECHADO
1208 == TOKATR_COMPOSTA
1208 0 TOK_NINT
1208 ) TOKPR_FECHADO
1209 { TOKCH_ABERTO
1210 strcpy TOKIDENTIFICADOR
1210 ( TOKPS_ABERTO
1210 token TOKIDENTIFICADOR
1210 , TOKVIRGULA
1210 TOKPR_FECHADO TOKIDENTIFICADOR
1210 [ TOKPR_ABERTO
1210 1 TOK_NINT
1210 ] TOKPR_FECHADO
1210 ) TOKPR_FECHADO
1210 ; TOKPVIRGULA
1211 printf TOKIDENTIFICADOR
1211 ( TOKPS_ABERTO
1211 , TOKVIRGULA
1211 linha TOKIDENTIFICADOR
1211 , TOKVIRGULA
1211 lexema TOKIDENTIFICADOR
1211 , TOKVIRGULA
1211 token TOKIDENTIFICADOR
1211 ) TOKPR_FECHADO
1211 ; TOKPVIRGULA
1212 fprintf TOKIDENTIFICADOR
1212 ( TOKPS_ABERTO
1212 pont_arq TOKIDENTIFICADOR
1212 , TOKVIRGULA
1212 , TOKVIRGULA
1212 linha TOKIDENTIFICADOR
1212 , TOKVIRGULA
1212 lexema TOKIDENTIFICADOR
1212 , TOKVIRGULA
1212 token TOKIDENTIFICADOR
1212 ) TOKPR_FECHADO
1212 ; TOKPVIRGULA
1213 } TOKCH_FECHADO
1214 else PALRESERVADA
1214 if PALRESERVADA
1214 ( TOKPS_ABERTO
1214 strcmp TOKIDENTIFICADOR
1214 ( TOKPS_ABERTO
1214 lexema TOKIDENTIFICADOR
1214 , TOKVIRGULA
1214 TOKCH_ABERTO TOKIDENTIFICADOR
1214 [ TOKPR_ABERTO
1214 0 TOK_NINT
1214 ] TOKPR_FECHADO
1214 ) TOKPR_FECHADO
1214 == TOKATR_COMPOSTA
1214 0 TOK_NINT
1214 ) TOKPR_FECHADO
1215 { TOKCH_ABERTO
1216 strcpy TOKIDENTIFICADOR
1216 ( TOKPS_ABERTO
1216 token TOKIDENTIFICADOR
1216 , TOKVIRGULA
1216 TOKCH_ABERTO TOKIDENTIFICADOR
1216 [ TOKPR_ABERTO
1216 1 TOK_NINT
1216 ] TOKPR_FECHADO
1216 ) TOKPR_FECHADO
1216 ; TOKPVIRGULA
1217 printf TOKIDENTIFICADOR
1217 ( TOKPS_ABERTO
1217 , TOKVIRGULA
1217 linha TOKIDENTIFICADOR
1217 , TOKVIRGULA
1217 lexema TOKIDENTIFICADOR
1217 , TOKVIRGULA
1217 token TOKIDENTIFICADOR
1217 ) TOKPR_FECHADO
1217 ; TOKPVIRGULA
1218 fprintf TOKIDENTIFICADOR
1218 ( TOKPS_ABERTO
1218 pont_arq TOKIDENTIFICADOR
1218 , TOKVIRGULA
1218 , TOKVIRGULA
1218 linha TOKIDENTIFICADOR
1218 , TOKVIRGULA
1218 lexema TOKIDENTIFICADOR
1218 , TOKVIRGULA
1218 token TOKIDENTIFICADOR
1218 ) TOKPR_FECHADO
1218 ; TOKPVIRGULA
1219 } TOKCH_FECHADO
1220 else PALRESERVADA
1220 if PALRESERVADA
1220 ( TOKPS_ABERTO
1220 strcmp TOKIDENTIFICADOR
1220 ( TOKPS_ABERTO
1220 lexema TOKIDENTIFICADOR
1220 , TOKVIRGULA
1220 TOKCH_FECHADO TOKIDENTIFICADOR
1220 [ TOKPR_ABERTO
1220 0 TOK_NINT
1220 ] TOKPR_FECHADO
1220 ) TOKPR_FECHADO
1220 == TOKATR_COMPOSTA
1220 0 TOK_NINT
1220 ) TOKPR_FECHADO
1221 { TOKCH_ABERTO
1222 strcpy TOKIDENTIFICADOR
1222 ( TOKPS_ABERTO
1222 token TOKIDENTIFICADOR
1222 , TOKVIRGULA
1222 TOKCH_FECHADO TOKIDENTIFICADOR
1222 [ TOKPR_ABERTO
1222 1 TOK_NINT
1222 ] TOKPR_FECHADO
1222 ) TOKPR_FECHADO
1222 ; TOKPVIRGULA
1223 printf TOKIDENTIFICADOR
1223 ( TOKPS_ABERTO
1223 , TOKVIRGULA
1223 linha TOKIDENTIFICADOR
1223 , TOKVIRGULA
1223 lexema TOKIDENTIFICADOR
1223 , TOKVIRGULA
1223 token TOKIDENTIFICADOR
1223 ) TOKPR_FECHADO
1223 ; TOKPVIRGULA
1224 fprintf TOKIDENTIFICADOR
1224 ( TOKPS_ABERTO
1224 pont_arq TOKIDENTIFICADOR
1224 , TOKVIRGULA
1224 , TOKVIRGULA
1224 linha TOKIDENTIFICADOR
1224 , TOKVIRGULA
1224 lexema TOKIDENTIFICADOR
1224 , TOKVIRGULA
1224 token TOKIDENTIFICADOR
1224 ) TOKPR_FECHADO
1224 ; TOKPVIRGULA
1225 } TOKCH_FECHADO
1226 else PALRESERVADA
1226 if PALRESERVADA
1226 ( TOKPS_ABERTO
1226 strcmp TOKIDENTIFICADOR
1226 ( TOKPS_ABERTO
1226 lexema TOKIDENTIFICADOR
1226 , TOKVIRGULA
1226 TOKPR_ABERTO TOKIDENTIFICADOR
1226 [ TOKPR_ABERTO
1226 0 TOK_NINT
1226 ] TOKPR_FECHADO
1226 ) TOKPR_FECHADO
1226 == TOKATR_COMPOSTA
1226 0 TOK_NINT
1226 ) TOKPR_FECHADO
1227 { TOKCH_ABERTO
1228 strcpy TOKIDENTIFICADOR
1228 ( TOKPS_ABERTO
1228 token TOKIDENTIFICADOR
1228 , TOKVIRGULA
1228 TOKPR_ABERTO TOKIDENTIFICADOR
1228 [ TOKPR_ABERTO
1228 1 TOK_NINT
1228 ] TOKPR_FECHADO
1228 ) TOKPR_FECHADO
1228 ; TOKPVIRGULA
1229 printf TOKIDENTIFICADOR
1229 ( TOKPS_ABERTO
1229 , TOKVIRGULA
1229 linha TOKIDENTIFICADOR
1229 , TOKVIRGULA
1229 lexema TOKIDENTIFICADOR
1229 , TOKVIRGULA
1229 token TOKIDENTIFICADOR
1229 ) TOKPR_FECHADO
1229 ; TOKPVIRGULA
1230 fprintf TOKIDENTIFICADOR
1230 ( TOKPS_ABERTO
1230 pont_arq TOKIDENTIFICADOR
1230 , TOKVIRGULA
1230 , TOKVIRGULA
1230 linha TOKIDENTIFICADOR
1230 , TOKVIRGULA
1230 lexema TOKIDENTIFICADOR
1230 , TOKVIRGULA
1230 token TOKIDENTIFICADOR
1230 ) TOKPR_FECHADO
1230 ; TOKPVIRGULA
1231 } TOKCH_FECHADO
1232 else PALRESERVADA
1232 if PALRESERVADA
1232 ( TOKPS_ABERTO
1232 strcmp TOKIDENTIFICADOR
1232 ( TOKPS_ABERTO
1232 lexema TOKIDENTIFICADOR
1232 , TOKVIRGULA
1232 TOKPR_FECHADO TOKIDENTIFICADOR
1232 [ TOKPR_ABERTO
1232 0 TOK_NINT
1232 ] TOKPR_FECHADO
1232 ) TOKPR_FECHADO
1232 == TOKATR_COMPOSTA
1232 0 TOK_NINT
1232 ) TOKPR_FECHADO
1233 { TOKCH_ABERTO
1234 strcpy TOKIDENTIFICADOR
1234 ( TOKPS_ABERTO
1234 token TOKIDENTIFICADOR
1234 , TOKVIRGULA
1234 TOKPR_FECHADO TOKIDENTIFICADOR
1234 [ TOKPR_ABERTO
1234 1 TOK_NINT
1234 ] TOKPR_FECHADO
1234 ) TOKPR_FECHADO
1234 ; TOKPVIRGULA
1235 printf TOKIDENTIFICADOR
1235 ( TOKPS_ABERTO
1235 , TOKVIRGULA
1235 linha TOKIDENTIFICADOR
1235 , TOKVIRGULA
1235 lexema TOKIDENTIFICADOR
1235 , TOKVIRGULA
1235 token TOKIDENTIFICADOR
1235 ) TOKPR_FECHADO
1235 ; TOKPVIRGULA
1236 fprintf TOKIDENTIFICADOR
1236 ( TOKPS_ABERTO
1236 pont_arq TOKIDENTIFICADOR
1236 , TOKVIRGULA
1236 , TOKVIRGULA
1236 linha TOKIDENTIFICADOR
1236 , TOKVIRGULA
1236 lexema TOKIDENTIFICADOR
1236 , TOKVIRGULA
1236 token TOKIDENTIFICADOR
1236 ) TOKPR_FECHADO
1236 ; TOKPVIRGULA
1237 } TOKCH_FECHADO
1238 else PALRESERVADA
1238 if PALRESERVADA
1238 ( TOKPS_ABERTO
1238 strcmp TOKIDENTIFICADOR
1238 ( TOKPS_ABERTO
1238 lexema TOKIDENTIFICADOR
1238 , TOKVIRGULA
1238 TOKVIRGULA TOKIDENTIFICADOR
1238 [ TOKPR_ABERTO
1238 0 TOK_NINT
1238 ] TOKPR_FECHADO
1238 ) TOKPR_FECHADO
1238 == TOKATR_COMPOSTA
1238 0 TOK_NINT
1238 ) TOKPR_FECHADO
1239 { TOKCH_ABERTO
1240 strcpy TOKIDENTIFICADOR
1240 ( TOKPS_ABERTO
1240 token TOKIDENTIFICADOR
1240 , TOKVIRGULA
1240 TOKVIRGULA TOKIDENTIFICADOR
1240 [ TOKPR_ABERTO
1240 1 TOK_NINT
1240 ] TOKPR_FECHADO
1240 ) TOKPR_FECHADO
1240 ; TOKPVIRGULA
1241 printf TOKIDENTIFICADOR
1241 ( TOKPS_ABERTO
1241 , TOKVIRGULA
1241 linha TOKIDENTIFICADOR
1241 , TOKVIRGULA
1241 lexema TOKIDENTIFICADOR
1241 , TOKVIRGULA
1241 token TOKIDENTIFICADOR
1241 ) TOKPR_FECHADO
1241 ; TOKPVIRGULA
1242 fprintf TOKIDENTIFICADOR
1242 ( TOKPS_ABERTO
1242 pont_arq TOKIDENTIFICADOR
1242 , TOKVIRGULA
1242 , TOKVIRGULA
1242 linha TOKIDENTIFICADOR
1242 , TOKVIRGULA
1242 lexema TOKIDENTIFICADOR
1242 , TOKVIRGULA
1242 token TOKIDENTIFICADOR
1242 ) TOKPR_FECHADO
1242 ; TOKPVIRGULA
1243 } TOKCH_FECHADO
1244 else PALRESERVADA
1244 if PALRESERVADA
1244 ( TOKPS_ABERTO
1244 strcmp TOKIDENTIFICADOR
1244 ( TOKPS_ABERTO
1244 lexema TOKIDENTIFICADOR
1244 , TOKVIRGULA
1244 TOKPVIRGULA TOKIDENTIFICADOR
1244 [ TOKPR_ABERTO
1244 0 TOK_NINT
1244 ] TOKPR_FECHADO
1244 ) TOKPR_FECHADO
1244 == TOKATR_COMPOSTA
1244 0 TOK_NINT
1244 ) TOKPR_FECHADO
1245 { TOKCH_ABERTO
1246 strcpy TOKIDENTIFICADOR
1246 ( TOKPS_ABERTO
1246 token TOKIDENTIFICADOR
1246 , TOKVIRGULA
1246 TOKPVIRGULA TOKIDENTIFICADOR
1246 [ TOKPR_ABERTO
1246 1 TOK_NINT
1246 ] TOKPR_FECHADO
1246 ) TOKPR_FECHADO
1246 ; TOKPVIRGULA
1247 printf TOKIDENTIFICADOR
1247 ( TOKPS_ABERTO
1247 , TOKVIRGULA
1247 linha TOKIDENTIFICADOR
1247 , TOKVIRGULA
1247 lexema TOKIDENTIFICADOR
1247 , TOKVIRGULA
1247 token TOKIDENTIFICADOR
1247 ) TOKPR_FECHADO
1247 ; TOKPVIRGULA
1248 fprintf TOKIDENTIFICADOR
1248 ( TOKPS_ABERTO
1248 pont_arq TOKIDENTIFICADOR
1248 , TOKVIRGULA
1248 , TOKVIRGULA
1248 linha TOKIDENTIFICADOR
1248 , TOKVIRGULA
1248 lexema TOKIDENTIFICADOR
1248 , TOKVIRGULA
1248 token TOKIDENTIFICADOR
1248 ) TOKPR_FECHADO
1248 ; TOKPVIRGULA
1249 } TOKCH_FECHADO
1250 else PALRESERVADA
1250 if PALRESERVADA
1250 ( TOKPS_ABERTO
1250 strcmp TOKIDENTIFICADOR
1250 ( TOKPS_ABERTO
1250 lexema TOKIDENTIFICADOR
1250 , TOKVIRGULA
1250 TOKBITCATR TOKIDENTIFICADOR
1250 [ TOKPR_ABERTO
1250 0 TOK_NINT
1250 ] TOKPR_FECHADO
1250 ) TOKPR_FECHADO
1250 == TOKATR_COMPOSTA
1250 0 TOK_NINT
1250 ) TOKPR_FECHADO
1251 { TOKCH_ABERTO
1252 strcpy TOKIDENTIFICADOR
1252 ( TOKPS_ABERTO
1252 token TOKIDENTIFICADOR
1252 , TOKVIRGULA
1252 TOKBITCATR TOKIDENTIFICADOR
1252 [ TOKPR_ABERTO
1252 1 TOK_NINT
1252 ] TOKPR_FECHADO
1252 ) TOKPR_FECHADO
1252 ; TOKPVIRGULA
1253 printf TOKIDENTIFICADOR
1253 ( TOKPS_ABERTO
1253 , TOKVIRGULA
1253 linha TOKIDENTIFICADOR
1253 , TOKVIRGULA
1253 lexema TOKIDENTIFICADOR
1253 , TOKVIRGULA
1253 token TOKIDENTIFICADOR
1253 ) TOKPR_FECHADO
1253 ; TOKPVIRGULA
1254 fprintf TOKIDENTIFICADOR
1254 ( TOKPS_ABERTO
1254 pont_arq TOKIDENTIFICADOR
1254 , TOKVIRGULA
1254 , TOKVIRGULA
1254 linha TOKIDENTIFICADOR
1254 , TOKVIRGULA
1254 lexema TOKIDENTIFICADOR
1254 , TOKVIRGULA
1254 token TOKIDENTIFICADOR
1254 ) TOKPR_FECHADO
1254 ; TOKPVIRGULA
1255 } TOKCH_FECHADO
1256 else PALRESERVADA
1256 if PALRESERVADA
1256 ( TOKPS_ABERTO
1256 strcmp TOKIDENTIFICADOR
1256 ( TOKPS_ABERTO
1256 lexema TOKIDENTIFICADOR
1256 , TOKVIRGULA
1256 TOKCOM TOKIDENTIFICADOR
1256 [ TOKPR_ABERTO
1256 0 TOK_NINT
1256 ] TOKPR_FECHADO
1256 ) TOKPR_FECHADO
1256 == TOKATR_COMPOSTA
1256 0 TOK_NINT
1256 ) TOKPR_FECHADO
1257 { TOKCH_ABERTO
1258 strcpy TOKIDENTIFICADOR
1258 ( TOKPS_ABERTO
1258 token TOKIDENTIFICADOR
1258 , TOKVIRGULA
1258 TOKCOM TOKIDENTIFICADOR
1258 [ TOKPR_ABERTO
1258 1 TOK_NINT
1258 ] TOKPR_FECHADO
1258 ) TOKPR_FECHADO
1258 ; TOKPVIRGULA
1259 printf TOKIDENTIFICADOR
1259 ( TOKPS_ABERTO
1259 , TOKVIRGULA
1259 linha TOKIDENTIFICADOR
1259 , TOKVIRGULA
1259 lexema TOKIDENTIFICADOR
1259 , TOKVIRGULA
1259 token TOKIDENTIFICADOR
1259 ) TOKPR_FECHADO
1259 ; TOKPVIRGULA
1260 fprintf TOKIDENTIFICADOR
1260 ( TOKPS_ABERTO
1260 pont_arq TOKIDENTIFICADOR
1260 , TOKVIRGULA
1260 , TOKVIRGULA
1260 linha TOKIDENTIFICADOR
1260 , TOKVIRGULA
1260 lexema TOKIDENTIFICADOR
1260 , TOKVIRGULA
1260 token TOKIDENTIFICADOR
1260 ) TOKPR_FECHADO
1260 ; TOKPVIRGULA
1261 } TOKCH_FECHADO
1262 else PALRESERVADA
1262 if PALRESERVADA
1262 ( TOKPS_ABERTO
1262 strcmp TOKIDENTIFICADOR
1262 ( TOKPS_ABERTO
1262 lexema TOKIDENTIFICADOR
1262 , TOKVIRGULA
1262 TOKOREX TOKIDENTIFICADOR
1262 [ TOKPR_ABERTO
1262 0 TOK_NINT
1262 ] TOKPR_FECHADO
1262 ) TOKPR_FECHADO
1262 == TOKATR_COMPOSTA
1262 0 TOK_NINT
1262 ) TOKPR_FECHADO
1263 { TOKCH_ABERTO
1264 strcpy TOKIDENTIFICADOR
1264 ( TOKPS_ABERTO
1264 token TOKIDENTIFICADOR
1264 , TOKVIRGULA
1264 TOKOREX TOKIDENTIFICADOR
1264 [ TOKPR_ABERTO
1264 1 TOK_NINT
1264 ] TOKPR_FECHADO
1264 ) TOKPR_FECHADO
1264 ; TOKPVIRGULA
1265 printf TOKIDENTIFICADOR
1265 ( TOKPS_ABERTO
1265 , TOKVIRGULA
1265 linha TOKIDENTIFICADOR
1265 , TOKVIRGULA
1265 lexema TOKIDENTIFICADOR
1265 , TOKVIRGULA
1265 token TOKIDENTIFICADOR
1265 ) TOKPR_FECHADO
1265 ; TOKPVIRGULA
1266 fprintf TOKIDENTIFICADOR
1266 ( TOKPS_ABERTO
1266 pont_arq TOKIDENTIFICADOR
1266 , TOKVIRGULA
1266 , TOKVIRGULA
1266 linha TOKIDENTIFICADOR
1266 , TOKVIRGULA
1266 lexema TOKIDENTIFICADOR
1266 , TOKVIRGULA
1266 token TOKIDENTIFICADOR
1266 ) TOKPR_FECHADO
1266 ; TOKPVIRGULA
1267 } TOKCH_FECHADO
1268 else PALRESERVADA
1268 if PALRESERVADA
1268 ( TOKPS_ABERTO
1268 strcmp TOKIDENTIFICADOR
1268 ( TOKPS_ABERTO
1268 lexema TOKIDENTIFICADOR
1268 , TOKVIRGULA
1268 TOKPERCENT TOKIDENTIFICADOR
1268 [ TOKPR_ABERTO
1268 0 TOK_NINT
1268 ] TOKPR_FECHADO
1268 ) TOKPR_FECHADO
1268 == TOKATR_COMPOSTA
1268 0 TOK_NINT
1268 ) TOKPR_FECHADO
1269 { TOKCH_ABERTO
1270 strcpy TOKIDENTIFICADOR
1270 ( TOKPS_ABERTO
1270 token TOKIDENTIFICADOR
1270 , TOKVIRGULA
1270 TOKPERCENT TOKIDENTIFICADOR
1270 [ TOKPR_ABERTO
1270 1 TOK_NINT
1270 ] TOKPR_FECHADO
1270 ) TOKPR_FECHADO
1270 ; TOKPVIRGULA
1271 printf TOKIDENTIFICADOR
1271 ( TOKPS_ABERTO
1271 , TOKVIRGULA
1271 linha TOKIDENTIFICADOR
1271 , TOKVIRGULA
1271 lexema TOKIDENTIFICADOR
1271 , TOKVIRGULA
1271 token TOKIDENTIFICADOR
1271 ) TOKPR_FECHADO
1271 ; TOKPVIRGULA
1272 fprintf TOKIDENTIFICADOR
1272 ( TOKPS_ABERTO
1272 pont_arq TOKIDENTIFICADOR
1272 , TOKVIRGULA
1272 , TOKVIRGULA
1272 linha TOKIDENTIFICADOR
1272 , TOKVIRGULA
1272 lexema TOKIDENTIFICADOR
1272 , TOKVIRGULA
1272 token TOKIDENTIFICADOR
1272 ) TOKPR_FECHADO
1272 ; TOKPVIRGULA
1273 } TOKCH_FECHADO
1274 lexema TOKIDENTIFICADOR
1274 [ TOKPR_ABERTO
1274 0 TOK_NINT
1274 ] TOKPR_FECHADO
1274 = TOKMUL
1274 '\0' TOKCARATER
1274 ; TOKPVIRGULA
1275 verifica TOKIDENTIFICADOR
1275 = TOKMUL
1275 1 TOK_NINT
1275 ; TOKPVIRGULA
1276 estado TOKIDENTIFICADOR
1276 = TOKMUL
1276 0 TOK_NINT
1276 ; TOKPVIRGULA
1277 break PALRESERVADA
1277 ; TOKPVIRGULA
1278 } TOKCH_FECHADO
1279 case PALRESERVADA
1279 67 TOK_NINT
1279 : TOKATR_BIT
1280 volta_char TOKIDENTIFICADOR
1280 ( TOKPS_ABERTO
1280 farq TOKIDENTIFICADOR
1280 ) TOKPR_FECHADO
1280 ; TOKPVIRGULA
1281 strcpy TOKIDENTIFICADOR
1281 ( TOKPS_ABERTO
1281 token TOKIDENTIFICADOR
1281 , TOKVIRGULA
1281 ) TOKPR_FECHADO
1281 ; TOKPVIRGULA
1282 printf TOKIDENTIFICADOR
1282 ( TOKPS_ABERTO
1282 , TOKVIRGULA
1282 linha TOKIDENTIFICADOR
1282 , TOKVIRGULA
1282 lexema TOKIDENTIFICADOR
1282 , TOKVIRGULA
1282 token TOKIDENTIFICADOR
1282 ) TOKPR_FECHADO
1282 ; TOKPVIRGULA
1283 fprintf TOKIDENTIFICADOR
1283 ( TOKPS_ABERTO
1283 pont_arq TOKIDENTIFICADOR
1283 , TOKVIRGULA
1283 , TOKVIRGULA
1283 linha TOKIDENTIFICADOR
1283 , TOKVIRGULA
1283 lexema TOKIDENTIFICADOR
1283 , TOKVIRGULA
1283 token TOKIDENTIFICADOR
1283 ) TOKPR_FECHADO
1283 ; TOKPVIRGULA
1284 lexema TOKIDENTIFICADOR
1284 [ TOKPR_ABERTO
1284 0 TOK_NINT
1284 ] TOKPR_FECHADO
1284 = TOKMUL
1284 '\0' TOKCARATER
1284 ; TOKPVIRGULA
1285 estado TOKIDENTIFICADOR
1285 = TOKMUL
1285 0 TOK_NINT
1285 ; TOKPVIRGULA
1286 break PALRESERVADA
1286 ; TOKPVIRGULA
1287 case PALRESERVADA
1287 68 TOK_NINT
1287 : TOKATR_BIT
1288 volta_char TOKIDENTIFICADOR
1288 ( TOKPS_ABERTO
1288 farq TOKIDENTIFICADOR
1288 ) TOKPR_FECHADO
1288 ; TOKPVIRGULA
1289 strcpy TOKIDENTIFICADOR
1289 ( TOKPS_ABERTO
1289 token TOKIDENTIFICADOR
1289 , TOKVIRGULA
1289 ) TOKPR_FECHADO
1289 ; TOKPVIRGULA
1290 printf TOKIDENTIFICADOR
1290 ( TOKPS_ABERTO
1290 , TOKVIRGULA
1290 linha TOKIDENTIFICADOR
1290 , TOKVIRGULA
1290 lexema TOKIDENTIFICADOR
1290 , TOKVIRGULA
1290 token TOKIDENTIFICADOR
1290 ) TOKPR_FECHADO
1290 ; TOKPVIRGULA
1291 fprintf TOKIDENTIFICADOR
1291 ( TOKPS_ABERTO
1291 pont_arq TOKIDENTIFICADOR
1291 , TOKVIRGULA
1291 , TOKVIRGULA
1291 linha TOKIDENTIFICADOR
1291 , TOKVIRGULA
1291 lexema TOKIDENTIFICADOR
1291 , TOKVIRGULA
1291 token TOKIDENTIFICADOR
1291 ) TOKPR_FECHADO
1291 ; TOKPVIRGULA
1292 lexema TOKIDENTIFICADOR
1292 [ TOKPR_ABERTO
1292 0 TOK_NINT
1292 ] TOKPR_FECHADO
1292 = TOKMUL
1292 '\0' TOKCARATER
1292 ; TOKPVIRGULA
1293 estado TOKIDENTIFICADOR
1293 = TOKMUL
1293 0 TOK_NINT
1293 ; TOKPVIRGULA
1294 break PALRESERVADA
1294 ; TOKPVIRGULA
1295 default PALRESERVADA
1295 : TOKATR_BIT
1296 break PALRESERVADA
1296 ; TOKPVIRGULA
1297 } TOKCH_FECHADO
1298 } TOKCH_FECHADO
1299 } TOKCH_FECHADO
