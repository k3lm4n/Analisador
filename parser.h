#include <stdbool.h>

typedef struct lex Lex;    
typedef struct lista Lista;

Lista *init();
Lista *insere(Lista *li, Lex tab);
void imp(Lista *li);


Lista *digital(Lista *li);
void sintatico(Lista *li);
void program(Lista *li);
Lista *externs(Lista *li);
Lista *external(Lista *li);
Lista *func(Lista *li);
Lista *restoextern(Lista *li);
Lista *restoextern2(Lista *li);
Lista *restovars(Lista *li);
Lista *type(Lista *li);
Lista *funct(Lista *li);
Lista *dcls(Lista *li);
Lista *var(Lista *li);
Lista *stmts(Lista *li);
Lista *expro(Lista *li);
Lista *stmt(Lista *li);
Lista *restoreturn(Lista *li);
Lista *expr(Lista *li);
Lista *block(Lista *li);
Lista *restoif(Lista *li);
Lista *f_args(Lista *li);
Lista *restof_args(Lista *li);
Lista *args(Lista *li);
Lista *dclr(Lista *li);
Lista *restot_args(Lista *li);
Lista *restoif(Lista *li);
Lista *f_args(Lista *li);
Lista *restof_args(Lista *li);
Lista *args(Lista *li);
Lista *dclr(Lista *li);
Lista *restot_args(Lista *li);
Lista *restodclr(Lista *li);
Lista *restodclr2(Lista *li);
bool soma(Lista *li);
bool mult(Lista *li);
bool ender(Lista *li);
bool uno(Lista *li);
bool notbin(Lista *li);
Lista *lval(Lista *li);
bool incpre(Lista *li);
bool incpos(Lista *li);
Lista *restoincpos(Lista *li);
bool restofator1(Lista *li);
bool fator(Lista *li);
bool restomult(Lista *li);
bool restosoma(Lista *li);
bool restorola(Lista *li);
bool rola(Lista *li);
bool restoandbin(Lista *li);
bool andbin(Lista *li);
Lista *expr(Lista *li);
Lista *exprs(Lista *li);
bool restofator1(Lista *li);
Lista *restofator2(Lista *li);
Lista *restoexprs(Lista *li);
Lista *restoexpr(Lista *li, bool lval);
bool restoor(Lista *li);
bool restoand(Lista *li);
bool cfator(Lista *li);
bool orbin(Lista *li);
bool restoorbin(Lista *li);
bool restoxorbin(Lista *li);
bool xorbin(Lista *li);
bool restocfator(Lista *li);
bool _not(Lista * li);
bool _and(Lista * li);
bool _or(Lista * li);
bool restoand(Lista *li);
Lista *restolval(Lista *li);
